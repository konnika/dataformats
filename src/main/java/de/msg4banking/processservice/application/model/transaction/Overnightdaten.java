/*
 * Gesch채fte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Die Eingaben f체r die Overnightdaten.
 */
@JsonPropertyOrder({
        Overnightdaten.JSON_PROPERTY_OFFSETTAGE,
        Overnightdaten.JSON_PROPERTY_TAGESGELDZINSEN,
        Overnightdaten.JSON_PROPERTY_VARIANTE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class Overnightdaten {
    public static final String JSON_PROPERTY_OFFSETTAGE = "offsettage";
    private Integer offsettage;

    public static final String JSON_PROPERTY_TAGESGELDZINSEN = "tagesgeldzinsen";
    private List<@Valid Tagesgeldzins> tagesgeldzinsen;

    public static final String JSON_PROPERTY_VARIANTE = "variante";
    private OvernightVariante variante;

    public Overnightdaten() {
    }

    public Overnightdaten offsettage(Integer offsettage) {

        this.offsettage = offsettage;
        return this;
    }

    /**
     * Anzahl der Offsettage, um die die Beobachtungsperioden gegen체ber den Zinsperioden verschoben oder verk체rzt werden.
     *
     * @return offsettage
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_OFFSETTAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getOffsettage() {
        return offsettage;
    }


    @JsonProperty(JSON_PROPERTY_OFFSETTAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOffsettage(Integer offsettage) {
        this.offsettage = offsettage;
    }

    public Overnightdaten tagesgeldzinsen(List<@Valid Tagesgeldzins> tagesgeldzinsen) {

        this.tagesgeldzinsen = tagesgeldzinsen;
        return this;
    }

    public Overnightdaten addTagesgeldzinsenItem(Tagesgeldzins tagesgeldzinsenItem) {
        if (this.tagesgeldzinsen == null) {
            this.tagesgeldzinsen = new ArrayList<>();
        }
        this.tagesgeldzinsen.add(tagesgeldzinsenItem);
        return this;
    }

    /**
     * Get tagesgeldzinsen
     *
     * @return tagesgeldzinsen
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_TAGESGELDZINSEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<@Valid Tagesgeldzins> getTagesgeldzinsen() {
        return tagesgeldzinsen;
    }


    @JsonProperty(JSON_PROPERTY_TAGESGELDZINSEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTagesgeldzinsen(List<@Valid Tagesgeldzins> tagesgeldzinsen) {
        this.tagesgeldzinsen = tagesgeldzinsen;
    }

    public Overnightdaten variante(OvernightVariante variante) {

        this.variante = variante;
        return this;
    }

    /**
     * Get variante
     *
     * @return variante
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_VARIANTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OvernightVariante getVariante() {
        return variante;
    }


    @JsonProperty(JSON_PROPERTY_VARIANTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVariante(OvernightVariante variante) {
        this.variante = variante;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Overnightdaten overnightdaten = (Overnightdaten) o;
        return Objects.equals(this.offsettage, overnightdaten.offsettage) &&
                Objects.equals(this.tagesgeldzinsen, overnightdaten.tagesgeldzinsen) &&
                Objects.equals(this.variante, overnightdaten.variante);
    }

    @Override
    public int hashCode() {
        return Objects.hash(offsettage, tagesgeldzinsen, variante);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Overnightdaten {\n");
        sb.append("    offsettage: ").append(toIndentedString(offsettage)).append("\n");
        sb.append("    tagesgeldzinsen: ").append(toIndentedString(tagesgeldzinsen)).append("\n");
        sb.append("    variante: ").append(toIndentedString(variante)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

