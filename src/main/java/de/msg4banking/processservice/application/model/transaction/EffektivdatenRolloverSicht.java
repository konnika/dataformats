/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * EffektivdatenRolloverSicht
 */
@JsonPropertyOrder({
        EffektivdatenRolloverSicht.JSON_PROPERTY_EFFEKTIVZINS_P_ANG_V,
        EffektivdatenRolloverSicht.JSON_PROPERTY_EFFEKTIVZINS_P_ANG_V_UNGERUNDET
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class EffektivdatenRolloverSicht {
    public static final String JSON_PROPERTY_EFFEKTIVZINS_P_ANG_V = "effektivzinsPAngV";
    private BigDecimal effektivzinsPAngV;

    public static final String JSON_PROPERTY_EFFEKTIVZINS_P_ANG_V_UNGERUNDET = "effektivzinsPAngVUngerundet";
    private BigDecimal effektivzinsPAngVUngerundet;

    public EffektivdatenRolloverSicht() {
    }

    public EffektivdatenRolloverSicht effektivzinsPAngV(BigDecimal effektivzinsPAngV) {

        this.effektivzinsPAngV = effektivzinsPAngV;
        return this;
    }

    /**
     * Der Effektivzins gemäß PAngV (Preisangabenverordnung).
     *
     * @return effektivzinsPAngV
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_EFFEKTIVZINS_P_ANG_V)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getEffektivzinsPAngV() {
        return effektivzinsPAngV;
    }


    @JsonProperty(JSON_PROPERTY_EFFEKTIVZINS_P_ANG_V)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEffektivzinsPAngV(BigDecimal effektivzinsPAngV) {
        this.effektivzinsPAngV = effektivzinsPAngV;
    }

    public EffektivdatenRolloverSicht effektivzinsPAngVUngerundet(BigDecimal effektivzinsPAngVUngerundet) {

        this.effektivzinsPAngVUngerundet = effektivzinsPAngVUngerundet;
        return this;
    }

    /**
     * Der ungerundete Effektivzins gemäß PAngV (Preisangabenverordnung).
     *
     * @return effektivzinsPAngVUngerundet
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_EFFEKTIVZINS_P_ANG_V_UNGERUNDET)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getEffektivzinsPAngVUngerundet() {
        return effektivzinsPAngVUngerundet;
    }


    @JsonProperty(JSON_PROPERTY_EFFEKTIVZINS_P_ANG_V_UNGERUNDET)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEffektivzinsPAngVUngerundet(BigDecimal effektivzinsPAngVUngerundet) {
        this.effektivzinsPAngVUngerundet = effektivzinsPAngVUngerundet;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EffektivdatenRolloverSicht effektivdatenRolloverSicht = (EffektivdatenRolloverSicht) o;
        return Objects.equals(this.effektivzinsPAngV, effektivdatenRolloverSicht.effektivzinsPAngV) &&
                Objects.equals(this.effektivzinsPAngVUngerundet, effektivdatenRolloverSicht.effektivzinsPAngVUngerundet);
    }

    @Override
    public int hashCode() {
        return Objects.hash(effektivzinsPAngV, effektivzinsPAngVUngerundet);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EffektivdatenRolloverSicht {\n");
        sb.append("    effektivzinsPAngV: ").append(toIndentedString(effektivzinsPAngV)).append("\n");
        sb.append("    effektivzinsPAngVUngerundet: ").append(toIndentedString(effektivzinsPAngVUngerundet)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

