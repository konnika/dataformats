/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * MargedatenImport
 */
@JsonPropertyOrder({
        MargedatenImport.JSON_PROPERTY_ENTNAHMEART_MARGE_PROZENT_EFFEKTIV,
        MargedatenImport.JSON_PROPERTY_BEWERTUNGSZINS,
        MargedatenImport.JSON_PROPERTY_BERECHNUNG_MIT_BEWERTUNGSZINS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class MargedatenImport {
    public static final String JSON_PROPERTY_ENTNAHMEART_MARGE_PROZENT_EFFEKTIV = "entnahmeartMargeProzentEffektiv";
    private Entnahmeart entnahmeartMargeProzentEffektiv;

    public static final String JSON_PROPERTY_BEWERTUNGSZINS = "bewertungszins";
    private BigDecimal bewertungszins;

    public static final String JSON_PROPERTY_BERECHNUNG_MIT_BEWERTUNGSZINS = "berechnungMitBewertungszins";
    private Boolean berechnungMitBewertungszins;

    public MargedatenImport() {
    }

    public MargedatenImport entnahmeartMargeProzentEffektiv(Entnahmeart entnahmeartMargeProzentEffektiv) {

        this.entnahmeartMargeProzentEffektiv = entnahmeartMargeProzentEffektiv;
        return this;
    }

    /**
     * Get entnahmeartMargeProzentEffektiv
     *
     * @return entnahmeartMargeProzentEffektiv
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ENTNAHMEART_MARGE_PROZENT_EFFEKTIV)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Entnahmeart getEntnahmeartMargeProzentEffektiv() {
        return entnahmeartMargeProzentEffektiv;
    }


    @JsonProperty(JSON_PROPERTY_ENTNAHMEART_MARGE_PROZENT_EFFEKTIV)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEntnahmeartMargeProzentEffektiv(Entnahmeart entnahmeartMargeProzentEffektiv) {
        this.entnahmeartMargeProzentEffektiv = entnahmeartMargeProzentEffektiv;
    }

    public MargedatenImport bewertungszins(BigDecimal bewertungszins) {

        this.bewertungszins = bewertungszins;
        return this;
    }

    /**
     * Auf Basis des Bewertungszinses (in Prozent) werden die Margenkennzahlen ermittelt. Der Bewertungszins entspricht in gewisser Weise dem Einstandszins bei einem Festzinsdarlehen. Zur Ermittlung des Margenbarwerts wird zusätzlich die aktuelle Zinsstruktur benötigt.
     *
     * @return bewertungszins
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_BEWERTUNGSZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getBewertungszins() {
        return bewertungszins;
    }


    @JsonProperty(JSON_PROPERTY_BEWERTUNGSZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBewertungszins(BigDecimal bewertungszins) {
        this.bewertungszins = bewertungszins;
    }

    public MargedatenImport berechnungMitBewertungszins(Boolean berechnungMitBewertungszins) {

        this.berechnungMitBewertungszins = berechnungMitBewertungszins;
        return this;
    }

    /**
     * Gibt an, ob ein Bewertungszins für die Margenrechnung benutzt wird oder nicht.
     *
     * @return berechnungMitBewertungszins
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_BERECHNUNG_MIT_BEWERTUNGSZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getBerechnungMitBewertungszins() {
        return berechnungMitBewertungszins;
    }


    @JsonProperty(JSON_PROPERTY_BERECHNUNG_MIT_BEWERTUNGSZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBerechnungMitBewertungszins(Boolean berechnungMitBewertungszins) {
        this.berechnungMitBewertungszins = berechnungMitBewertungszins;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MargedatenImport margedatenImport = (MargedatenImport) o;
        return Objects.equals(this.entnahmeartMargeProzentEffektiv, margedatenImport.entnahmeartMargeProzentEffektiv) &&
                Objects.equals(this.bewertungszins, margedatenImport.bewertungszins) &&
                Objects.equals(this.berechnungMitBewertungszins, margedatenImport.berechnungMitBewertungszins);
    }

    @Override
    public int hashCode() {
        return Objects.hash(entnahmeartMargeProzentEffektiv, bewertungszins, berechnungMitBewertungszins);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MargedatenImport {\n");
        sb.append("    entnahmeartMargeProzentEffektiv: ").append(toIndentedString(entnahmeartMargeProzentEffektiv)).append("\n");
        sb.append("    bewertungszins: ").append(toIndentedString(bewertungszins)).append("\n");
        sb.append("    berechnungMitBewertungszins: ").append(toIndentedString(berechnungMitBewertungszins)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

