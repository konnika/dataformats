/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.time.LocalDateTime;
import java.util.Objects;

/**
 * StatusuebergangHistory
 */
@JsonPropertyOrder({
        StatusuebergangHistory.JSON_PROPERTY_ANGEFRAGT_TREASURY_USER,
        StatusuebergangHistory.JSON_PROPERTY_ANGEFRAGT_TREASURY_DATE,
        StatusuebergangHistory.JSON_PROPERTY_GEMELDET_USER,
        StatusuebergangHistory.JSON_PROPERTY_GEMELDET_DATE,
        StatusuebergangHistory.JSON_PROPERTY_FREIGEGEBEN_USER,
        StatusuebergangHistory.JSON_PROPERTY_FREIGEGEBEN_DATE,
        StatusuebergangHistory.JSON_PROPERTY_GEPRUEFT_TREASURY_USER,
        StatusuebergangHistory.JSON_PROPERTY_GEPRUEFT_TREASURY_DATE,
        StatusuebergangHistory.JSON_PROPERTY_GESPERRT_USER,
        StatusuebergangHistory.JSON_PROPERTY_GESPERRT_DATE,
        StatusuebergangHistory.JSON_PROPERTY_ABGELOEST_USER,
        StatusuebergangHistory.JSON_PROPERTY_ABGELOEST_DATE,
        StatusuebergangHistory.JSON_PROPERTY_ANGEFRAGT_FACHLICH_USER,
        StatusuebergangHistory.JSON_PROPERTY_ANGEFRAGT_FACHLICH_DATE,
        StatusuebergangHistory.JSON_PROPERTY_GEPRUEFT_FACHLICH_USER,
        StatusuebergangHistory.JSON_PROPERTY_GEPRUEFT_FACHLICH_DATE,
        StatusuebergangHistory.JSON_PROPERTY_HINWEIS_BERATER,
        StatusuebergangHistory.JSON_PROPERTY_HINWEIS_TREASURY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class StatusuebergangHistory {
    public static final String JSON_PROPERTY_ANGEFRAGT_TREASURY_USER = "angefragtTreasuryUser";
    private String angefragtTreasuryUser;

    public static final String JSON_PROPERTY_ANGEFRAGT_TREASURY_DATE = "angefragtTreasuryDate";
    private LocalDateTime angefragtTreasuryDate;

    public static final String JSON_PROPERTY_GEMELDET_USER = "gemeldetUser";
    private String gemeldetUser;

    public static final String JSON_PROPERTY_GEMELDET_DATE = "gemeldetDate";
    private LocalDateTime gemeldetDate;

    public static final String JSON_PROPERTY_FREIGEGEBEN_USER = "freigegebenUser";
    private String freigegebenUser;

    public static final String JSON_PROPERTY_FREIGEGEBEN_DATE = "freigegebenDate";
    private LocalDateTime freigegebenDate;

    public static final String JSON_PROPERTY_GEPRUEFT_TREASURY_USER = "geprueftTreasuryUser";
    private String geprueftTreasuryUser;

    public static final String JSON_PROPERTY_GEPRUEFT_TREASURY_DATE = "geprueftTreasuryDate";
    private LocalDateTime geprueftTreasuryDate;

    public static final String JSON_PROPERTY_GESPERRT_USER = "gesperrtUser";
    private String gesperrtUser;

    public static final String JSON_PROPERTY_GESPERRT_DATE = "gesperrtDate";
    private LocalDateTime gesperrtDate;

    public static final String JSON_PROPERTY_ABGELOEST_USER = "abgeloestUser";
    private String abgeloestUser;

    public static final String JSON_PROPERTY_ABGELOEST_DATE = "abgeloestDate";
    private LocalDateTime abgeloestDate;

    public static final String JSON_PROPERTY_ANGEFRAGT_FACHLICH_USER = "angefragtFachlichUser";
    private String angefragtFachlichUser;

    public static final String JSON_PROPERTY_ANGEFRAGT_FACHLICH_DATE = "angefragtFachlichDate";
    private LocalDateTime angefragtFachlichDate;

    public static final String JSON_PROPERTY_GEPRUEFT_FACHLICH_USER = "geprueftFachlichUser";
    private String geprueftFachlichUser;

    public static final String JSON_PROPERTY_GEPRUEFT_FACHLICH_DATE = "geprueftFachlichDate";
    private LocalDateTime geprueftFachlichDate;

    public static final String JSON_PROPERTY_HINWEIS_BERATER = "hinweisBerater";
    private String hinweisBerater;

    public static final String JSON_PROPERTY_HINWEIS_TREASURY = "hinweisTreasury";
    private String hinweisTreasury;

    public StatusuebergangHistory() {
    }

    public StatusuebergangHistory angefragtTreasuryUser(String angefragtTreasuryUser) {

        this.angefragtTreasuryUser = angefragtTreasuryUser;
        return this;
    }

    /**
     * Benutzername des Anwenders, der das Darlehen an Treasury angefragt hat.
     *
     * @return angefragtTreasuryUser
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_ANGEFRAGT_TREASURY_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAngefragtTreasuryUser() {
        return angefragtTreasuryUser;
    }


    @JsonProperty(JSON_PROPERTY_ANGEFRAGT_TREASURY_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAngefragtTreasuryUser(String angefragtTreasuryUser) {
        this.angefragtTreasuryUser = angefragtTreasuryUser;
    }

    public StatusuebergangHistory angefragtTreasuryDate(LocalDateTime angefragtTreasuryDate) {

        this.angefragtTreasuryDate = angefragtTreasuryDate;
        return this;
    }

    /**
     * Datum, an dem das Geschäft an Treasury angefragt wurde.
     *
     * @return angefragtTreasuryDate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ANGEFRAGT_TREASURY_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDateTime getAngefragtTreasuryDate() {
        return angefragtTreasuryDate;
    }


    @JsonProperty(JSON_PROPERTY_ANGEFRAGT_TREASURY_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAngefragtTreasuryDate(LocalDateTime angefragtTreasuryDate) {
        this.angefragtTreasuryDate = angefragtTreasuryDate;
    }

    public StatusuebergangHistory gemeldetUser(String gemeldetUser) {

        this.gemeldetUser = gemeldetUser;
        return this;
    }

    /**
     * Benutzername des Anwenders, der das Darlehen gemeldet hat.
     *
     * @return gemeldetUser
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_GEMELDET_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getGemeldetUser() {
        return gemeldetUser;
    }


    @JsonProperty(JSON_PROPERTY_GEMELDET_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGemeldetUser(String gemeldetUser) {
        this.gemeldetUser = gemeldetUser;
    }

    public StatusuebergangHistory gemeldetDate(LocalDateTime gemeldetDate) {

        this.gemeldetDate = gemeldetDate;
        return this;
    }

    /**
     * Datum, an dem das Geschäft gemeldet wurde.
     *
     * @return gemeldetDate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_GEMELDET_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDateTime getGemeldetDate() {
        return gemeldetDate;
    }


    @JsonProperty(JSON_PROPERTY_GEMELDET_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGemeldetDate(LocalDateTime gemeldetDate) {
        this.gemeldetDate = gemeldetDate;
    }

    public StatusuebergangHistory freigegebenUser(String freigegebenUser) {

        this.freigegebenUser = freigegebenUser;
        return this;
    }

    /**
     * Benutzername des Anwenders, der das Darlehen freigegeben hat.
     *
     * @return freigegebenUser
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_FREIGEGEBEN_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getFreigegebenUser() {
        return freigegebenUser;
    }


    @JsonProperty(JSON_PROPERTY_FREIGEGEBEN_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFreigegebenUser(String freigegebenUser) {
        this.freigegebenUser = freigegebenUser;
    }

    public StatusuebergangHistory freigegebenDate(LocalDateTime freigegebenDate) {

        this.freigegebenDate = freigegebenDate;
        return this;
    }

    /**
     * Datum, an dem das Geschäft freigegeben wurde.
     *
     * @return freigegebenDate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_FREIGEGEBEN_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDateTime getFreigegebenDate() {
        return freigegebenDate;
    }


    @JsonProperty(JSON_PROPERTY_FREIGEGEBEN_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFreigegebenDate(LocalDateTime freigegebenDate) {
        this.freigegebenDate = freigegebenDate;
    }

    public StatusuebergangHistory geprueftTreasuryUser(String geprueftTreasuryUser) {

        this.geprueftTreasuryUser = geprueftTreasuryUser;
        return this;
    }

    /**
     * Benutzername des Anwenders, der das Darlehen aus Treasury-Sicht geprüft hat.
     *
     * @return geprueftTreasuryUser
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_GEPRUEFT_TREASURY_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getGeprueftTreasuryUser() {
        return geprueftTreasuryUser;
    }


    @JsonProperty(JSON_PROPERTY_GEPRUEFT_TREASURY_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGeprueftTreasuryUser(String geprueftTreasuryUser) {
        this.geprueftTreasuryUser = geprueftTreasuryUser;
    }

    public StatusuebergangHistory geprueftTreasuryDate(LocalDateTime geprueftTreasuryDate) {

        this.geprueftTreasuryDate = geprueftTreasuryDate;
        return this;
    }

    /**
     * Datum, an dem das Geschäft durch Treasury geprüft wurde.
     *
     * @return geprueftTreasuryDate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_GEPRUEFT_TREASURY_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDateTime getGeprueftTreasuryDate() {
        return geprueftTreasuryDate;
    }


    @JsonProperty(JSON_PROPERTY_GEPRUEFT_TREASURY_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGeprueftTreasuryDate(LocalDateTime geprueftTreasuryDate) {
        this.geprueftTreasuryDate = geprueftTreasuryDate;
    }

    public StatusuebergangHistory gesperrtUser(String gesperrtUser) {

        this.gesperrtUser = gesperrtUser;
        return this;
    }

    /**
     * Benutzername des Anwenders, der das Geschäft gesperrt hat.
     *
     * @return gesperrtUser
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_GESPERRT_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getGesperrtUser() {
        return gesperrtUser;
    }


    @JsonProperty(JSON_PROPERTY_GESPERRT_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGesperrtUser(String gesperrtUser) {
        this.gesperrtUser = gesperrtUser;
    }

    public StatusuebergangHistory gesperrtDate(LocalDateTime gesperrtDate) {

        this.gesperrtDate = gesperrtDate;
        return this;
    }

    /**
     * Datum, an dem das Geschäft gesperrt wurde.
     *
     * @return gesperrtDate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_GESPERRT_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDateTime getGesperrtDate() {
        return gesperrtDate;
    }


    @JsonProperty(JSON_PROPERTY_GESPERRT_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGesperrtDate(LocalDateTime gesperrtDate) {
        this.gesperrtDate = gesperrtDate;
    }

    public StatusuebergangHistory abgeloestUser(String abgeloestUser) {

        this.abgeloestUser = abgeloestUser;
        return this;
    }

    /**
     * Benutzername des Anwenders, der das Geschäft abgelöst hat.
     *
     * @return abgeloestUser
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_ABGELOEST_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAbgeloestUser() {
        return abgeloestUser;
    }


    @JsonProperty(JSON_PROPERTY_ABGELOEST_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAbgeloestUser(String abgeloestUser) {
        this.abgeloestUser = abgeloestUser;
    }

    public StatusuebergangHistory abgeloestDate(LocalDateTime abgeloestDate) {

        this.abgeloestDate = abgeloestDate;
        return this;
    }

    /**
     * Datum, an dem das Geschäft abgelöst wurde.
     *
     * @return abgeloestDate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ABGELOEST_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDateTime getAbgeloestDate() {
        return abgeloestDate;
    }


    @JsonProperty(JSON_PROPERTY_ABGELOEST_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAbgeloestDate(LocalDateTime abgeloestDate) {
        this.abgeloestDate = abgeloestDate;
    }

    public StatusuebergangHistory angefragtFachlichUser(String angefragtFachlichUser) {

        this.angefragtFachlichUser = angefragtFachlichUser;
        return this;
    }

    /**
     * Benutzername des Anwenders, der das Geschäft fachlich angefragt hat.
     *
     * @return angefragtFachlichUser
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_ANGEFRAGT_FACHLICH_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAngefragtFachlichUser() {
        return angefragtFachlichUser;
    }


    @JsonProperty(JSON_PROPERTY_ANGEFRAGT_FACHLICH_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAngefragtFachlichUser(String angefragtFachlichUser) {
        this.angefragtFachlichUser = angefragtFachlichUser;
    }

    public StatusuebergangHistory angefragtFachlichDate(LocalDateTime angefragtFachlichDate) {

        this.angefragtFachlichDate = angefragtFachlichDate;
        return this;
    }

    /**
     * Datum, an dem das Geschäft fachlich angefragt wurde.
     *
     * @return angefragtFachlichDate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ANGEFRAGT_FACHLICH_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDateTime getAngefragtFachlichDate() {
        return angefragtFachlichDate;
    }


    @JsonProperty(JSON_PROPERTY_ANGEFRAGT_FACHLICH_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAngefragtFachlichDate(LocalDateTime angefragtFachlichDate) {
        this.angefragtFachlichDate = angefragtFachlichDate;
    }

    public StatusuebergangHistory geprueftFachlichUser(String geprueftFachlichUser) {

        this.geprueftFachlichUser = geprueftFachlichUser;
        return this;
    }

    /**
     * Benutzername des Anwenders, der das Geschäft fachlich geprüft hat.
     *
     * @return geprueftFachlichUser
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_GEPRUEFT_FACHLICH_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getGeprueftFachlichUser() {
        return geprueftFachlichUser;
    }


    @JsonProperty(JSON_PROPERTY_GEPRUEFT_FACHLICH_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGeprueftFachlichUser(String geprueftFachlichUser) {
        this.geprueftFachlichUser = geprueftFachlichUser;
    }

    public StatusuebergangHistory geprueftFachlichDate(LocalDateTime geprueftFachlichDate) {

        this.geprueftFachlichDate = geprueftFachlichDate;
        return this;
    }

    /**
     * Datum, an dem das Geschäft fachlich geprüft wurde.
     *
     * @return geprueftFachlichDate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_GEPRUEFT_FACHLICH_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDateTime getGeprueftFachlichDate() {
        return geprueftFachlichDate;
    }


    @JsonProperty(JSON_PROPERTY_GEPRUEFT_FACHLICH_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGeprueftFachlichDate(LocalDateTime geprueftFachlichDate) {
        this.geprueftFachlichDate = geprueftFachlichDate;
    }

    public StatusuebergangHistory hinweisBerater(String hinweisBerater) {

        this.hinweisBerater = hinweisBerater;
        return this;
    }

    /**
     * Hinweise im Meldeprozess, seitens des Inhabers der Rolle &#39;Berater&#39; für sich und/oder im Kontext der Schwellenwertprüfung den Adressaten Treasury.
     *
     * @return hinweisBerater
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_HINWEIS_BERATER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getHinweisBerater() {
        return hinweisBerater;
    }


    @JsonProperty(JSON_PROPERTY_HINWEIS_BERATER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHinweisBerater(String hinweisBerater) {
        this.hinweisBerater = hinweisBerater;
    }

    public StatusuebergangHistory hinweisTreasury(String hinweisTreasury) {

        this.hinweisTreasury = hinweisTreasury;
        return this;
    }

    /**
     * Hinweise im Meldeprozess, seitens des Inhabers der Rolle &#39;Treasury&#39; für sich und/oder im Kontext der Schwellenwertprüfung den Adressaten Berater.
     *
     * @return hinweisTreasury
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_HINWEIS_TREASURY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getHinweisTreasury() {
        return hinweisTreasury;
    }


    @JsonProperty(JSON_PROPERTY_HINWEIS_TREASURY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHinweisTreasury(String hinweisTreasury) {
        this.hinweisTreasury = hinweisTreasury;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        StatusuebergangHistory statusuebergangHistory = (StatusuebergangHistory) o;
        return Objects.equals(this.angefragtTreasuryUser, statusuebergangHistory.angefragtTreasuryUser) &&
                Objects.equals(this.angefragtTreasuryDate, statusuebergangHistory.angefragtTreasuryDate) &&
                Objects.equals(this.gemeldetUser, statusuebergangHistory.gemeldetUser) &&
                Objects.equals(this.gemeldetDate, statusuebergangHistory.gemeldetDate) &&
                Objects.equals(this.freigegebenUser, statusuebergangHistory.freigegebenUser) &&
                Objects.equals(this.freigegebenDate, statusuebergangHistory.freigegebenDate) &&
                Objects.equals(this.geprueftTreasuryUser, statusuebergangHistory.geprueftTreasuryUser) &&
                Objects.equals(this.geprueftTreasuryDate, statusuebergangHistory.geprueftTreasuryDate) &&
                Objects.equals(this.gesperrtUser, statusuebergangHistory.gesperrtUser) &&
                Objects.equals(this.gesperrtDate, statusuebergangHistory.gesperrtDate) &&
                Objects.equals(this.abgeloestUser, statusuebergangHistory.abgeloestUser) &&
                Objects.equals(this.abgeloestDate, statusuebergangHistory.abgeloestDate) &&
                Objects.equals(this.angefragtFachlichUser, statusuebergangHistory.angefragtFachlichUser) &&
                Objects.equals(this.angefragtFachlichDate, statusuebergangHistory.angefragtFachlichDate) &&
                Objects.equals(this.geprueftFachlichUser, statusuebergangHistory.geprueftFachlichUser) &&
                Objects.equals(this.geprueftFachlichDate, statusuebergangHistory.geprueftFachlichDate) &&
                Objects.equals(this.hinweisBerater, statusuebergangHistory.hinweisBerater) &&
                Objects.equals(this.hinweisTreasury, statusuebergangHistory.hinweisTreasury);
    }

    @Override
    public int hashCode() {
        return Objects.hash(angefragtTreasuryUser, angefragtTreasuryDate, gemeldetUser, gemeldetDate, freigegebenUser, freigegebenDate, geprueftTreasuryUser, geprueftTreasuryDate, gesperrtUser, gesperrtDate, abgeloestUser, abgeloestDate, angefragtFachlichUser, angefragtFachlichDate, geprueftFachlichUser, geprueftFachlichDate, hinweisBerater, hinweisTreasury);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class StatusuebergangHistory {\n");
        sb.append("    angefragtTreasuryUser: ").append(toIndentedString(angefragtTreasuryUser)).append("\n");
        sb.append("    angefragtTreasuryDate: ").append(toIndentedString(angefragtTreasuryDate)).append("\n");
        sb.append("    gemeldetUser: ").append(toIndentedString(gemeldetUser)).append("\n");
        sb.append("    gemeldetDate: ").append(toIndentedString(gemeldetDate)).append("\n");
        sb.append("    freigegebenUser: ").append(toIndentedString(freigegebenUser)).append("\n");
        sb.append("    freigegebenDate: ").append(toIndentedString(freigegebenDate)).append("\n");
        sb.append("    geprueftTreasuryUser: ").append(toIndentedString(geprueftTreasuryUser)).append("\n");
        sb.append("    geprueftTreasuryDate: ").append(toIndentedString(geprueftTreasuryDate)).append("\n");
        sb.append("    gesperrtUser: ").append(toIndentedString(gesperrtUser)).append("\n");
        sb.append("    gesperrtDate: ").append(toIndentedString(gesperrtDate)).append("\n");
        sb.append("    abgeloestUser: ").append(toIndentedString(abgeloestUser)).append("\n");
        sb.append("    abgeloestDate: ").append(toIndentedString(abgeloestDate)).append("\n");
        sb.append("    angefragtFachlichUser: ").append(toIndentedString(angefragtFachlichUser)).append("\n");
        sb.append("    angefragtFachlichDate: ").append(toIndentedString(angefragtFachlichDate)).append("\n");
        sb.append("    geprueftFachlichUser: ").append(toIndentedString(geprueftFachlichUser)).append("\n");
        sb.append("    geprueftFachlichDate: ").append(toIndentedString(geprueftFachlichDate)).append("\n");
        sb.append("    hinweisBerater: ").append(toIndentedString(hinweisBerater)).append("\n");
        sb.append("    hinweisTreasury: ").append(toIndentedString(hinweisTreasury)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

