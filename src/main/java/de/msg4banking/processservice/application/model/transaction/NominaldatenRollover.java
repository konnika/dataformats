/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Objects;

/**
 * NominaldatenRollover
 */
@JsonPropertyOrder({
        NominaldatenRollover.JSON_PROPERTY_ANNUITAETENZINS,
        NominaldatenRollover.JSON_PROPERTY_ANNUITAETISCHE_RATE,
        NominaldatenRollover.JSON_PROPERTY_ANNUITAETISCHE_RESTSCHULD,
        NominaldatenRollover.JSON_PROPERTY_AUFSCHLAG,
        NominaldatenRollover.JSON_PROPERTY_MINDESTAUFSCHLAG,
        NominaldatenRollover.JSON_PROPERTY_AUSZAHLUNGSDATUM,
        NominaldatenRollover.JSON_PROPERTY_AUSZAHLUNGSBETRAG,
        NominaldatenRollover.JSON_PROPERTY_AUSZAHLUNGSKURS,
        NominaldatenRollover.JSON_PROPERTY_DISAGIO_BETRAG,
        NominaldatenRollover.JSON_PROPERTY_DISAGIO_PROZENT,
        NominaldatenRollover.JSON_PROPERTY_KONTOFUEHRUNG,
        NominaldatenRollover.JSON_PROPERTY_LIQUIDITAETSBINDUNGSENDE,
        NominaldatenRollover.JSON_PROPERTY_LAUFZEIT_LIQUIDITAETSBINDUNG,
        NominaldatenRollover.JSON_PROPERTY_ZINSBINDUNGSENDE,
        NominaldatenRollover.JSON_PROPERTY_LAUFZEIT_ZINSBINDUNG,
        NominaldatenRollover.JSON_PROPERTY_NOMINALBETRAG,
        NominaldatenRollover.JSON_PROPERTY_NOMINALZINS,
        NominaldatenRollover.JSON_PROPERTY_ROLLOVER_VARIANTE,
        NominaldatenRollover.JSON_PROPERTY_SONDERVEREINBARUNGEN,
        NominaldatenRollover.JSON_PROPERTY_TILGENDE_RATE,
        NominaldatenRollover.JSON_PROPERTY_STUECKZINS,
        NominaldatenRollover.JSON_PROPERTY_STUECKZINSTAGE,
        NominaldatenRollover.JSON_PROPERTY_FIXING_ART,
        NominaldatenRollover.JSON_PROPERTY_INTERPOLIERTER_ZINS,
        NominaldatenRollover.JSON_PROPERTY_TILGUNGSART
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class NominaldatenRollover {
    public static final String JSON_PROPERTY_ANNUITAETENZINS = "annuitaetenzins";
    private BigDecimal annuitaetenzins;

    public static final String JSON_PROPERTY_ANNUITAETISCHE_RATE = "annuitaetischeRate";
    private BigDecimal annuitaetischeRate;

    public static final String JSON_PROPERTY_ANNUITAETISCHE_RESTSCHULD = "annuitaetischeRestschuld";
    private BigDecimal annuitaetischeRestschuld;

    public static final String JSON_PROPERTY_AUFSCHLAG = "aufschlag";
    private BigDecimal aufschlag;

    public static final String JSON_PROPERTY_MINDESTAUFSCHLAG = "mindestaufschlag";
    private BigDecimal mindestaufschlag;

    public static final String JSON_PROPERTY_AUSZAHLUNGSDATUM = "auszahlungsdatum";
    private LocalDate auszahlungsdatum;

    public static final String JSON_PROPERTY_AUSZAHLUNGSBETRAG = "auszahlungsbetrag";
    private BigDecimal auszahlungsbetrag;

    public static final String JSON_PROPERTY_AUSZAHLUNGSKURS = "auszahlungskurs";
    private BigDecimal auszahlungskurs;

    public static final String JSON_PROPERTY_DISAGIO_BETRAG = "disagioBetrag";
    private BigDecimal disagioBetrag;

    public static final String JSON_PROPERTY_DISAGIO_PROZENT = "disagioProzent";
    private BigDecimal disagioProzent;

    public static final String JSON_PROPERTY_KONTOFUEHRUNG = "kontofuehrung";
    private KontofuehrungRollover kontofuehrung;

    public static final String JSON_PROPERTY_LIQUIDITAETSBINDUNGSENDE = "liquiditaetsbindungsende";
    private LocalDate liquiditaetsbindungsende;

    public static final String JSON_PROPERTY_LAUFZEIT_LIQUIDITAETSBINDUNG = "laufzeitLiquiditaetsbindung";
    private BigDecimal laufzeitLiquiditaetsbindung;

    public static final String JSON_PROPERTY_ZINSBINDUNGSENDE = "zinsbindungsende";
    private LocalDate zinsbindungsende;

    public static final String JSON_PROPERTY_LAUFZEIT_ZINSBINDUNG = "laufzeitZinsbindung";
    private BigDecimal laufzeitZinsbindung;

    public static final String JSON_PROPERTY_NOMINALBETRAG = "nominalbetrag";
    private BigDecimal nominalbetrag;

    public static final String JSON_PROPERTY_NOMINALZINS = "nominalzins";
    private BigDecimal nominalzins;

    public static final String JSON_PROPERTY_ROLLOVER_VARIANTE = "rolloverVariante";
    private RolloverVariante rolloverVariante;

    public static final String JSON_PROPERTY_SONDERVEREINBARUNGEN = "sondervereinbarungen";
    private SondervereinbarungenRollover sondervereinbarungen;

    public static final String JSON_PROPERTY_TILGENDE_RATE = "tilgendeRate";
    private BigDecimal tilgendeRate;

    public static final String JSON_PROPERTY_STUECKZINS = "stueckzins";
    private BigDecimal stueckzins;

    public static final String JSON_PROPERTY_STUECKZINSTAGE = "stueckzinstage";
    private Integer stueckzinstage;

    public static final String JSON_PROPERTY_FIXING_ART = "fixingArt";
    private FixingArt fixingArt;

    public static final String JSON_PROPERTY_INTERPOLIERTER_ZINS = "interpolierterZins";
    private BigDecimal interpolierterZins;

    public static final String JSON_PROPERTY_TILGUNGSART = "tilgungsart";
    private Tilgungsart tilgungsart;

    public NominaldatenRollover() {
    }

    public NominaldatenRollover annuitaetenzins(BigDecimal annuitaetenzins) {

        this.annuitaetenzins = annuitaetenzins;
        return this;
    }

    /**
     * Nominalzinssatz des Annuitätendarlehens, der für die Erzeugung der annuitären Tilgungsstruktur verwendet wird.
     *
     * @return annuitaetenzins
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ANNUITAETENZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getAnnuitaetenzins() {
        return annuitaetenzins;
    }


    @JsonProperty(JSON_PROPERTY_ANNUITAETENZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnnuitaetenzins(BigDecimal annuitaetenzins) {
        this.annuitaetenzins = annuitaetenzins;
    }

    public NominaldatenRollover annuitaetischeRate(BigDecimal annuitaetischeRate) {

        this.annuitaetischeRate = annuitaetischeRate;
        return this;
    }

    /**
     * Vorgabe der konstanten Rate des Annuitätendarlehens, mit der die Tilgungsstruktur ermittelt wird.
     *
     * @return annuitaetischeRate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ANNUITAETISCHE_RATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getAnnuitaetischeRate() {
        return annuitaetischeRate;
    }


    @JsonProperty(JSON_PROPERTY_ANNUITAETISCHE_RATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnnuitaetischeRate(BigDecimal annuitaetischeRate) {
        this.annuitaetischeRate = annuitaetischeRate;
    }

    public NominaldatenRollover annuitaetischeRestschuld(BigDecimal annuitaetischeRestschuld) {

        this.annuitaetischeRestschuld = annuitaetischeRestschuld;
        return this;
    }

    /**
     * Vorgabe der Restschuld des Annuitätendarlehens, mit der die Tilgungsstruktur ermittelt wird.
     *
     * @return annuitaetischeRestschuld
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ANNUITAETISCHE_RESTSCHULD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getAnnuitaetischeRestschuld() {
        return annuitaetischeRestschuld;
    }


    @JsonProperty(JSON_PROPERTY_ANNUITAETISCHE_RESTSCHULD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnnuitaetischeRestschuld(BigDecimal annuitaetischeRestschuld) {
        this.annuitaetischeRestschuld = annuitaetischeRestschuld;
    }

    public NominaldatenRollover aufschlag(BigDecimal aufschlag) {

        this.aufschlag = aufschlag;
        return this;
    }

    /**
     * Aufschlag in Prozent
     *
     * @return aufschlag
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_AUFSCHLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getAufschlag() {
        return aufschlag;
    }


    @JsonProperty(JSON_PROPERTY_AUFSCHLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAufschlag(BigDecimal aufschlag) {
        this.aufschlag = aufschlag;
    }

    public NominaldatenRollover mindestaufschlag(BigDecimal mindestaufschlag) {

        this.mindestaufschlag = mindestaufschlag;
        return this;
    }

    /**
     * Mindestaufschlag in Prozent
     *
     * @return mindestaufschlag
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_MINDESTAUFSCHLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getMindestaufschlag() {
        return mindestaufschlag;
    }


    @JsonProperty(JSON_PROPERTY_MINDESTAUFSCHLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMindestaufschlag(BigDecimal mindestaufschlag) {
        this.mindestaufschlag = mindestaufschlag;
    }

    public NominaldatenRollover auszahlungsdatum(LocalDate auszahlungsdatum) {

        this.auszahlungsdatum = auszahlungsdatum;
        return this;
    }

    /**
     * Auszahlungsdatum des Darlehens. (Wenn die Auszahlung in mehreren Teilauszahlungen erfolgt, werden diese bei den Sondervereinbarungen angegeben.)
     *
     * @return auszahlungsdatum
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_AUSZAHLUNGSDATUM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getAuszahlungsdatum() {
        return auszahlungsdatum;
    }


    @JsonProperty(JSON_PROPERTY_AUSZAHLUNGSDATUM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAuszahlungsdatum(LocalDate auszahlungsdatum) {
        this.auszahlungsdatum = auszahlungsdatum;
    }

    public NominaldatenRollover auszahlungsbetrag(BigDecimal auszahlungsbetrag) {

        this.auszahlungsbetrag = auszahlungsbetrag;
        return this;
    }

    /**
     * Der tatsächlich ausgezahlte Betrag. Der Auszahlungsbetrag ist der Nominalbetrag vermindert um das Disagio und die Gebühr als Abschlag.
     *
     * @return auszahlungsbetrag
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_AUSZAHLUNGSBETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getAuszahlungsbetrag() {
        return auszahlungsbetrag;
    }


    @JsonProperty(JSON_PROPERTY_AUSZAHLUNGSBETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAuszahlungsbetrag(BigDecimal auszahlungsbetrag) {
        this.auszahlungsbetrag = auszahlungsbetrag;
    }

    public NominaldatenRollover auszahlungskurs(BigDecimal auszahlungskurs) {

        this.auszahlungskurs = auszahlungskurs;
        return this;
    }

    /**
     * Der tatsächlich ausgezahlte Betrag als Prozentsatz zum Grundwert Nominalbetrag.Der Auszahlungsbetrag ist der Nominalbetrag vermindert um das Disagio und die Gebühr als Abschlag.
     *
     * @return auszahlungskurs
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_AUSZAHLUNGSKURS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getAuszahlungskurs() {
        return auszahlungskurs;
    }


    @JsonProperty(JSON_PROPERTY_AUSZAHLUNGSKURS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAuszahlungskurs(BigDecimal auszahlungskurs) {
        this.auszahlungskurs = auszahlungskurs;
    }

    public NominaldatenRollover disagioBetrag(BigDecimal disagioBetrag) {

        this.disagioBetrag = disagioBetrag;
        return this;
    }

    /**
     * Die Höhe des Disagios als Betrag.
     *
     * @return disagioBetrag
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_DISAGIO_BETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getDisagioBetrag() {
        return disagioBetrag;
    }


    @JsonProperty(JSON_PROPERTY_DISAGIO_BETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDisagioBetrag(BigDecimal disagioBetrag) {
        this.disagioBetrag = disagioBetrag;
    }

    public NominaldatenRollover disagioProzent(BigDecimal disagioProzent) {

        this.disagioProzent = disagioProzent;
        return this;
    }

    /**
     * Die Höhe des Disagios als Prozent.
     *
     * @return disagioProzent
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_DISAGIO_PROZENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getDisagioProzent() {
        return disagioProzent;
    }


    @JsonProperty(JSON_PROPERTY_DISAGIO_PROZENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDisagioProzent(BigDecimal disagioProzent) {
        this.disagioProzent = disagioProzent;
    }

    public NominaldatenRollover kontofuehrung(KontofuehrungRollover kontofuehrung) {

        this.kontofuehrung = kontofuehrung;
        return this;
    }

    /**
     * Get kontofuehrung
     *
     * @return kontofuehrung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_KONTOFUEHRUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public KontofuehrungRollover getKontofuehrung() {
        return kontofuehrung;
    }


    @JsonProperty(JSON_PROPERTY_KONTOFUEHRUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKontofuehrung(KontofuehrungRollover kontofuehrung) {
        this.kontofuehrung = kontofuehrung;
    }

    public NominaldatenRollover liquiditaetsbindungsende(LocalDate liquiditaetsbindungsende) {

        this.liquiditaetsbindungsende = liquiditaetsbindungsende;
        return this;
    }

    /**
     * Datum, bis zu dem das entliehene Kapital zurückgezahlt wird.
     *
     * @return liquiditaetsbindungsende
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_LIQUIDITAETSBINDUNGSENDE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getLiquiditaetsbindungsende() {
        return liquiditaetsbindungsende;
    }


    @JsonProperty(JSON_PROPERTY_LIQUIDITAETSBINDUNGSENDE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLiquiditaetsbindungsende(LocalDate liquiditaetsbindungsende) {
        this.liquiditaetsbindungsende = liquiditaetsbindungsende;
    }

    public NominaldatenRollover laufzeitLiquiditaetsbindung(BigDecimal laufzeitLiquiditaetsbindung) {

        this.laufzeitLiquiditaetsbindung = laufzeitLiquiditaetsbindung;
        return this;
    }

    /**
     * Dauer in Jahren bis zum Liquiditaetsbindungsende
     *
     * @return laufzeitLiquiditaetsbindung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_LAUFZEIT_LIQUIDITAETSBINDUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getLaufzeitLiquiditaetsbindung() {
        return laufzeitLiquiditaetsbindung;
    }


    @JsonProperty(JSON_PROPERTY_LAUFZEIT_LIQUIDITAETSBINDUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLaufzeitLiquiditaetsbindung(BigDecimal laufzeitLiquiditaetsbindung) {
        this.laufzeitLiquiditaetsbindung = laufzeitLiquiditaetsbindung;
    }

    public NominaldatenRollover zinsbindungsende(LocalDate zinsbindungsende) {

        this.zinsbindungsende = zinsbindungsende;
        return this;
    }

    /**
     * Datum der Zinsbindung
     *
     * @return zinsbindungsende
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ZINSBINDUNGSENDE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getZinsbindungsende() {
        return zinsbindungsende;
    }


    @JsonProperty(JSON_PROPERTY_ZINSBINDUNGSENDE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setZinsbindungsende(LocalDate zinsbindungsende) {
        this.zinsbindungsende = zinsbindungsende;
    }

    public NominaldatenRollover laufzeitZinsbindung(BigDecimal laufzeitZinsbindung) {

        this.laufzeitZinsbindung = laufzeitZinsbindung;
        return this;
    }

    /**
     * Dauer in Jahren bis zur Zinsbindung
     *
     * @return laufzeitZinsbindung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_LAUFZEIT_ZINSBINDUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getLaufzeitZinsbindung() {
        return laufzeitZinsbindung;
    }


    @JsonProperty(JSON_PROPERTY_LAUFZEIT_ZINSBINDUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLaufzeitZinsbindung(BigDecimal laufzeitZinsbindung) {
        this.laufzeitZinsbindung = laufzeitZinsbindung;
    }

    public NominaldatenRollover nominalbetrag(BigDecimal nominalbetrag) {

        this.nominalbetrag = nominalbetrag;
        return this;
    }

    /**
     * Der Nominalbetrag des Darlehens.
     *
     * @return nominalbetrag
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NOMINALBETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNominalbetrag() {
        return nominalbetrag;
    }


    @JsonProperty(JSON_PROPERTY_NOMINALBETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNominalbetrag(BigDecimal nominalbetrag) {
        this.nominalbetrag = nominalbetrag;
    }

    public NominaldatenRollover nominalzins(BigDecimal nominalzins) {

        this.nominalzins = nominalzins;
        return this;
    }

    /**
     * Der Nominalzins des Darlehens.
     *
     * @return nominalzins
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NOMINALZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNominalzins() {
        return nominalzins;
    }


    @JsonProperty(JSON_PROPERTY_NOMINALZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNominalzins(BigDecimal nominalzins) {
        this.nominalzins = nominalzins;
    }

    public NominaldatenRollover rolloverVariante(RolloverVariante rolloverVariante) {

        this.rolloverVariante = rolloverVariante;
        return this;
    }

    /**
     * Get rolloverVariante
     *
     * @return rolloverVariante
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ROLLOVER_VARIANTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public RolloverVariante getRolloverVariante() {
        return rolloverVariante;
    }


    @JsonProperty(JSON_PROPERTY_ROLLOVER_VARIANTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRolloverVariante(RolloverVariante rolloverVariante) {
        this.rolloverVariante = rolloverVariante;
    }

    public NominaldatenRollover sondervereinbarungen(SondervereinbarungenRollover sondervereinbarungen) {

        this.sondervereinbarungen = sondervereinbarungen;
        return this;
    }

    /**
     * Get sondervereinbarungen
     *
     * @return sondervereinbarungen
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_SONDERVEREINBARUNGEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SondervereinbarungenRollover getSondervereinbarungen() {
        return sondervereinbarungen;
    }


    @JsonProperty(JSON_PROPERTY_SONDERVEREINBARUNGEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSondervereinbarungen(SondervereinbarungenRollover sondervereinbarungen) {
        this.sondervereinbarungen = sondervereinbarungen;
    }

    public NominaldatenRollover tilgendeRate(BigDecimal tilgendeRate) {

        this.tilgendeRate = tilgendeRate;
        return this;
    }

    /**
     * Die Rate mit der getilgt werden soll.
     *
     * @return tilgendeRate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_TILGENDE_RATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getTilgendeRate() {
        return tilgendeRate;
    }


    @JsonProperty(JSON_PROPERTY_TILGENDE_RATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTilgendeRate(BigDecimal tilgendeRate) {
        this.tilgendeRate = tilgendeRate;
    }

    public NominaldatenRollover stueckzins(BigDecimal stueckzins) {

        this.stueckzins = stueckzins;
        return this;
    }

    /**
     * Die Höhe des Stückzinses.
     *
     * @return stueckzins
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_STUECKZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getStueckzins() {
        return stueckzins;
    }


    @JsonProperty(JSON_PROPERTY_STUECKZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStueckzins(BigDecimal stueckzins) {
        this.stueckzins = stueckzins;
    }

    public NominaldatenRollover stueckzinstage(Integer stueckzinstage) {

        this.stueckzinstage = stueckzinstage;
        return this;
    }

    /**
     * Die Stückzinstage.
     *
     * @return stueckzinstage
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_STUECKZINSTAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getStueckzinstage() {
        return stueckzinstage;
    }


    @JsonProperty(JSON_PROPERTY_STUECKZINSTAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStueckzinstage(Integer stueckzinstage) {
        this.stueckzinstage = stueckzinstage;
    }

    public NominaldatenRollover fixingArt(FixingArt fixingArt) {

        this.fixingArt = fixingArt;
        return this;
    }

    /**
     * Get fixingArt
     *
     * @return fixingArt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_FIXING_ART)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public FixingArt getFixingArt() {
        return fixingArt;
    }


    @JsonProperty(JSON_PROPERTY_FIXING_ART)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFixingArt(FixingArt fixingArt) {
        this.fixingArt = fixingArt;
    }

    public NominaldatenRollover interpolierterZins(BigDecimal interpolierterZins) {

        this.interpolierterZins = interpolierterZins;
        return this;
    }

    /**
     * Aus der aktuellen risikolosen Zinsstruktur wird der Zinssatz für den Zeitraum bis zum Zinsperiodenende errechnet (Interpolation).
     *
     * @return interpolierterZins
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_INTERPOLIERTER_ZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getInterpolierterZins() {
        return interpolierterZins;
    }


    @JsonProperty(JSON_PROPERTY_INTERPOLIERTER_ZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInterpolierterZins(BigDecimal interpolierterZins) {
        this.interpolierterZins = interpolierterZins;
    }

    public NominaldatenRollover tilgungsart(Tilgungsart tilgungsart) {

        this.tilgungsart = tilgungsart;
        return this;
    }

    /**
     * Get tilgungsart
     *
     * @return tilgungsart
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_TILGUNGSART)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Tilgungsart getTilgungsart() {
        return tilgungsart;
    }


    @JsonProperty(JSON_PROPERTY_TILGUNGSART)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTilgungsart(Tilgungsart tilgungsart) {
        this.tilgungsart = tilgungsart;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        NominaldatenRollover nominaldatenRollover = (NominaldatenRollover) o;
        return Objects.equals(this.annuitaetenzins, nominaldatenRollover.annuitaetenzins) &&
                Objects.equals(this.annuitaetischeRate, nominaldatenRollover.annuitaetischeRate) &&
                Objects.equals(this.annuitaetischeRestschuld, nominaldatenRollover.annuitaetischeRestschuld) &&
                Objects.equals(this.aufschlag, nominaldatenRollover.aufschlag) &&
                Objects.equals(this.mindestaufschlag, nominaldatenRollover.mindestaufschlag) &&
                Objects.equals(this.auszahlungsdatum, nominaldatenRollover.auszahlungsdatum) &&
                Objects.equals(this.auszahlungsbetrag, nominaldatenRollover.auszahlungsbetrag) &&
                Objects.equals(this.auszahlungskurs, nominaldatenRollover.auszahlungskurs) &&
                Objects.equals(this.disagioBetrag, nominaldatenRollover.disagioBetrag) &&
                Objects.equals(this.disagioProzent, nominaldatenRollover.disagioProzent) &&
                Objects.equals(this.kontofuehrung, nominaldatenRollover.kontofuehrung) &&
                Objects.equals(this.liquiditaetsbindungsende, nominaldatenRollover.liquiditaetsbindungsende) &&
                Objects.equals(this.laufzeitLiquiditaetsbindung, nominaldatenRollover.laufzeitLiquiditaetsbindung) &&
                Objects.equals(this.zinsbindungsende, nominaldatenRollover.zinsbindungsende) &&
                Objects.equals(this.laufzeitZinsbindung, nominaldatenRollover.laufzeitZinsbindung) &&
                Objects.equals(this.nominalbetrag, nominaldatenRollover.nominalbetrag) &&
                Objects.equals(this.nominalzins, nominaldatenRollover.nominalzins) &&
                Objects.equals(this.rolloverVariante, nominaldatenRollover.rolloverVariante) &&
                Objects.equals(this.sondervereinbarungen, nominaldatenRollover.sondervereinbarungen) &&
                Objects.equals(this.tilgendeRate, nominaldatenRollover.tilgendeRate) &&
                Objects.equals(this.stueckzins, nominaldatenRollover.stueckzins) &&
                Objects.equals(this.stueckzinstage, nominaldatenRollover.stueckzinstage) &&
                Objects.equals(this.fixingArt, nominaldatenRollover.fixingArt) &&
                Objects.equals(this.interpolierterZins, nominaldatenRollover.interpolierterZins) &&
                Objects.equals(this.tilgungsart, nominaldatenRollover.tilgungsart);
    }

    @Override
    public int hashCode() {
        return Objects.hash(annuitaetenzins, annuitaetischeRate, annuitaetischeRestschuld, aufschlag, mindestaufschlag, auszahlungsdatum, auszahlungsbetrag, auszahlungskurs, disagioBetrag, disagioProzent, kontofuehrung, liquiditaetsbindungsende, laufzeitLiquiditaetsbindung, zinsbindungsende, laufzeitZinsbindung, nominalbetrag, nominalzins, rolloverVariante, sondervereinbarungen, tilgendeRate, stueckzins, stueckzinstage, fixingArt, interpolierterZins, tilgungsart);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class NominaldatenRollover {\n");
        sb.append("    annuitaetenzins: ").append(toIndentedString(annuitaetenzins)).append("\n");
        sb.append("    annuitaetischeRate: ").append(toIndentedString(annuitaetischeRate)).append("\n");
        sb.append("    annuitaetischeRestschuld: ").append(toIndentedString(annuitaetischeRestschuld)).append("\n");
        sb.append("    aufschlag: ").append(toIndentedString(aufschlag)).append("\n");
        sb.append("    mindestaufschlag: ").append(toIndentedString(mindestaufschlag)).append("\n");
        sb.append("    auszahlungsdatum: ").append(toIndentedString(auszahlungsdatum)).append("\n");
        sb.append("    auszahlungsbetrag: ").append(toIndentedString(auszahlungsbetrag)).append("\n");
        sb.append("    auszahlungskurs: ").append(toIndentedString(auszahlungskurs)).append("\n");
        sb.append("    disagioBetrag: ").append(toIndentedString(disagioBetrag)).append("\n");
        sb.append("    disagioProzent: ").append(toIndentedString(disagioProzent)).append("\n");
        sb.append("    kontofuehrung: ").append(toIndentedString(kontofuehrung)).append("\n");
        sb.append("    liquiditaetsbindungsende: ").append(toIndentedString(liquiditaetsbindungsende)).append("\n");
        sb.append("    laufzeitLiquiditaetsbindung: ").append(toIndentedString(laufzeitLiquiditaetsbindung)).append("\n");
        sb.append("    zinsbindungsende: ").append(toIndentedString(zinsbindungsende)).append("\n");
        sb.append("    laufzeitZinsbindung: ").append(toIndentedString(laufzeitZinsbindung)).append("\n");
        sb.append("    nominalbetrag: ").append(toIndentedString(nominalbetrag)).append("\n");
        sb.append("    nominalzins: ").append(toIndentedString(nominalzins)).append("\n");
        sb.append("    rolloverVariante: ").append(toIndentedString(rolloverVariante)).append("\n");
        sb.append("    sondervereinbarungen: ").append(toIndentedString(sondervereinbarungen)).append("\n");
        sb.append("    tilgendeRate: ").append(toIndentedString(tilgendeRate)).append("\n");
        sb.append("    stueckzins: ").append(toIndentedString(stueckzins)).append("\n");
        sb.append("    stueckzinstage: ").append(toIndentedString(stueckzinstage)).append("\n");
        sb.append("    fixingArt: ").append(toIndentedString(fixingArt)).append("\n");
        sb.append("    interpolierterZins: ").append(toIndentedString(interpolierterZins)).append("\n");
        sb.append("    tilgungsart: ").append(toIndentedString(tilgungsart)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

