/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Ekkdaten
 */
@JsonPropertyOrder({
        Ekkdaten.JSON_PROPERTY_EKK_AUFSICHTSRECHTLICH,
        Ekkdaten.JSON_PROPERTY_EKK_AUFSICHTSRECHTLICH_VERZINSLICH,
        Ekkdaten.JSON_PROPERTY_EKK_AUFSICHTSRECHTLICH_BILANZIELL,
        Ekkdaten.JSON_PROPERTY_EIGENKAPITAL_VERZINSLICH,
        Ekkdaten.JSON_PROPERTY_EIGENKAPITAL_BILANZIELL,
        Ekkdaten.JSON_PROPERTY_INITIALES_RISIKOGEWICHT,
        Ekkdaten.JSON_PROPERTY_EKK_OEKONOMISCH,
        Ekkdaten.JSON_PROPERTY_RORAC_REG,
        Ekkdaten.JSON_PROPERTY_RORAC_OEK,
        Ekkdaten.JSON_PROPERTY_RAROC_REG,
        Ekkdaten.JSON_PROPERTY_RAROC_OEK
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class Ekkdaten {
    public static final String JSON_PROPERTY_EKK_AUFSICHTSRECHTLICH = "ekkAufsichtsrechtlich";
    private BigDecimal ekkAufsichtsrechtlich;

    public static final String JSON_PROPERTY_EKK_AUFSICHTSRECHTLICH_VERZINSLICH = "ekkAufsichtsrechtlichVerzinslich";
    private BigDecimal ekkAufsichtsrechtlichVerzinslich;

    public static final String JSON_PROPERTY_EKK_AUFSICHTSRECHTLICH_BILANZIELL = "ekkAufsichtsrechtlichBilanziell";
    private BigDecimal ekkAufsichtsrechtlichBilanziell;

    public static final String JSON_PROPERTY_EIGENKAPITAL_VERZINSLICH = "eigenkapitalVerzinslich";
    private BigDecimal eigenkapitalVerzinslich;

    public static final String JSON_PROPERTY_EIGENKAPITAL_BILANZIELL = "eigenkapitalBilanziell";
    private BigDecimal eigenkapitalBilanziell;

    public static final String JSON_PROPERTY_INITIALES_RISIKOGEWICHT = "initialesRisikogewicht";
    private BigDecimal initialesRisikogewicht;

    public static final String JSON_PROPERTY_EKK_OEKONOMISCH = "ekkOekonomisch";
    private BigDecimal ekkOekonomisch;

    public static final String JSON_PROPERTY_RORAC_REG = "roracReg";
    private BigDecimal roracReg;

    public static final String JSON_PROPERTY_RORAC_OEK = "roracOek";
    private BigDecimal roracOek;

    public static final String JSON_PROPERTY_RAROC_REG = "rarocReg";
    private BigDecimal rarocReg;

    public static final String JSON_PROPERTY_RAROC_OEK = "rarocOek";
    private BigDecimal rarocOek;

    public Ekkdaten() {
    }

    public Ekkdaten ekkAufsichtsrechtlich(BigDecimal ekkAufsichtsrechtlich) {

        this.ekkAufsichtsrechtlich = ekkAufsichtsrechtlich;
        return this;
    }

    /**
     * Die aufsichtsrechtlichen Eigenkapitalkosten.
     *
     * @return ekkAufsichtsrechtlich
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_EKK_AUFSICHTSRECHTLICH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getEkkAufsichtsrechtlich() {
        return ekkAufsichtsrechtlich;
    }


    @JsonProperty(JSON_PROPERTY_EKK_AUFSICHTSRECHTLICH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEkkAufsichtsrechtlich(BigDecimal ekkAufsichtsrechtlich) {
        this.ekkAufsichtsrechtlich = ekkAufsichtsrechtlich;
    }

    public Ekkdaten ekkAufsichtsrechtlichVerzinslich(BigDecimal ekkAufsichtsrechtlichVerzinslich) {

        this.ekkAufsichtsrechtlichVerzinslich = ekkAufsichtsrechtlichVerzinslich;
        return this;
    }

    /**
     * Die verzinslich aufsichtsrechtlichen Eigenkapitalkosten.
     *
     * @return ekkAufsichtsrechtlichVerzinslich
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_EKK_AUFSICHTSRECHTLICH_VERZINSLICH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getEkkAufsichtsrechtlichVerzinslich() {
        return ekkAufsichtsrechtlichVerzinslich;
    }


    @JsonProperty(JSON_PROPERTY_EKK_AUFSICHTSRECHTLICH_VERZINSLICH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEkkAufsichtsrechtlichVerzinslich(BigDecimal ekkAufsichtsrechtlichVerzinslich) {
        this.ekkAufsichtsrechtlichVerzinslich = ekkAufsichtsrechtlichVerzinslich;
    }

    public Ekkdaten ekkAufsichtsrechtlichBilanziell(BigDecimal ekkAufsichtsrechtlichBilanziell) {

        this.ekkAufsichtsrechtlichBilanziell = ekkAufsichtsrechtlichBilanziell;
        return this;
    }

    /**
     * Die bilanziellen aufsichtsrechtlichen Eigenkapitalkosten.
     *
     * @return ekkAufsichtsrechtlichBilanziell
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_EKK_AUFSICHTSRECHTLICH_BILANZIELL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getEkkAufsichtsrechtlichBilanziell() {
        return ekkAufsichtsrechtlichBilanziell;
    }


    @JsonProperty(JSON_PROPERTY_EKK_AUFSICHTSRECHTLICH_BILANZIELL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEkkAufsichtsrechtlichBilanziell(BigDecimal ekkAufsichtsrechtlichBilanziell) {
        this.ekkAufsichtsrechtlichBilanziell = ekkAufsichtsrechtlichBilanziell;
    }

    public Ekkdaten eigenkapitalVerzinslich(BigDecimal eigenkapitalVerzinslich) {

        this.eigenkapitalVerzinslich = eigenkapitalVerzinslich;
        return this;
    }

    /**
     * Das verzinsliche Eigenkapital.
     *
     * @return eigenkapitalVerzinslich
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_EIGENKAPITAL_VERZINSLICH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getEigenkapitalVerzinslich() {
        return eigenkapitalVerzinslich;
    }


    @JsonProperty(JSON_PROPERTY_EIGENKAPITAL_VERZINSLICH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEigenkapitalVerzinslich(BigDecimal eigenkapitalVerzinslich) {
        this.eigenkapitalVerzinslich = eigenkapitalVerzinslich;
    }

    public Ekkdaten eigenkapitalBilanziell(BigDecimal eigenkapitalBilanziell) {

        this.eigenkapitalBilanziell = eigenkapitalBilanziell;
        return this;
    }

    /**
     * Das bilanzielle Eigenkapital.
     *
     * @return eigenkapitalBilanziell
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_EIGENKAPITAL_BILANZIELL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getEigenkapitalBilanziell() {
        return eigenkapitalBilanziell;
    }


    @JsonProperty(JSON_PROPERTY_EIGENKAPITAL_BILANZIELL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEigenkapitalBilanziell(BigDecimal eigenkapitalBilanziell) {
        this.eigenkapitalBilanziell = eigenkapitalBilanziell;
    }

    public Ekkdaten initialesRisikogewicht(BigDecimal initialesRisikogewicht) {

        this.initialesRisikogewicht = initialesRisikogewicht;
        return this;
    }

    /**
     * Das initiale Risikogewicht.
     *
     * @return initialesRisikogewicht
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_INITIALES_RISIKOGEWICHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getInitialesRisikogewicht() {
        return initialesRisikogewicht;
    }


    @JsonProperty(JSON_PROPERTY_INITIALES_RISIKOGEWICHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInitialesRisikogewicht(BigDecimal initialesRisikogewicht) {
        this.initialesRisikogewicht = initialesRisikogewicht;
    }

    public Ekkdaten ekkOekonomisch(BigDecimal ekkOekonomisch) {

        this.ekkOekonomisch = ekkOekonomisch;
        return this;
    }

    /**
     * Die ökonomischen Eigenkapitalkosten.
     *
     * @return ekkOekonomisch
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_EKK_OEKONOMISCH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getEkkOekonomisch() {
        return ekkOekonomisch;
    }


    @JsonProperty(JSON_PROPERTY_EKK_OEKONOMISCH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEkkOekonomisch(BigDecimal ekkOekonomisch) {
        this.ekkOekonomisch = ekkOekonomisch;
    }

    public Ekkdaten roracReg(BigDecimal roracReg) {

        this.roracReg = roracReg;
        return this;
    }

    /**
     * Die regulatorische Variante einer risikoadjustierten Eigenkapitalrendite (Return on Risk Adjusted Capital).
     *
     * @return roracReg
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_RORAC_REG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getRoracReg() {
        return roracReg;
    }


    @JsonProperty(JSON_PROPERTY_RORAC_REG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRoracReg(BigDecimal roracReg) {
        this.roracReg = roracReg;
    }

    public Ekkdaten roracOek(BigDecimal roracOek) {

        this.roracOek = roracOek;
        return this;
    }

    /**
     * Die ökonomische Variante einer risikoadjustierten Eigenkapitalrendite (Return on Risk Adjusted Capital).
     *
     * @return roracOek
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_RORAC_OEK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getRoracOek() {
        return roracOek;
    }


    @JsonProperty(JSON_PROPERTY_RORAC_OEK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRoracOek(BigDecimal roracOek) {
        this.roracOek = roracOek;
    }

    public Ekkdaten rarocReg(BigDecimal rarocReg) {

        this.rarocReg = rarocReg;
        return this;
    }

    /**
     * Die regulatorische risikoadjustierte Eigenkapitalrendite (Risk Adjusted Return on Capital).
     *
     * @return rarocReg
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_RAROC_REG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getRarocReg() {
        return rarocReg;
    }


    @JsonProperty(JSON_PROPERTY_RAROC_REG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRarocReg(BigDecimal rarocReg) {
        this.rarocReg = rarocReg;
    }

    public Ekkdaten rarocOek(BigDecimal rarocOek) {

        this.rarocOek = rarocOek;
        return this;
    }

    /**
     * Die ökonomische risikoadjustierte Eigenkapitalrendite (Risk Adjusted Return on Capital).
     *
     * @return rarocOek
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_RAROC_OEK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getRarocOek() {
        return rarocOek;
    }


    @JsonProperty(JSON_PROPERTY_RAROC_OEK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRarocOek(BigDecimal rarocOek) {
        this.rarocOek = rarocOek;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Ekkdaten ekkdaten = (Ekkdaten) o;
        return Objects.equals(this.ekkAufsichtsrechtlich, ekkdaten.ekkAufsichtsrechtlich) &&
                Objects.equals(this.ekkAufsichtsrechtlichVerzinslich, ekkdaten.ekkAufsichtsrechtlichVerzinslich) &&
                Objects.equals(this.ekkAufsichtsrechtlichBilanziell, ekkdaten.ekkAufsichtsrechtlichBilanziell) &&
                Objects.equals(this.eigenkapitalVerzinslich, ekkdaten.eigenkapitalVerzinslich) &&
                Objects.equals(this.eigenkapitalBilanziell, ekkdaten.eigenkapitalBilanziell) &&
                Objects.equals(this.initialesRisikogewicht, ekkdaten.initialesRisikogewicht) &&
                Objects.equals(this.ekkOekonomisch, ekkdaten.ekkOekonomisch) &&
                Objects.equals(this.roracReg, ekkdaten.roracReg) &&
                Objects.equals(this.roracOek, ekkdaten.roracOek) &&
                Objects.equals(this.rarocReg, ekkdaten.rarocReg) &&
                Objects.equals(this.rarocOek, ekkdaten.rarocOek);
    }

    @Override
    public int hashCode() {
        return Objects.hash(ekkAufsichtsrechtlich, ekkAufsichtsrechtlichVerzinslich, ekkAufsichtsrechtlichBilanziell, eigenkapitalVerzinslich, eigenkapitalBilanziell, initialesRisikogewicht, ekkOekonomisch, roracReg, roracOek, rarocReg, rarocOek);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Ekkdaten {\n");
        sb.append("    ekkAufsichtsrechtlich: ").append(toIndentedString(ekkAufsichtsrechtlich)).append("\n");
        sb.append("    ekkAufsichtsrechtlichVerzinslich: ").append(toIndentedString(ekkAufsichtsrechtlichVerzinslich)).append("\n");
        sb.append("    ekkAufsichtsrechtlichBilanziell: ").append(toIndentedString(ekkAufsichtsrechtlichBilanziell)).append("\n");
        sb.append("    eigenkapitalVerzinslich: ").append(toIndentedString(eigenkapitalVerzinslich)).append("\n");
        sb.append("    eigenkapitalBilanziell: ").append(toIndentedString(eigenkapitalBilanziell)).append("\n");
        sb.append("    initialesRisikogewicht: ").append(toIndentedString(initialesRisikogewicht)).append("\n");
        sb.append("    ekkOekonomisch: ").append(toIndentedString(ekkOekonomisch)).append("\n");
        sb.append("    roracReg: ").append(toIndentedString(roracReg)).append("\n");
        sb.append("    roracOek: ").append(toIndentedString(roracOek)).append("\n");
        sb.append("    rarocReg: ").append(toIndentedString(rarocReg)).append("\n");
        sb.append("    rarocOek: ").append(toIndentedString(rarocOek)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

