/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Objects;

/**
 * NominaldatenKreditImport
 */
@JsonPropertyOrder({
        NominaldatenKreditImport.JSON_PROPERTY_ANFAENGLICHE_TILGUNG,
        NominaldatenKreditImport.JSON_PROPERTY_ANNUITAETENZINS,
        NominaldatenKreditImport.JSON_PROPERTY_AUSZAHLUNGSDATUM,
        NominaldatenKreditImport.JSON_PROPERTY_DARLEHENSART,
        NominaldatenKreditImport.JSON_PROPERTY_DISAGIO,
        NominaldatenKreditImport.JSON_PROPERTY_KONTOFUEHRUNG,
        NominaldatenKreditImport.JSON_PROPERTY_LAUFZEIT_ANGABE,
        NominaldatenKreditImport.JSON_PROPERTY_NOMINALBETRAG,
        NominaldatenKreditImport.JSON_PROPERTY_NOMINALZINS,
        NominaldatenKreditImport.JSON_PROPERTY_RATE_BETRAG,
        NominaldatenKreditImport.JSON_PROPERTY_SONDERVEREINBARUNGEN
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class NominaldatenKreditImport {
    public static final String JSON_PROPERTY_ANFAENGLICHE_TILGUNG = "anfaenglicheTilgung";
    private BigDecimal anfaenglicheTilgung;

    public static final String JSON_PROPERTY_ANNUITAETENZINS = "annuitaetenzins";
    private BigDecimal annuitaetenzins;

    public static final String JSON_PROPERTY_AUSZAHLUNGSDATUM = "auszahlungsdatum";
    private LocalDate auszahlungsdatum;

    public static final String JSON_PROPERTY_DARLEHENSART = "darlehensart";
    private Darlehensart darlehensart;

    public static final String JSON_PROPERTY_DISAGIO = "disagio";
    private Disagio disagio;

    public static final String JSON_PROPERTY_KONTOFUEHRUNG = "kontofuehrung";
    private KontofuehrungKredit kontofuehrung;

    public static final String JSON_PROPERTY_LAUFZEIT_ANGABE = "laufzeitAngabe";
    private LaufzeitInformation laufzeitAngabe;

    public static final String JSON_PROPERTY_NOMINALBETRAG = "nominalbetrag";
    private BigDecimal nominalbetrag;

    public static final String JSON_PROPERTY_NOMINALZINS = "nominalzins";
    private BigDecimal nominalzins;

    public static final String JSON_PROPERTY_RATE_BETRAG = "rateBetrag";
    private BigDecimal rateBetrag;

    public static final String JSON_PROPERTY_SONDERVEREINBARUNGEN = "sondervereinbarungen";
    private Sondervereinbarungen sondervereinbarungen;

    public NominaldatenKreditImport() {
    }

    public NominaldatenKreditImport anfaenglicheTilgung(BigDecimal anfaenglicheTilgung) {

        this.anfaenglicheTilgung = anfaenglicheTilgung;
        return this;
    }

    /**
     * Der Tilgungsanteil vom Nominalbetrag in der ersten Rate.
     *
     * @return anfaenglicheTilgung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ANFAENGLICHE_TILGUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getAnfaenglicheTilgung() {
        return anfaenglicheTilgung;
    }


    @JsonProperty(JSON_PROPERTY_ANFAENGLICHE_TILGUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnfaenglicheTilgung(BigDecimal anfaenglicheTilgung) {
        this.anfaenglicheTilgung = anfaenglicheTilgung;
    }

    public NominaldatenKreditImport annuitaetenzins(BigDecimal annuitaetenzins) {

        this.annuitaetenzins = annuitaetenzins;
        return this;
    }

    /**
     * Mit dem Annuitätenzins wird, zusammen mit der anfänglichen Tilgung, einer Annuitätentilgung die Tilgungsstruktur eines Annuitätendarlehen berechnet. Die Annuitätentilgung tilgt mit der selben Struktur.
     *
     * @return annuitaetenzins
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ANNUITAETENZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getAnnuitaetenzins() {
        return annuitaetenzins;
    }


    @JsonProperty(JSON_PROPERTY_ANNUITAETENZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnnuitaetenzins(BigDecimal annuitaetenzins) {
        this.annuitaetenzins = annuitaetenzins;
    }

    public NominaldatenKreditImport auszahlungsdatum(LocalDate auszahlungsdatum) {

        this.auszahlungsdatum = auszahlungsdatum;
        return this;
    }

    /**
     * Das Auszahlungsdatum des Darlehens. Wenn die Auszahlung in mehreren Teilauszahlungen erfolgt, so werden diese bei den Sondervereinbarungen angegeben. Der gesamte Auszahlungsbetrag muss hier trotzdem erfasst werden.
     *
     * @return auszahlungsdatum
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_AUSZAHLUNGSDATUM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getAuszahlungsdatum() {
        return auszahlungsdatum;
    }


    @JsonProperty(JSON_PROPERTY_AUSZAHLUNGSDATUM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAuszahlungsdatum(LocalDate auszahlungsdatum) {
        this.auszahlungsdatum = auszahlungsdatum;
    }

    public NominaldatenKreditImport darlehensart(Darlehensart darlehensart) {

        this.darlehensart = darlehensart;
        return this;
    }

    /**
     * Get darlehensart
     *
     * @return darlehensart
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_DARLEHENSART)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Darlehensart getDarlehensart() {
        return darlehensart;
    }


    @JsonProperty(JSON_PROPERTY_DARLEHENSART)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDarlehensart(Darlehensart darlehensart) {
        this.darlehensart = darlehensart;
    }

    public NominaldatenKreditImport disagio(Disagio disagio) {

        this.disagio = disagio;
        return this;
    }

    /**
     * Get disagio
     *
     * @return disagio
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_DISAGIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Disagio getDisagio() {
        return disagio;
    }


    @JsonProperty(JSON_PROPERTY_DISAGIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDisagio(Disagio disagio) {
        this.disagio = disagio;
    }

    public NominaldatenKreditImport kontofuehrung(KontofuehrungKredit kontofuehrung) {

        this.kontofuehrung = kontofuehrung;
        return this;
    }

    /**
     * Get kontofuehrung
     *
     * @return kontofuehrung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_KONTOFUEHRUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public KontofuehrungKredit getKontofuehrung() {
        return kontofuehrung;
    }


    @JsonProperty(JSON_PROPERTY_KONTOFUEHRUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKontofuehrung(KontofuehrungKredit kontofuehrung) {
        this.kontofuehrung = kontofuehrung;
    }

    public NominaldatenKreditImport laufzeitAngabe(LaufzeitInformation laufzeitAngabe) {

        this.laufzeitAngabe = laufzeitAngabe;
        return this;
    }

    /**
     * Get laufzeitAngabe
     *
     * @return laufzeitAngabe
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_LAUFZEIT_ANGABE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LaufzeitInformation getLaufzeitAngabe() {
        return laufzeitAngabe;
    }


    @JsonProperty(JSON_PROPERTY_LAUFZEIT_ANGABE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLaufzeitAngabe(LaufzeitInformation laufzeitAngabe) {
        this.laufzeitAngabe = laufzeitAngabe;
    }

    public NominaldatenKreditImport nominalbetrag(BigDecimal nominalbetrag) {

        this.nominalbetrag = nominalbetrag;
        return this;
    }

    /**
     * Der Betrag, über den das Kreditgeschäft abgeschlossen wird.
     *
     * @return nominalbetrag
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NOMINALBETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNominalbetrag() {
        return nominalbetrag;
    }


    @JsonProperty(JSON_PROPERTY_NOMINALBETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNominalbetrag(BigDecimal nominalbetrag) {
        this.nominalbetrag = nominalbetrag;
    }

    public NominaldatenKreditImport nominalzins(BigDecimal nominalzins) {

        this.nominalzins = nominalzins;
        return this;
    }

    /**
     * Der Zinssatz, der auf den Nominalbetrag des Geschäfts bezogen wird.
     *
     * @return nominalzins
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NOMINALZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNominalzins() {
        return nominalzins;
    }


    @JsonProperty(JSON_PROPERTY_NOMINALZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNominalzins(BigDecimal nominalzins) {
        this.nominalzins = nominalzins;
    }

    public NominaldatenKreditImport rateBetrag(BigDecimal rateBetrag) {

        this.rateBetrag = rateBetrag;
        return this;
    }

    /**
     * Die Höhe der regelmäßigen Rate.
     *
     * @return rateBetrag
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_RATE_BETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getRateBetrag() {
        return rateBetrag;
    }


    @JsonProperty(JSON_PROPERTY_RATE_BETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRateBetrag(BigDecimal rateBetrag) {
        this.rateBetrag = rateBetrag;
    }

    public NominaldatenKreditImport sondervereinbarungen(Sondervereinbarungen sondervereinbarungen) {

        this.sondervereinbarungen = sondervereinbarungen;
        return this;
    }

    /**
     * Get sondervereinbarungen
     *
     * @return sondervereinbarungen
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_SONDERVEREINBARUNGEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Sondervereinbarungen getSondervereinbarungen() {
        return sondervereinbarungen;
    }


    @JsonProperty(JSON_PROPERTY_SONDERVEREINBARUNGEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSondervereinbarungen(Sondervereinbarungen sondervereinbarungen) {
        this.sondervereinbarungen = sondervereinbarungen;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        NominaldatenKreditImport nominaldatenKreditImport = (NominaldatenKreditImport) o;
        return Objects.equals(this.anfaenglicheTilgung, nominaldatenKreditImport.anfaenglicheTilgung) &&
                Objects.equals(this.annuitaetenzins, nominaldatenKreditImport.annuitaetenzins) &&
                Objects.equals(this.auszahlungsdatum, nominaldatenKreditImport.auszahlungsdatum) &&
                Objects.equals(this.darlehensart, nominaldatenKreditImport.darlehensart) &&
                Objects.equals(this.disagio, nominaldatenKreditImport.disagio) &&
                Objects.equals(this.kontofuehrung, nominaldatenKreditImport.kontofuehrung) &&
                Objects.equals(this.laufzeitAngabe, nominaldatenKreditImport.laufzeitAngabe) &&
                Objects.equals(this.nominalbetrag, nominaldatenKreditImport.nominalbetrag) &&
                Objects.equals(this.nominalzins, nominaldatenKreditImport.nominalzins) &&
                Objects.equals(this.rateBetrag, nominaldatenKreditImport.rateBetrag) &&
                Objects.equals(this.sondervereinbarungen, nominaldatenKreditImport.sondervereinbarungen);
    }

    @Override
    public int hashCode() {
        return Objects.hash(anfaenglicheTilgung, annuitaetenzins, auszahlungsdatum, darlehensart, disagio, kontofuehrung, laufzeitAngabe, nominalbetrag, nominalzins, rateBetrag, sondervereinbarungen);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class NominaldatenKreditImport {\n");
        sb.append("    anfaenglicheTilgung: ").append(toIndentedString(anfaenglicheTilgung)).append("\n");
        sb.append("    annuitaetenzins: ").append(toIndentedString(annuitaetenzins)).append("\n");
        sb.append("    auszahlungsdatum: ").append(toIndentedString(auszahlungsdatum)).append("\n");
        sb.append("    darlehensart: ").append(toIndentedString(darlehensart)).append("\n");
        sb.append("    disagio: ").append(toIndentedString(disagio)).append("\n");
        sb.append("    kontofuehrung: ").append(toIndentedString(kontofuehrung)).append("\n");
        sb.append("    laufzeitAngabe: ").append(toIndentedString(laufzeitAngabe)).append("\n");
        sb.append("    nominalbetrag: ").append(toIndentedString(nominalbetrag)).append("\n");
        sb.append("    nominalzins: ").append(toIndentedString(nominalzins)).append("\n");
        sb.append("    rateBetrag: ").append(toIndentedString(rateBetrag)).append("\n");
        sb.append("    sondervereinbarungen: ").append(toIndentedString(sondervereinbarungen)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

