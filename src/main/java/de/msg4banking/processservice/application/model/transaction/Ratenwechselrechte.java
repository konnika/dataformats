/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Objects;

/**
 * Recht, die Rate ab einem bestimmten Datum innerhalb vorgegebener Grenzen zu ändern.
 */
@JsonPropertyOrder({
        Ratenwechselrechte.JSON_PROPERTY_ANZAHL_WECHSEL,
        Ratenwechselrechte.JSON_PROPERTY_ERSTER_RATENWECHSEL_AM,
        Ratenwechselrechte.JSON_PROPERTY_MAXIMALE_TILGUNGSRATE,
        Ratenwechselrechte.JSON_PROPERTY_MINIMALE_TILGUNGSRATE,
        Ratenwechselrechte.JSON_PROPERTY_RATENWECHSELRECHTE_OPTIMIEREN
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class Ratenwechselrechte {
    public static final String JSON_PROPERTY_ANZAHL_WECHSEL = "anzahlWechsel";
    private Integer anzahlWechsel;

    public static final String JSON_PROPERTY_ERSTER_RATENWECHSEL_AM = "ersterRatenwechselAm";
    private LocalDate ersterRatenwechselAm;

    public static final String JSON_PROPERTY_MAXIMALE_TILGUNGSRATE = "maximaleTilgungsrate";
    private BigDecimal maximaleTilgungsrate;

    public static final String JSON_PROPERTY_MINIMALE_TILGUNGSRATE = "minimaleTilgungsrate";
    private BigDecimal minimaleTilgungsrate;

    public static final String JSON_PROPERTY_RATENWECHSELRECHTE_OPTIMIEREN = "ratenwechselrechteOptimieren";
    private Boolean ratenwechselrechteOptimieren;

    public Ratenwechselrechte() {
    }

    public Ratenwechselrechte anzahlWechsel(Integer anzahlWechsel) {

        this.anzahlWechsel = anzahlWechsel;
        return this;
    }

    /**
     * Die Häufigkeit mit der die Tilgungsrate geändert werden kann.
     *
     * @return anzahlWechsel
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_ANZAHL_WECHSEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getAnzahlWechsel() {
        return anzahlWechsel;
    }


    @JsonProperty(JSON_PROPERTY_ANZAHL_WECHSEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnzahlWechsel(Integer anzahlWechsel) {
        this.anzahlWechsel = anzahlWechsel;
    }

    public Ratenwechselrechte ersterRatenwechselAm(LocalDate ersterRatenwechselAm) {

        this.ersterRatenwechselAm = ersterRatenwechselAm;
        return this;
    }

    /**
     * Das Datum ab dem die Rate verändert werden darf.
     *
     * @return ersterRatenwechselAm
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ERSTER_RATENWECHSEL_AM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getErsterRatenwechselAm() {
        return ersterRatenwechselAm;
    }


    @JsonProperty(JSON_PROPERTY_ERSTER_RATENWECHSEL_AM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setErsterRatenwechselAm(LocalDate ersterRatenwechselAm) {
        this.ersterRatenwechselAm = ersterRatenwechselAm;
    }

    public Ratenwechselrechte maximaleTilgungsrate(BigDecimal maximaleTilgungsrate) {

        this.maximaleTilgungsrate = maximaleTilgungsrate;
        return this;
    }

    /**
     * Die höchste Tilgungsrate, die gewählt werden kann.
     *
     * @return maximaleTilgungsrate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_MAXIMALE_TILGUNGSRATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getMaximaleTilgungsrate() {
        return maximaleTilgungsrate;
    }


    @JsonProperty(JSON_PROPERTY_MAXIMALE_TILGUNGSRATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaximaleTilgungsrate(BigDecimal maximaleTilgungsrate) {
        this.maximaleTilgungsrate = maximaleTilgungsrate;
    }

    public Ratenwechselrechte minimaleTilgungsrate(BigDecimal minimaleTilgungsrate) {

        this.minimaleTilgungsrate = minimaleTilgungsrate;
        return this;
    }

    /**
     * Die niedrigste Tilgungsrate, die gewählt werden kann.
     *
     * @return minimaleTilgungsrate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_MINIMALE_TILGUNGSRATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getMinimaleTilgungsrate() {
        return minimaleTilgungsrate;
    }


    @JsonProperty(JSON_PROPERTY_MINIMALE_TILGUNGSRATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMinimaleTilgungsrate(BigDecimal minimaleTilgungsrate) {
        this.minimaleTilgungsrate = minimaleTilgungsrate;
    }

    public Ratenwechselrechte ratenwechselrechteOptimieren(Boolean ratenwechselrechteOptimieren) {

        this.ratenwechselrechteOptimieren = ratenwechselrechteOptimieren;
        return this;
    }

    /**
     * Der Wert steuert, ob nur solche Wechsel der Tilgungsrate bei der Berechnung der Vorfälliglkeitsentschädigung berücksichtigt werden sollen, die zu einer Verringerung der Vorfälligkeitsentschädigung führen, oder ob alle möglichen Wechsel der Tilgungsrate berücksichtigt werden sollen.
     *
     * @return ratenwechselrechteOptimieren
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_RATENWECHSELRECHTE_OPTIMIEREN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getRatenwechselrechteOptimieren() {
        return ratenwechselrechteOptimieren;
    }


    @JsonProperty(JSON_PROPERTY_RATENWECHSELRECHTE_OPTIMIEREN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRatenwechselrechteOptimieren(Boolean ratenwechselrechteOptimieren) {
        this.ratenwechselrechteOptimieren = ratenwechselrechteOptimieren;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Ratenwechselrechte ratenwechselrechte = (Ratenwechselrechte) o;
        return Objects.equals(this.anzahlWechsel, ratenwechselrechte.anzahlWechsel) &&
                Objects.equals(this.ersterRatenwechselAm, ratenwechselrechte.ersterRatenwechselAm) &&
                Objects.equals(this.maximaleTilgungsrate, ratenwechselrechte.maximaleTilgungsrate) &&
                Objects.equals(this.minimaleTilgungsrate, ratenwechselrechte.minimaleTilgungsrate) &&
                Objects.equals(this.ratenwechselrechteOptimieren, ratenwechselrechte.ratenwechselrechteOptimieren);
    }

    @Override
    public int hashCode() {
        return Objects.hash(anzahlWechsel, ersterRatenwechselAm, maximaleTilgungsrate, minimaleTilgungsrate, ratenwechselrechteOptimieren);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Ratenwechselrechte {\n");
        sb.append("    anzahlWechsel: ").append(toIndentedString(anzahlWechsel)).append("\n");
        sb.append("    ersterRatenwechselAm: ").append(toIndentedString(ersterRatenwechselAm)).append("\n");
        sb.append("    maximaleTilgungsrate: ").append(toIndentedString(maximaleTilgungsrate)).append("\n");
        sb.append("    minimaleTilgungsrate: ").append(toIndentedString(minimaleTilgungsrate)).append("\n");
        sb.append("    ratenwechselrechteOptimieren: ").append(toIndentedString(ratenwechselrechteOptimieren)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

