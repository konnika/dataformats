/*
 * Gesch√§fte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.Valid;

import java.util.Objects;

/**
 * Kundendaten1
 */
@JsonPropertyOrder({
        Kundendaten1.JSON_PROPERTY_ANREDE,
        Kundendaten1.JSON_PROPERTY_NAME,
        Kundendaten1.JSON_PROPERTY_NAME_FRAU,
        Kundendaten1.JSON_PROPERTY_KUNDENNUMMER,
        Kundendaten1.JSON_PROPERTY_ADRESSE
})
@JsonTypeName("Kundendaten_1")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class Kundendaten1 {
    public static final String JSON_PROPERTY_ANREDE = "anrede";
    private Anrede anrede;

    public static final String JSON_PROPERTY_NAME = "name";
    private Name name;

    public static final String JSON_PROPERTY_NAME_FRAU = "nameFrau";
    private Name nameFrau;

    public static final String JSON_PROPERTY_KUNDENNUMMER = "kundennummer";
    private String kundennummer;

    public static final String JSON_PROPERTY_ADRESSE = "adresse";
    private Adresse adresse;

    public Kundendaten1() {
    }

    public Kundendaten1 anrede(Anrede anrede) {

        this.anrede = anrede;
        return this;
    }

    /**
     * Get anrede
     *
     * @return anrede
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ANREDE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Anrede getAnrede() {
        return anrede;
    }


    @JsonProperty(JSON_PROPERTY_ANREDE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnrede(Anrede anrede) {
        this.anrede = anrede;
    }

    public Kundendaten1 name(Name name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Name getName() {
        return name;
    }


    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(Name name) {
        this.name = name;
    }

    public Kundendaten1 nameFrau(Name nameFrau) {

        this.nameFrau = nameFrau;
        return this;
    }

    /**
     * Get nameFrau
     *
     * @return nameFrau
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NAME_FRAU)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Name getNameFrau() {
        return nameFrau;
    }


    @JsonProperty(JSON_PROPERTY_NAME_FRAU)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNameFrau(Name nameFrau) {
        this.nameFrau = nameFrau;
    }

    public Kundendaten1 kundennummer(String kundennummer) {

        this.kundennummer = kundennummer;
        return this;
    }

    /**
     * Kundennummer des Kunden
     *
     * @return kundennummer
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_KUNDENNUMMER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getKundennummer() {
        return kundennummer;
    }


    @JsonProperty(JSON_PROPERTY_KUNDENNUMMER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKundennummer(String kundennummer) {
        this.kundennummer = kundennummer;
    }

    public Kundendaten1 adresse(Adresse adresse) {

        this.adresse = adresse;
        return this;
    }

    /**
     * Get adresse
     *
     * @return adresse
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ADRESSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Adresse getAdresse() {
        return adresse;
    }


    @JsonProperty(JSON_PROPERTY_ADRESSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdresse(Adresse adresse) {
        this.adresse = adresse;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Kundendaten1 kundendaten1 = (Kundendaten1) o;
        return Objects.equals(this.anrede, kundendaten1.anrede) &&
                Objects.equals(this.name, kundendaten1.name) &&
                Objects.equals(this.nameFrau, kundendaten1.nameFrau) &&
                Objects.equals(this.kundennummer, kundendaten1.kundennummer) &&
                Objects.equals(this.adresse, kundendaten1.adresse);
    }

    @Override
    public int hashCode() {
        return Objects.hash(anrede, name, nameFrau, kundennummer, adresse);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Kundendaten1 {\n");
        sb.append("    anrede: ").append(toIndentedString(anrede)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    nameFrau: ").append(toIndentedString(nameFrau)).append("\n");
        sb.append("    kundennummer: ").append(toIndentedString(kundennummer)).append("\n");
        sb.append("    adresse: ").append(toIndentedString(adresse)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

