/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Enthält die Sondertilgungsrechte.
 */
@JsonPropertyOrder({
        Sondertilgungsrechte.JSON_PROPERTY_BGB489_BERUECKSICHTIGEN,
        Sondertilgungsrechte.JSON_PROPERTY_DATUM_VOLLSTAENDIGER_AUSZAHLUNG_B_G_B489,
        Sondertilgungsrechte.JSON_PROPERTY_SONDERTILGUNGSRECHTE_OPTIMIEREN,
        Sondertilgungsrechte.JSON_PROPERTY_SONDERTILGUNGSRECHTE_TABELLE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class Sondertilgungsrechte {
    public static final String JSON_PROPERTY_BGB489_BERUECKSICHTIGEN = "bgb489Beruecksichtigen";
    private Boolean bgb489Beruecksichtigen;

    public static final String JSON_PROPERTY_DATUM_VOLLSTAENDIGER_AUSZAHLUNG_B_G_B489 = "datumVollstaendigerAuszahlungBGB489";
    private LocalDate datumVollstaendigerAuszahlungBGB489;

    public static final String JSON_PROPERTY_SONDERTILGUNGSRECHTE_OPTIMIEREN = "sondertilgungsrechteOptimieren";
    private Boolean sondertilgungsrechteOptimieren;

    public static final String JSON_PROPERTY_SONDERTILGUNGSRECHTE_TABELLE = "sondertilgungsrechteTabelle";
    private List<@Valid Sondertilgung> sondertilgungsrechteTabelle;

    public Sondertilgungsrechte() {
    }

    public Sondertilgungsrechte bgb489Beruecksichtigen(Boolean bgb489Beruecksichtigen) {

        this.bgb489Beruecksichtigen = bgb489Beruecksichtigen;
        return this;
    }

    /**
     * Steuert, ob bei der Berechnung das Kündigungsrecht nach §489 Abs. 1 Nr. 2 BGBberücksichtigt werden soll.
     *
     * @return bgb489Beruecksichtigen
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_BGB489_BERUECKSICHTIGEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getBgb489Beruecksichtigen() {
        return bgb489Beruecksichtigen;
    }


    @JsonProperty(JSON_PROPERTY_BGB489_BERUECKSICHTIGEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBgb489Beruecksichtigen(Boolean bgb489Beruecksichtigen) {
        this.bgb489Beruecksichtigen = bgb489Beruecksichtigen;
    }

    public Sondertilgungsrechte datumVollstaendigerAuszahlungBGB489(LocalDate datumVollstaendigerAuszahlungBGB489) {

        this.datumVollstaendigerAuszahlungBGB489 = datumVollstaendigerAuszahlungBGB489;
        return this;
    }

    /**
     * Das zum Kündigungsrecht gehörige Datum.
     *
     * @return datumVollstaendigerAuszahlungBGB489
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_DATUM_VOLLSTAENDIGER_AUSZAHLUNG_B_G_B489)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getDatumVollstaendigerAuszahlungBGB489() {
        return datumVollstaendigerAuszahlungBGB489;
    }


    @JsonProperty(JSON_PROPERTY_DATUM_VOLLSTAENDIGER_AUSZAHLUNG_B_G_B489)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDatumVollstaendigerAuszahlungBGB489(LocalDate datumVollstaendigerAuszahlungBGB489) {
        this.datumVollstaendigerAuszahlungBGB489 = datumVollstaendigerAuszahlungBGB489;
    }

    public Sondertilgungsrechte sondertilgungsrechteOptimieren(Boolean sondertilgungsrechteOptimieren) {

        this.sondertilgungsrechteOptimieren = sondertilgungsrechteOptimieren;
        return this;
    }

    /**
     * Einstellung zur Optimierung der Sondertilgungsrechte. Im Fall true werden nurdie Sondertilgungsrechte berücksichtigt, die die Vorfälligkeitsentschädigung verringern.Im Fall false werden die Sondertilgungsrechte zum frühestmöglichen Zeitpunkt ausgeübt.
     *
     * @return sondertilgungsrechteOptimieren
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_SONDERTILGUNGSRECHTE_OPTIMIEREN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getSondertilgungsrechteOptimieren() {
        return sondertilgungsrechteOptimieren;
    }


    @JsonProperty(JSON_PROPERTY_SONDERTILGUNGSRECHTE_OPTIMIEREN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSondertilgungsrechteOptimieren(Boolean sondertilgungsrechteOptimieren) {
        this.sondertilgungsrechteOptimieren = sondertilgungsrechteOptimieren;
    }

    public Sondertilgungsrechte sondertilgungsrechteTabelle(List<@Valid Sondertilgung> sondertilgungsrechteTabelle) {

        this.sondertilgungsrechteTabelle = sondertilgungsrechteTabelle;
        return this;
    }

    public Sondertilgungsrechte addSondertilgungsrechteTabelleItem(Sondertilgung sondertilgungsrechteTabelleItem) {
        if (this.sondertilgungsrechteTabelle == null) {
            this.sondertilgungsrechteTabelle = new ArrayList<>();
        }
        this.sondertilgungsrechteTabelle.add(sondertilgungsrechteTabelleItem);
        return this;
    }

    /**
     * Tabelle der Sondertilgungsrechte.
     *
     * @return sondertilgungsrechteTabelle
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_SONDERTILGUNGSRECHTE_TABELLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<@Valid Sondertilgung> getSondertilgungsrechteTabelle() {
        return sondertilgungsrechteTabelle;
    }


    @JsonProperty(JSON_PROPERTY_SONDERTILGUNGSRECHTE_TABELLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSondertilgungsrechteTabelle(List<@Valid Sondertilgung> sondertilgungsrechteTabelle) {
        this.sondertilgungsrechteTabelle = sondertilgungsrechteTabelle;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Sondertilgungsrechte sondertilgungsrechte = (Sondertilgungsrechte) o;
        return Objects.equals(this.bgb489Beruecksichtigen, sondertilgungsrechte.bgb489Beruecksichtigen) &&
                Objects.equals(this.datumVollstaendigerAuszahlungBGB489, sondertilgungsrechte.datumVollstaendigerAuszahlungBGB489) &&
                Objects.equals(this.sondertilgungsrechteOptimieren, sondertilgungsrechte.sondertilgungsrechteOptimieren) &&
                Objects.equals(this.sondertilgungsrechteTabelle, sondertilgungsrechte.sondertilgungsrechteTabelle);
    }

    @Override
    public int hashCode() {
        return Objects.hash(bgb489Beruecksichtigen, datumVollstaendigerAuszahlungBGB489, sondertilgungsrechteOptimieren, sondertilgungsrechteTabelle);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Sondertilgungsrechte {\n");
        sb.append("    bgb489Beruecksichtigen: ").append(toIndentedString(bgb489Beruecksichtigen)).append("\n");
        sb.append("    datumVollstaendigerAuszahlungBGB489: ").append(toIndentedString(datumVollstaendigerAuszahlungBGB489)).append("\n");
        sb.append("    sondertilgungsrechteOptimieren: ").append(toIndentedString(sondertilgungsrechteOptimieren)).append("\n");
        sb.append("    sondertilgungsrechteTabelle: ").append(toIndentedString(sondertilgungsrechteTabelle)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

