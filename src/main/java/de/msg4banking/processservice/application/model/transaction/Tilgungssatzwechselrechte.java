/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Objects;

/**
 * Recht, den Tilgungssatz ab einem bestimmten Datum innerhalb vorgegebener Grenzen zu ändern.
 */
@JsonPropertyOrder({
        Tilgungssatzwechselrechte.JSON_PROPERTY_ANZAHL_WECHSEL,
        Tilgungssatzwechselrechte.JSON_PROPERTY_ERSTER_TILGUNGSSATZWECHSEL_AM,
        Tilgungssatzwechselrechte.JSON_PROPERTY_MAXIMALER_TILGUNGSSATZ,
        Tilgungssatzwechselrechte.JSON_PROPERTY_MINIMALER_TILGUNGSSATZ,
        Tilgungssatzwechselrechte.JSON_PROPERTY_TILGUNGSSATZWECHSEL_OPTIMIEREN
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class Tilgungssatzwechselrechte {
    public static final String JSON_PROPERTY_ANZAHL_WECHSEL = "anzahlWechsel";
    private Integer anzahlWechsel;

    public static final String JSON_PROPERTY_ERSTER_TILGUNGSSATZWECHSEL_AM = "ersterTilgungssatzwechselAm";
    private LocalDate ersterTilgungssatzwechselAm;

    public static final String JSON_PROPERTY_MAXIMALER_TILGUNGSSATZ = "maximalerTilgungssatz";
    private BigDecimal maximalerTilgungssatz;

    public static final String JSON_PROPERTY_MINIMALER_TILGUNGSSATZ = "minimalerTilgungssatz";
    private BigDecimal minimalerTilgungssatz;

    public static final String JSON_PROPERTY_TILGUNGSSATZWECHSEL_OPTIMIEREN = "tilgungssatzwechselOptimieren";
    private Boolean tilgungssatzwechselOptimieren;

    public Tilgungssatzwechselrechte() {
    }

    public Tilgungssatzwechselrechte anzahlWechsel(Integer anzahlWechsel) {

        this.anzahlWechsel = anzahlWechsel;
        return this;
    }

    /**
     * Die Häufigkeit mit der der Tilgungssatz geändert werden kann.
     *
     * @return anzahlWechsel
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_ANZAHL_WECHSEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getAnzahlWechsel() {
        return anzahlWechsel;
    }


    @JsonProperty(JSON_PROPERTY_ANZAHL_WECHSEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnzahlWechsel(Integer anzahlWechsel) {
        this.anzahlWechsel = anzahlWechsel;
    }

    public Tilgungssatzwechselrechte ersterTilgungssatzwechselAm(LocalDate ersterTilgungssatzwechselAm) {

        this.ersterTilgungssatzwechselAm = ersterTilgungssatzwechselAm;
        return this;
    }

    /**
     * Das Datum ab dem der Tilgungssatz verändert werden darf.
     *
     * @return ersterTilgungssatzwechselAm
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ERSTER_TILGUNGSSATZWECHSEL_AM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getErsterTilgungssatzwechselAm() {
        return ersterTilgungssatzwechselAm;
    }


    @JsonProperty(JSON_PROPERTY_ERSTER_TILGUNGSSATZWECHSEL_AM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setErsterTilgungssatzwechselAm(LocalDate ersterTilgungssatzwechselAm) {
        this.ersterTilgungssatzwechselAm = ersterTilgungssatzwechselAm;
    }

    public Tilgungssatzwechselrechte maximalerTilgungssatz(BigDecimal maximalerTilgungssatz) {

        this.maximalerTilgungssatz = maximalerTilgungssatz;
        return this;
    }

    /**
     * Der höchste Tilgungssatz, der gewählt werden kann.
     *
     * @return maximalerTilgungssatz
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_MAXIMALER_TILGUNGSSATZ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getMaximalerTilgungssatz() {
        return maximalerTilgungssatz;
    }


    @JsonProperty(JSON_PROPERTY_MAXIMALER_TILGUNGSSATZ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaximalerTilgungssatz(BigDecimal maximalerTilgungssatz) {
        this.maximalerTilgungssatz = maximalerTilgungssatz;
    }

    public Tilgungssatzwechselrechte minimalerTilgungssatz(BigDecimal minimalerTilgungssatz) {

        this.minimalerTilgungssatz = minimalerTilgungssatz;
        return this;
    }

    /**
     * Der niedrigste Tilgungssatz, der gewählt werden kann.
     *
     * @return minimalerTilgungssatz
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_MINIMALER_TILGUNGSSATZ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getMinimalerTilgungssatz() {
        return minimalerTilgungssatz;
    }


    @JsonProperty(JSON_PROPERTY_MINIMALER_TILGUNGSSATZ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMinimalerTilgungssatz(BigDecimal minimalerTilgungssatz) {
        this.minimalerTilgungssatz = minimalerTilgungssatz;
    }

    public Tilgungssatzwechselrechte tilgungssatzwechselOptimieren(Boolean tilgungssatzwechselOptimieren) {

        this.tilgungssatzwechselOptimieren = tilgungssatzwechselOptimieren;
        return this;
    }

    /**
     * Der Wert steuert, ob nur solche Wechsel des Tilgungssatzes bei der Berechnung der Vorfälliglkeitsentschädigung berücksichtigt werden sollen, die zu einer Verringerung der Vorfälligkeitsentschädigung führen, oder ob alle möglichen Wechsel des Tilgungssatzes berücksichtigt werden sollen.
     *
     * @return tilgungssatzwechselOptimieren
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_TILGUNGSSATZWECHSEL_OPTIMIEREN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getTilgungssatzwechselOptimieren() {
        return tilgungssatzwechselOptimieren;
    }


    @JsonProperty(JSON_PROPERTY_TILGUNGSSATZWECHSEL_OPTIMIEREN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTilgungssatzwechselOptimieren(Boolean tilgungssatzwechselOptimieren) {
        this.tilgungssatzwechselOptimieren = tilgungssatzwechselOptimieren;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Tilgungssatzwechselrechte tilgungssatzwechselrechte = (Tilgungssatzwechselrechte) o;
        return Objects.equals(this.anzahlWechsel, tilgungssatzwechselrechte.anzahlWechsel) &&
                Objects.equals(this.ersterTilgungssatzwechselAm, tilgungssatzwechselrechte.ersterTilgungssatzwechselAm) &&
                Objects.equals(this.maximalerTilgungssatz, tilgungssatzwechselrechte.maximalerTilgungssatz) &&
                Objects.equals(this.minimalerTilgungssatz, tilgungssatzwechselrechte.minimalerTilgungssatz) &&
                Objects.equals(this.tilgungssatzwechselOptimieren, tilgungssatzwechselrechte.tilgungssatzwechselOptimieren);
    }

    @Override
    public int hashCode() {
        return Objects.hash(anzahlWechsel, ersterTilgungssatzwechselAm, maximalerTilgungssatz, minimalerTilgungssatz, tilgungssatzwechselOptimieren);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Tilgungssatzwechselrechte {\n");
        sb.append("    anzahlWechsel: ").append(toIndentedString(anzahlWechsel)).append("\n");
        sb.append("    ersterTilgungssatzwechselAm: ").append(toIndentedString(ersterTilgungssatzwechselAm)).append("\n");
        sb.append("    maximalerTilgungssatz: ").append(toIndentedString(maximalerTilgungssatz)).append("\n");
        sb.append("    minimalerTilgungssatz: ").append(toIndentedString(minimalerTilgungssatz)).append("\n");
        sb.append("    tilgungssatzwechselOptimieren: ").append(toIndentedString(tilgungssatzwechselOptimieren)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

