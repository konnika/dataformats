/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Objects;

/**
 * Hier können Stückzinsen erfasst werden.
 */
@JsonPropertyOrder({
        Stueckzins.JSON_PROPERTY_STUECKZINSTYP,
        Stueckzins.JSON_PROPERTY_ZINSLAUF_AB,
        Stueckzins.JSON_PROPERTY_NOMINALZINS_FUER_STUECKZINS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class Stueckzins {
    public static final String JSON_PROPERTY_STUECKZINSTYP = "stueckzinstyp";
    private Stueckzinstyp stueckzinstyp;

    public static final String JSON_PROPERTY_ZINSLAUF_AB = "zinslaufAb";
    private LocalDate zinslaufAb;

    public static final String JSON_PROPERTY_NOMINALZINS_FUER_STUECKZINS = "nominalzinsFuerStueckzins";
    private BigDecimal nominalzinsFuerStueckzins;

    public Stueckzins() {
    }

    public Stueckzins stueckzinstyp(Stueckzinstyp stueckzinstyp) {

        this.stueckzinstyp = stueckzinstyp;
        return this;
    }

    /**
     * Get stueckzinstyp
     *
     * @return stueckzinstyp
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_STUECKZINSTYP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Stueckzinstyp getStueckzinstyp() {
        return stueckzinstyp;
    }


    @JsonProperty(JSON_PROPERTY_STUECKZINSTYP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStueckzinstyp(Stueckzinstyp stueckzinstyp) {
        this.stueckzinstyp = stueckzinstyp;
    }

    public Stueckzins zinslaufAb(LocalDate zinslaufAb) {

        this.zinslaufAb = zinslaufAb;
        return this;
    }

    /**
     * Datum ab dem Bereitstellungszinsen berechnet werden.
     *
     * @return zinslaufAb
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ZINSLAUF_AB)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getZinslaufAb() {
        return zinslaufAb;
    }


    @JsonProperty(JSON_PROPERTY_ZINSLAUF_AB)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setZinslaufAb(LocalDate zinslaufAb) {
        this.zinslaufAb = zinslaufAb;
    }

    public Stueckzins nominalzinsFuerStueckzins(BigDecimal nominalzinsFuerStueckzins) {

        this.nominalzinsFuerStueckzins = nominalzinsFuerStueckzins;
        return this;
    }

    /**
     * Ist nur beim Overnightverfahren notwendig
     *
     * @return nominalzinsFuerStueckzins
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NOMINALZINS_FUER_STUECKZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNominalzinsFuerStueckzins() {
        return nominalzinsFuerStueckzins;
    }


    @JsonProperty(JSON_PROPERTY_NOMINALZINS_FUER_STUECKZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNominalzinsFuerStueckzins(BigDecimal nominalzinsFuerStueckzins) {
        this.nominalzinsFuerStueckzins = nominalzinsFuerStueckzins;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Stueckzins stueckzins = (Stueckzins) o;
        return Objects.equals(this.stueckzinstyp, stueckzins.stueckzinstyp) &&
                Objects.equals(this.zinslaufAb, stueckzins.zinslaufAb) &&
                Objects.equals(this.nominalzinsFuerStueckzins, stueckzins.nominalzinsFuerStueckzins);
    }

    @Override
    public int hashCode() {
        return Objects.hash(stueckzinstyp, zinslaufAb, nominalzinsFuerStueckzins);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Stueckzins {\n");
        sb.append("    stueckzinstyp: ").append(toIndentedString(stueckzinstyp)).append("\n");
        sb.append("    zinslaufAb: ").append(toIndentedString(zinslaufAb)).append("\n");
        sb.append("    nominalzinsFuerStueckzins: ").append(toIndentedString(nominalzinsFuerStueckzins)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

