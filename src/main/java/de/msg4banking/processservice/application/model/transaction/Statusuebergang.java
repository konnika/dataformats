/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;

import java.util.Objects;

/**
 * Statusuebergang
 */
@JsonPropertyOrder({
        Statusuebergang.JSON_PROPERTY_BENUTZERNAME,
        Statusuebergang.JSON_PROPERTY_INSTITUTSNAME,
        Statusuebergang.JSON_PROPERTY_AKTION,
        Statusuebergang.JSON_PROPERTY_MELDEN_MOEGLICH_BIS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class Statusuebergang {
    public static final String JSON_PROPERTY_BENUTZERNAME = "benutzername";
    private String benutzername;

    public static final String JSON_PROPERTY_INSTITUTSNAME = "institutsname";
    private String institutsname;

    public static final String JSON_PROPERTY_AKTION = "aktion";
    private Aktion aktion;

    public static final String JSON_PROPERTY_MELDEN_MOEGLICH_BIS = "meldenMoeglichBis";
    private Integer meldenMoeglichBis;

    public Statusuebergang() {
    }

    public Statusuebergang benutzername(String benutzername) {

        this.benutzername = benutzername;
        return this;
    }

    /**
     * Benutzername des MARZIPAN-Anwenders, mit dem der Statusübergang durchgeführt werden soll.
     *
     * @return benutzername
     */
    @jakarta.annotation.Nonnull
    @NotNull

    @JsonProperty(JSON_PROPERTY_BENUTZERNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getBenutzername() {
        return benutzername;
    }


    @JsonProperty(JSON_PROPERTY_BENUTZERNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBenutzername(String benutzername) {
        this.benutzername = benutzername;
    }

    public Statusuebergang institutsname(String institutsname) {

        this.institutsname = institutsname;
        return this;
    }

    /**
     * Der Name des Instituts. Dieses Element wird nur bei Multimandanten-Betrieb benötigt.
     *
     * @return institutsname
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_INSTITUTSNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getInstitutsname() {
        return institutsname;
    }


    @JsonProperty(JSON_PROPERTY_INSTITUTSNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInstitutsname(String institutsname) {
        this.institutsname = institutsname;
    }

    public Statusuebergang aktion(Aktion aktion) {

        this.aktion = aktion;
        return this;
    }

    /**
     * Get aktion
     *
     * @return aktion
     */
    @jakarta.annotation.Nonnull
    @NotNull
    @Valid

    @JsonProperty(JSON_PROPERTY_AKTION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Aktion getAktion() {
        return aktion;
    }


    @JsonProperty(JSON_PROPERTY_AKTION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAktion(Aktion aktion) {
        this.aktion = aktion;
    }

    public Statusuebergang meldenMoeglichBis(Integer meldenMoeglichBis) {

        this.meldenMoeglichBis = meldenMoeglichBis;
        return this;
    }

    /**
     * Dauer in Minuten, bis ein geprüftes Geschäft gemeldet werden muss. Dieses Element wird nur beim Prüfen von Kredit-Geschäften benötigt (in allen anderen Fällen ignoriert).
     *
     * @return meldenMoeglichBis
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_MELDEN_MOEGLICH_BIS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getMeldenMoeglichBis() {
        return meldenMoeglichBis;
    }


    @JsonProperty(JSON_PROPERTY_MELDEN_MOEGLICH_BIS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMeldenMoeglichBis(Integer meldenMoeglichBis) {
        this.meldenMoeglichBis = meldenMoeglichBis;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Statusuebergang statusuebergang = (Statusuebergang) o;
        return Objects.equals(this.benutzername, statusuebergang.benutzername) &&
                Objects.equals(this.institutsname, statusuebergang.institutsname) &&
                Objects.equals(this.aktion, statusuebergang.aktion) &&
                Objects.equals(this.meldenMoeglichBis, statusuebergang.meldenMoeglichBis);
    }

    @Override
    public int hashCode() {
        return Objects.hash(benutzername, institutsname, aktion, meldenMoeglichBis);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Statusuebergang {\n");
        sb.append("    benutzername: ").append(toIndentedString(benutzername)).append("\n");
        sb.append("    institutsname: ").append(toIndentedString(institutsname)).append("\n");
        sb.append("    aktion: ").append(toIndentedString(aktion)).append("\n");
        sb.append("    meldenMoeglichBis: ").append(toIndentedString(meldenMoeglichBis)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

