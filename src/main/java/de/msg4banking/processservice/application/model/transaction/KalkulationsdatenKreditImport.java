/*
 * Gesch√§fte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.util.Objects;

/**
 * KalkulationsdatenKreditImport
 */
@JsonPropertyOrder({
        KalkulationsdatenKreditImport.JSON_PROPERTY_EFFEKTIVDATEN,
        KalkulationsdatenKreditImport.JSON_PROPERTY_MARGEDATEN,
        KalkulationsdatenKreditImport.JSON_PROPERTY_NOMINALDATEN,
        KalkulationsdatenKreditImport.JSON_PROPERTY_TEILDECKUNGSDATEN,
        KalkulationsdatenKreditImport.JSON_PROPERTY_ADRESSRISIKO
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class KalkulationsdatenKreditImport {
    public static final String JSON_PROPERTY_EFFEKTIVDATEN = "effektivdaten";
    private EffektivdatenImport effektivdaten;

    public static final String JSON_PROPERTY_MARGEDATEN = "margedaten";
    private MargedatenImport margedaten;

    public static final String JSON_PROPERTY_NOMINALDATEN = "nominaldaten";
    private NominaldatenKreditImport nominaldaten;

    public static final String JSON_PROPERTY_TEILDECKUNGSDATEN = "teildeckungsdaten";
    private TeildeckungsdatenKreditImport teildeckungsdaten;

    public static final String JSON_PROPERTY_ADRESSRISIKO = "adressrisiko";
    private AdressrisikoImport adressrisiko;

    public KalkulationsdatenKreditImport() {
    }

    public KalkulationsdatenKreditImport effektivdaten(EffektivdatenImport effektivdaten) {

        this.effektivdaten = effektivdaten;
        return this;
    }

    /**
     * Get effektivdaten
     *
     * @return effektivdaten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_EFFEKTIVDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public EffektivdatenImport getEffektivdaten() {
        return effektivdaten;
    }


    @JsonProperty(JSON_PROPERTY_EFFEKTIVDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEffektivdaten(EffektivdatenImport effektivdaten) {
        this.effektivdaten = effektivdaten;
    }

    public KalkulationsdatenKreditImport margedaten(MargedatenImport margedaten) {

        this.margedaten = margedaten;
        return this;
    }

    /**
     * Get margedaten
     *
     * @return margedaten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_MARGEDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public MargedatenImport getMargedaten() {
        return margedaten;
    }


    @JsonProperty(JSON_PROPERTY_MARGEDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMargedaten(MargedatenImport margedaten) {
        this.margedaten = margedaten;
    }

    public KalkulationsdatenKreditImport nominaldaten(NominaldatenKreditImport nominaldaten) {

        this.nominaldaten = nominaldaten;
        return this;
    }

    /**
     * Get nominaldaten
     *
     * @return nominaldaten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NOMINALDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public NominaldatenKreditImport getNominaldaten() {
        return nominaldaten;
    }


    @JsonProperty(JSON_PROPERTY_NOMINALDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNominaldaten(NominaldatenKreditImport nominaldaten) {
        this.nominaldaten = nominaldaten;
    }

    public KalkulationsdatenKreditImport teildeckungsdaten(TeildeckungsdatenKreditImport teildeckungsdaten) {

        this.teildeckungsdaten = teildeckungsdaten;
        return this;
    }

    /**
     * Get teildeckungsdaten
     *
     * @return teildeckungsdaten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_TEILDECKUNGSDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TeildeckungsdatenKreditImport getTeildeckungsdaten() {
        return teildeckungsdaten;
    }


    @JsonProperty(JSON_PROPERTY_TEILDECKUNGSDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTeildeckungsdaten(TeildeckungsdatenKreditImport teildeckungsdaten) {
        this.teildeckungsdaten = teildeckungsdaten;
    }

    public KalkulationsdatenKreditImport adressrisiko(AdressrisikoImport adressrisiko) {

        this.adressrisiko = adressrisiko;
        return this;
    }

    /**
     * Get adressrisiko
     *
     * @return adressrisiko
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ADRESSRISIKO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public AdressrisikoImport getAdressrisiko() {
        return adressrisiko;
    }


    @JsonProperty(JSON_PROPERTY_ADRESSRISIKO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdressrisiko(AdressrisikoImport adressrisiko) {
        this.adressrisiko = adressrisiko;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        KalkulationsdatenKreditImport kalkulationsdatenKreditImport = (KalkulationsdatenKreditImport) o;
        return Objects.equals(this.effektivdaten, kalkulationsdatenKreditImport.effektivdaten) &&
                Objects.equals(this.margedaten, kalkulationsdatenKreditImport.margedaten) &&
                Objects.equals(this.nominaldaten, kalkulationsdatenKreditImport.nominaldaten) &&
                Objects.equals(this.teildeckungsdaten, kalkulationsdatenKreditImport.teildeckungsdaten) &&
                Objects.equals(this.adressrisiko, kalkulationsdatenKreditImport.adressrisiko);
    }

    @Override
    public int hashCode() {
        return Objects.hash(effektivdaten, margedaten, nominaldaten, teildeckungsdaten, adressrisiko);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KalkulationsdatenKreditImport {\n");
        sb.append("    effektivdaten: ").append(toIndentedString(effektivdaten)).append("\n");
        sb.append("    margedaten: ").append(toIndentedString(margedaten)).append("\n");
        sb.append("    nominaldaten: ").append(toIndentedString(nominaldaten)).append("\n");
        sb.append("    teildeckungsdaten: ").append(toIndentedString(teildeckungsdaten)).append("\n");
        sb.append("    adressrisiko: ").append(toIndentedString(adressrisiko)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

