/*
 * Gesch√§fte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

/**
 * Name
 */
@JsonPropertyOrder({
        Name.JSON_PROPERTY_VORNAME,
        Name.JSON_PROPERTY_NACHNAME,
        Name.JSON_PROPERTY_TITEL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class Name {
    public static final String JSON_PROPERTY_VORNAME = "vorname";
    private String vorname;

    public static final String JSON_PROPERTY_NACHNAME = "nachname";
    private String nachname;

    public static final String JSON_PROPERTY_TITEL = "titel";
    private String titel;

    public Name() {
    }

    public Name vorname(String vorname) {

        this.vorname = vorname;
        return this;
    }

    /**
     * Der Vorname der Person
     *
     * @return vorname
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_VORNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getVorname() {
        return vorname;
    }


    @JsonProperty(JSON_PROPERTY_VORNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVorname(String vorname) {
        this.vorname = vorname;
    }

    public Name nachname(String nachname) {

        this.nachname = nachname;
        return this;
    }

    /**
     * Der Nachname der Person
     *
     * @return nachname
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_NACHNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getNachname() {
        return nachname;
    }


    @JsonProperty(JSON_PROPERTY_NACHNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNachname(String nachname) {
        this.nachname = nachname;
    }

    public Name titel(String titel) {

        this.titel = titel;
        return this;
    }

    /**
     * Titel der Person (Dr., Dipl. Ing. usw)
     *
     * @return titel
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_TITEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTitel() {
        return titel;
    }


    @JsonProperty(JSON_PROPERTY_TITEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTitel(String titel) {
        this.titel = titel;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Name name = (Name) o;
        return Objects.equals(this.vorname, name.vorname) &&
                Objects.equals(this.nachname, name.nachname) &&
                Objects.equals(this.titel, name.titel);
    }

    @Override
    public int hashCode() {
        return Objects.hash(vorname, nachname, titel);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Name {\n");
        sb.append("    vorname: ").append(toIndentedString(vorname)).append("\n");
        sb.append("    nachname: ").append(toIndentedString(nachname)).append("\n");
        sb.append("    titel: ").append(toIndentedString(titel)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

