/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.Valid;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * InstitutskriterienWert1
 */
@JsonPropertyOrder({
        InstitutskriterienWert1.JSON_PROPERTY_NAME,
        InstitutskriterienWert1.JSON_PROPERTY_WERT,
        InstitutskriterienWert1.JSON_PROPERTY_TEXT,
        InstitutskriterienWert1.JSON_PROPERTY_TEXT_DARSTELLUNG,
        InstitutskriterienWert1.JSON_PROPERTY_AUSGABE,
        InstitutskriterienWert1.JSON_PROPERTY_INFORMATIV
})
@JsonTypeName("InstitutskriterienWert_1")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class InstitutskriterienWert1 {
    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_WERT = "wert";
    private BigDecimal wert;

    public static final String JSON_PROPERTY_TEXT = "text";
    private String text;

    public static final String JSON_PROPERTY_TEXT_DARSTELLUNG = "textDarstellung";
    private Boolean textDarstellung;

    public static final String JSON_PROPERTY_AUSGABE = "ausgabe";
    private Boolean ausgabe;

    public static final String JSON_PROPERTY_INFORMATIV = "informativ";
    private Boolean informativ;

    public InstitutskriterienWert1() {
    }

    public InstitutskriterienWert1 name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Die Bezeichnung des Institutskriteriums. Sie entspricht einer angepassten Version der in der Weboberfläche dargestellten Bezeichnung, bei der Striche und Leerzeichen gelöscht, Umlaute durch ihre Umschreibungen ersetzt, alles kleingeschrieben und zusätzlich das Präfix INSTKRIT_ ergänzt wird.
     *
     * @return name
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getName() {
        return name;
    }


    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public InstitutskriterienWert1 wert(BigDecimal wert) {

        this.wert = wert;
        return this;
    }

    /**
     * Aktueller Wert des Institutskriteriums.
     *
     * @return wert
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_WERT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getWert() {
        return wert;
    }


    @JsonProperty(JSON_PROPERTY_WERT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWert(BigDecimal wert) {
        this.wert = wert;
    }

    public InstitutskriterienWert1 text(String text) {

        this.text = text;
        return this;
    }

    /**
     * Text für ein Institutskriterium.
     *
     * @return text
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getText() {
        return text;
    }


    @JsonProperty(JSON_PROPERTY_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setText(String text) {
        this.text = text;
    }

    public InstitutskriterienWert1 textDarstellung(Boolean textDarstellung) {

        this.textDarstellung = textDarstellung;
        return this;
    }

    /**
     * Text Darstellung flag für ein Institutskriterium.
     *
     * @return textDarstellung
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_TEXT_DARSTELLUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getTextDarstellung() {
        return textDarstellung;
    }


    @JsonProperty(JSON_PROPERTY_TEXT_DARSTELLUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTextDarstellung(Boolean textDarstellung) {
        this.textDarstellung = textDarstellung;
    }

    public InstitutskriterienWert1 ausgabe(Boolean ausgabe) {

        this.ausgabe = ausgabe;
        return this;
    }

    /**
     * Markierung, ob das Institutskriterium auf Angebot und Berechnungsprotokoll mit ausgedruckt werden soll.
     *
     * @return ausgabe
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_AUSGABE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAusgabe() {
        return ausgabe;
    }


    @JsonProperty(JSON_PROPERTY_AUSGABE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAusgabe(Boolean ausgabe) {
        this.ausgabe = ausgabe;
    }

    public InstitutskriterienWert1 informativ(Boolean informativ) {

        this.informativ = informativ;
        return this;
    }

    /**
     * Markierung, ob das Institutskriterium nur informativ ist oder für die Berechnung relevant sein kann. Die Einstellung kann nicht geändert werden.
     *
     * @return informativ
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_INFORMATIV)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getInformativ() {
        return informativ;
    }


    @JsonProperty(JSON_PROPERTY_INFORMATIV)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInformativ(Boolean informativ) {
        this.informativ = informativ;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InstitutskriterienWert1 institutskriterienWert1 = (InstitutskriterienWert1) o;
        return Objects.equals(this.name, institutskriterienWert1.name) &&
                Objects.equals(this.wert, institutskriterienWert1.wert) &&
                Objects.equals(this.text, institutskriterienWert1.text) &&
                Objects.equals(this.textDarstellung, institutskriterienWert1.textDarstellung) &&
                Objects.equals(this.ausgabe, institutskriterienWert1.ausgabe) &&
                Objects.equals(this.informativ, institutskriterienWert1.informativ);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, wert, text, textDarstellung, ausgabe, informativ);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InstitutskriterienWert1 {\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    wert: ").append(toIndentedString(wert)).append("\n");
        sb.append("    text: ").append(toIndentedString(text)).append("\n");
        sb.append("    textDarstellung: ").append(toIndentedString(textDarstellung)).append("\n");
        sb.append("    ausgabe: ").append(toIndentedString(ausgabe)).append("\n");
        sb.append("    informativ: ").append(toIndentedString(informativ)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

