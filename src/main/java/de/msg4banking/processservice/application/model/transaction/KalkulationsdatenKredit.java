/*
 * Gesch√§fte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.util.Objects;

/**
 * KalkulationsdatenKredit
 */
@JsonPropertyOrder({
        KalkulationsdatenKredit.JSON_PROPERTY_EFFEKTIVDATEN,
        KalkulationsdatenKredit.JSON_PROPERTY_MARGEDATEN,
        KalkulationsdatenKredit.JSON_PROPERTY_NOMINALDATEN,
        KalkulationsdatenKredit.JSON_PROPERTY_LIQUIDITAETSKOSTEN,
        KalkulationsdatenKredit.JSON_PROPERTY_TEILDECKUNGSDATEN,
        KalkulationsdatenKredit.JSON_PROPERTY_ADRESSRISIKO
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class KalkulationsdatenKredit {
    public static final String JSON_PROPERTY_EFFEKTIVDATEN = "effektivdaten";
    private Effektivdaten effektivdaten;

    public static final String JSON_PROPERTY_MARGEDATEN = "margedaten";
    private Margedaten margedaten;

    public static final String JSON_PROPERTY_NOMINALDATEN = "nominaldaten";
    private NominaldatenKredit nominaldaten;

    public static final String JSON_PROPERTY_LIQUIDITAETSKOSTEN = "liquiditaetskosten";
    private Liquiditaetskosten liquiditaetskosten;

    public static final String JSON_PROPERTY_TEILDECKUNGSDATEN = "teildeckungsdaten";
    private TeildeckungsdatenKredit teildeckungsdaten;

    public static final String JSON_PROPERTY_ADRESSRISIKO = "adressrisiko";
    private Adressrisiko adressrisiko;

    public KalkulationsdatenKredit() {
    }

    public KalkulationsdatenKredit effektivdaten(Effektivdaten effektivdaten) {

        this.effektivdaten = effektivdaten;
        return this;
    }

    /**
     * Get effektivdaten
     *
     * @return effektivdaten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_EFFEKTIVDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Effektivdaten getEffektivdaten() {
        return effektivdaten;
    }


    @JsonProperty(JSON_PROPERTY_EFFEKTIVDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEffektivdaten(Effektivdaten effektivdaten) {
        this.effektivdaten = effektivdaten;
    }

    public KalkulationsdatenKredit margedaten(Margedaten margedaten) {

        this.margedaten = margedaten;
        return this;
    }

    /**
     * Get margedaten
     *
     * @return margedaten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_MARGEDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Margedaten getMargedaten() {
        return margedaten;
    }


    @JsonProperty(JSON_PROPERTY_MARGEDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMargedaten(Margedaten margedaten) {
        this.margedaten = margedaten;
    }

    public KalkulationsdatenKredit nominaldaten(NominaldatenKredit nominaldaten) {

        this.nominaldaten = nominaldaten;
        return this;
    }

    /**
     * Get nominaldaten
     *
     * @return nominaldaten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NOMINALDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public NominaldatenKredit getNominaldaten() {
        return nominaldaten;
    }


    @JsonProperty(JSON_PROPERTY_NOMINALDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNominaldaten(NominaldatenKredit nominaldaten) {
        this.nominaldaten = nominaldaten;
    }

    public KalkulationsdatenKredit liquiditaetskosten(Liquiditaetskosten liquiditaetskosten) {

        this.liquiditaetskosten = liquiditaetskosten;
        return this;
    }

    /**
     * Get liquiditaetskosten
     *
     * @return liquiditaetskosten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_LIQUIDITAETSKOSTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Liquiditaetskosten getLiquiditaetskosten() {
        return liquiditaetskosten;
    }


    @JsonProperty(JSON_PROPERTY_LIQUIDITAETSKOSTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLiquiditaetskosten(Liquiditaetskosten liquiditaetskosten) {
        this.liquiditaetskosten = liquiditaetskosten;
    }

    public KalkulationsdatenKredit teildeckungsdaten(TeildeckungsdatenKredit teildeckungsdaten) {

        this.teildeckungsdaten = teildeckungsdaten;
        return this;
    }

    /**
     * Get teildeckungsdaten
     *
     * @return teildeckungsdaten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_TEILDECKUNGSDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TeildeckungsdatenKredit getTeildeckungsdaten() {
        return teildeckungsdaten;
    }


    @JsonProperty(JSON_PROPERTY_TEILDECKUNGSDATEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTeildeckungsdaten(TeildeckungsdatenKredit teildeckungsdaten) {
        this.teildeckungsdaten = teildeckungsdaten;
    }

    public KalkulationsdatenKredit adressrisiko(Adressrisiko adressrisiko) {

        this.adressrisiko = adressrisiko;
        return this;
    }

    /**
     * Get adressrisiko
     *
     * @return adressrisiko
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ADRESSRISIKO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Adressrisiko getAdressrisiko() {
        return adressrisiko;
    }


    @JsonProperty(JSON_PROPERTY_ADRESSRISIKO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdressrisiko(Adressrisiko adressrisiko) {
        this.adressrisiko = adressrisiko;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        KalkulationsdatenKredit kalkulationsdatenKredit = (KalkulationsdatenKredit) o;
        return Objects.equals(this.effektivdaten, kalkulationsdatenKredit.effektivdaten) &&
                Objects.equals(this.margedaten, kalkulationsdatenKredit.margedaten) &&
                Objects.equals(this.nominaldaten, kalkulationsdatenKredit.nominaldaten) &&
                Objects.equals(this.liquiditaetskosten, kalkulationsdatenKredit.liquiditaetskosten) &&
                Objects.equals(this.teildeckungsdaten, kalkulationsdatenKredit.teildeckungsdaten) &&
                Objects.equals(this.adressrisiko, kalkulationsdatenKredit.adressrisiko);
    }

    @Override
    public int hashCode() {
        return Objects.hash(effektivdaten, margedaten, nominaldaten, liquiditaetskosten, teildeckungsdaten, adressrisiko);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KalkulationsdatenKredit {\n");
        sb.append("    effektivdaten: ").append(toIndentedString(effektivdaten)).append("\n");
        sb.append("    margedaten: ").append(toIndentedString(margedaten)).append("\n");
        sb.append("    nominaldaten: ").append(toIndentedString(nominaldaten)).append("\n");
        sb.append("    liquiditaetskosten: ").append(toIndentedString(liquiditaetskosten)).append("\n");
        sb.append("    teildeckungsdaten: ").append(toIndentedString(teildeckungsdaten)).append("\n");
        sb.append("    adressrisiko: ").append(toIndentedString(adressrisiko)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

