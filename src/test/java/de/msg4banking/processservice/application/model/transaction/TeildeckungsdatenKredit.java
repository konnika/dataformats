/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Objects;

/**
 * TeildeckungsdatenKredit
 */
@JsonPropertyOrder({
        TeildeckungsdatenKredit.JSON_PROPERTY_ANFAENGLICHE_TILGUNG_GEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_AUFTEILUNGSMODUS,
        TeildeckungsdatenKredit.JSON_PROPERTY_BELEIHUNGSWERT,
        TeildeckungsdatenKredit.JSON_PROPERTY_DECKUNGSSUMME,
        TeildeckungsdatenKredit.JSON_PROPERTY_GEDECKTER_ANTEIL_DES_BELEIHUNGSWERTS,
        TeildeckungsdatenKredit.JSON_PROPERTY_NICHT_BEZAHLTER_ZINSBETRAG_GEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_NICHT_VERRECHNETE_RATEN_GEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_NICHT_BEZAHLTER_ZINSBETRAG_UNGEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_NICHT_VERRECHNETE_RATEN_UNGEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_RATE_GEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_TILGUNGSBEGINN_GEDECKTER_TEIL,
        TeildeckungsdatenKredit.JSON_PROPERTY_MARGEDATEN_GEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_MARGEDATEN_UNGEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_SUMME_TILGUNGEN_GEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_SUMME_TILGUNGEN_UNGEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_SUMME_ZINSEN_GEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_SUMME_ZINSEN_UNGEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_SUMME_AUSZAHLUNGEN_GEDECKT,
        TeildeckungsdatenKredit.JSON_PROPERTY_SUMME_AUSZAHLUNGEN_UNGEDECKT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class TeildeckungsdatenKredit {
    public static final String JSON_PROPERTY_ANFAENGLICHE_TILGUNG_GEDECKT = "anfaenglicheTilgungGedeckt";
    private BigDecimal anfaenglicheTilgungGedeckt;

    public static final String JSON_PROPERTY_AUFTEILUNGSMODUS = "aufteilungsmodus";
    private Teildeckungsmodus aufteilungsmodus;

    public static final String JSON_PROPERTY_BELEIHUNGSWERT = "beleihungswert";
    private BigDecimal beleihungswert;

    public static final String JSON_PROPERTY_DECKUNGSSUMME = "deckungssumme";
    private BigDecimal deckungssumme;

    public static final String JSON_PROPERTY_GEDECKTER_ANTEIL_DES_BELEIHUNGSWERTS = "gedeckterAnteilDesBeleihungswerts";
    private BigDecimal gedeckterAnteilDesBeleihungswerts;

    public static final String JSON_PROPERTY_NICHT_BEZAHLTER_ZINSBETRAG_GEDECKT = "nichtBezahlterZinsbetragGedeckt";
    private BigDecimal nichtBezahlterZinsbetragGedeckt;

    public static final String JSON_PROPERTY_NICHT_VERRECHNETE_RATEN_GEDECKT = "nichtVerrechneteRatenGedeckt";
    private BigDecimal nichtVerrechneteRatenGedeckt;

    public static final String JSON_PROPERTY_NICHT_BEZAHLTER_ZINSBETRAG_UNGEDECKT = "nichtBezahlterZinsbetragUngedeckt";
    private BigDecimal nichtBezahlterZinsbetragUngedeckt;

    public static final String JSON_PROPERTY_NICHT_VERRECHNETE_RATEN_UNGEDECKT = "nichtVerrechneteRatenUngedeckt";
    private BigDecimal nichtVerrechneteRatenUngedeckt;

    public static final String JSON_PROPERTY_RATE_GEDECKT = "rateGedeckt";
    private BigDecimal rateGedeckt;

    public static final String JSON_PROPERTY_TILGUNGSBEGINN_GEDECKTER_TEIL = "tilgungsbeginnGedeckterTeil";
    private LocalDate tilgungsbeginnGedeckterTeil;

    public static final String JSON_PROPERTY_MARGEDATEN_GEDECKT = "margedatenGedeckt";
    private Margedaten margedatenGedeckt;

    public static final String JSON_PROPERTY_MARGEDATEN_UNGEDECKT = "margedatenUngedeckt";
    private Margedaten margedatenUngedeckt;

    public static final String JSON_PROPERTY_SUMME_TILGUNGEN_GEDECKT = "summeTilgungenGedeckt";
    private BigDecimal summeTilgungenGedeckt;

    public static final String JSON_PROPERTY_SUMME_TILGUNGEN_UNGEDECKT = "summeTilgungenUngedeckt";
    private BigDecimal summeTilgungenUngedeckt;

    public static final String JSON_PROPERTY_SUMME_ZINSEN_GEDECKT = "summeZinsenGedeckt";
    private BigDecimal summeZinsenGedeckt;

    public static final String JSON_PROPERTY_SUMME_ZINSEN_UNGEDECKT = "summeZinsenUngedeckt";
    private BigDecimal summeZinsenUngedeckt;

    public static final String JSON_PROPERTY_SUMME_AUSZAHLUNGEN_GEDECKT = "summeAuszahlungenGedeckt";
    private BigDecimal summeAuszahlungenGedeckt;

    public static final String JSON_PROPERTY_SUMME_AUSZAHLUNGEN_UNGEDECKT = "summeAuszahlungenUngedeckt";
    private BigDecimal summeAuszahlungenUngedeckt;

    public TeildeckungsdatenKredit() {
    }

    public TeildeckungsdatenKredit anfaenglicheTilgungGedeckt(BigDecimal anfaenglicheTilgungGedeckt) {

        this.anfaenglicheTilgungGedeckt = anfaenglicheTilgungGedeckt;
        return this;
    }

    /**
     * Der Tilgungssatz des gedeckten Darlehensteils bezogen auf das Ursprungskapital. Dieser Wert ist nur bei annuitären Kontoführungen relevant.
     *
     * @return anfaenglicheTilgungGedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ANFAENGLICHE_TILGUNG_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getAnfaenglicheTilgungGedeckt() {
        return anfaenglicheTilgungGedeckt;
    }


    @JsonProperty(JSON_PROPERTY_ANFAENGLICHE_TILGUNG_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnfaenglicheTilgungGedeckt(BigDecimal anfaenglicheTilgungGedeckt) {
        this.anfaenglicheTilgungGedeckt = anfaenglicheTilgungGedeckt;
    }

    public TeildeckungsdatenKredit aufteilungsmodus(Teildeckungsmodus aufteilungsmodus) {

        this.aufteilungsmodus = aufteilungsmodus;
        return this;
    }

    /**
     * Get aufteilungsmodus
     *
     * @return aufteilungsmodus
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_AUFTEILUNGSMODUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Teildeckungsmodus getAufteilungsmodus() {
        return aufteilungsmodus;
    }


    @JsonProperty(JSON_PROPERTY_AUFTEILUNGSMODUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAufteilungsmodus(Teildeckungsmodus aufteilungsmodus) {
        this.aufteilungsmodus = aufteilungsmodus;
    }

    public TeildeckungsdatenKredit beleihungswert(BigDecimal beleihungswert) {

        this.beleihungswert = beleihungswert;
        return this;
    }

    /**
     * Der Beleihungswert. Falls die Deckungssumme nicht gesetzt wird, ist dieser Parameter ein Pflichtfeld.
     *
     * @return beleihungswert
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_BELEIHUNGSWERT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getBeleihungswert() {
        return beleihungswert;
    }


    @JsonProperty(JSON_PROPERTY_BELEIHUNGSWERT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBeleihungswert(BigDecimal beleihungswert) {
        this.beleihungswert = beleihungswert;
    }

    public TeildeckungsdatenKredit deckungssumme(BigDecimal deckungssumme) {

        this.deckungssumme = deckungssumme;
        return this;
    }

    /**
     * Die Deckungssumme, welche dem Betragswert des gedeckten Anteils des Beleihungswertes entspricht. Wird die Deckungssumme übergeben, darf keine Vorgabe für den Beleihungswert und den gedeckten Anteil des Beleihungswertes gemacht werden.
     *
     * @return deckungssumme
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_DECKUNGSSUMME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getDeckungssumme() {
        return deckungssumme;
    }


    @JsonProperty(JSON_PROPERTY_DECKUNGSSUMME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeckungssumme(BigDecimal deckungssumme) {
        this.deckungssumme = deckungssumme;
    }

    public TeildeckungsdatenKredit gedeckterAnteilDesBeleihungswerts(BigDecimal gedeckterAnteilDesBeleihungswerts) {

        this.gedeckterAnteilDesBeleihungswerts = gedeckterAnteilDesBeleihungswerts;
        return this;
    }

    /**
     * Der gedeckte Anteil des Beleihungswerts. Falls die Deckungssumme nicht gesetzt wird, ist dieser Parameter ein Pflichtfeld.
     *
     * @return gedeckterAnteilDesBeleihungswerts
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_GEDECKTER_ANTEIL_DES_BELEIHUNGSWERTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getGedeckterAnteilDesBeleihungswerts() {
        return gedeckterAnteilDesBeleihungswerts;
    }


    @JsonProperty(JSON_PROPERTY_GEDECKTER_ANTEIL_DES_BELEIHUNGSWERTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGedeckterAnteilDesBeleihungswerts(BigDecimal gedeckterAnteilDesBeleihungswerts) {
        this.gedeckterAnteilDesBeleihungswerts = gedeckterAnteilDesBeleihungswerts;
    }

    public TeildeckungsdatenKredit nichtBezahlterZinsbetragGedeckt(BigDecimal nichtBezahlterZinsbetragGedeckt) {

        this.nichtBezahlterZinsbetragGedeckt = nichtBezahlterZinsbetragGedeckt;
        return this;
    }

    /**
     * Der zum Zeitpunkt der Prolongation der noch nicht verrechnete Zins des gedeckten Anteils des Kredits.
     *
     * @return nichtBezahlterZinsbetragGedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NICHT_BEZAHLTER_ZINSBETRAG_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNichtBezahlterZinsbetragGedeckt() {
        return nichtBezahlterZinsbetragGedeckt;
    }


    @JsonProperty(JSON_PROPERTY_NICHT_BEZAHLTER_ZINSBETRAG_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNichtBezahlterZinsbetragGedeckt(BigDecimal nichtBezahlterZinsbetragGedeckt) {
        this.nichtBezahlterZinsbetragGedeckt = nichtBezahlterZinsbetragGedeckt;
    }

    public TeildeckungsdatenKredit nichtVerrechneteRatenGedeckt(BigDecimal nichtVerrechneteRatenGedeckt) {

        this.nichtVerrechneteRatenGedeckt = nichtVerrechneteRatenGedeckt;
        return this;
    }

    /**
     * Die zum Zeitpunkt der Prolongation noch nicht verrechneten Tilgungen des gedeckten Anteils des Kredits.
     *
     * @return nichtVerrechneteRatenGedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NICHT_VERRECHNETE_RATEN_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNichtVerrechneteRatenGedeckt() {
        return nichtVerrechneteRatenGedeckt;
    }


    @JsonProperty(JSON_PROPERTY_NICHT_VERRECHNETE_RATEN_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNichtVerrechneteRatenGedeckt(BigDecimal nichtVerrechneteRatenGedeckt) {
        this.nichtVerrechneteRatenGedeckt = nichtVerrechneteRatenGedeckt;
    }

    public TeildeckungsdatenKredit nichtBezahlterZinsbetragUngedeckt(BigDecimal nichtBezahlterZinsbetragUngedeckt) {

        this.nichtBezahlterZinsbetragUngedeckt = nichtBezahlterZinsbetragUngedeckt;
        return this;
    }

    /**
     * Der zum Zeitpunkt der Prolongation der noch nicht verrechnete Zins des ungedeckten Anteils des Kredits.
     *
     * @return nichtBezahlterZinsbetragUngedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NICHT_BEZAHLTER_ZINSBETRAG_UNGEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNichtBezahlterZinsbetragUngedeckt() {
        return nichtBezahlterZinsbetragUngedeckt;
    }


    @JsonProperty(JSON_PROPERTY_NICHT_BEZAHLTER_ZINSBETRAG_UNGEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNichtBezahlterZinsbetragUngedeckt(BigDecimal nichtBezahlterZinsbetragUngedeckt) {
        this.nichtBezahlterZinsbetragUngedeckt = nichtBezahlterZinsbetragUngedeckt;
    }

    public TeildeckungsdatenKredit nichtVerrechneteRatenUngedeckt(BigDecimal nichtVerrechneteRatenUngedeckt) {

        this.nichtVerrechneteRatenUngedeckt = nichtVerrechneteRatenUngedeckt;
        return this;
    }

    /**
     * Die zum Zeitpunkt der Prolongation noch nicht verrechneten Tilgungen des ungedeckten Anteils des Kredits.
     *
     * @return nichtVerrechneteRatenUngedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NICHT_VERRECHNETE_RATEN_UNGEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNichtVerrechneteRatenUngedeckt() {
        return nichtVerrechneteRatenUngedeckt;
    }


    @JsonProperty(JSON_PROPERTY_NICHT_VERRECHNETE_RATEN_UNGEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNichtVerrechneteRatenUngedeckt(BigDecimal nichtVerrechneteRatenUngedeckt) {
        this.nichtVerrechneteRatenUngedeckt = nichtVerrechneteRatenUngedeckt;
    }

    public TeildeckungsdatenKredit rateGedeckt(BigDecimal rateGedeckt) {

        this.rateGedeckt = rateGedeckt;
        return this;
    }

    /**
     * Tilgungsrate des gedeckten Teils. Diese Eingabe ist nur bei Tilgungsdarlehen relevant.
     *
     * @return rateGedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_RATE_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getRateGedeckt() {
        return rateGedeckt;
    }


    @JsonProperty(JSON_PROPERTY_RATE_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRateGedeckt(BigDecimal rateGedeckt) {
        this.rateGedeckt = rateGedeckt;
    }

    public TeildeckungsdatenKredit tilgungsbeginnGedeckterTeil(LocalDate tilgungsbeginnGedeckterTeil) {

        this.tilgungsbeginnGedeckterTeil = tilgungsbeginnGedeckterTeil;
        return this;
    }

    /**
     * Dieses Datum gibt an, ab wann die Tilgung des gedeckten Teils beginnt. Die Tilgung des gedeckten Teils kann früher beginnen, nämlich wenn der ungedeckt Teil schon vor diesem Datum vollständig getilgt wurde.
     *
     * @return tilgungsbeginnGedeckterTeil
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_TILGUNGSBEGINN_GEDECKTER_TEIL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getTilgungsbeginnGedeckterTeil() {
        return tilgungsbeginnGedeckterTeil;
    }


    @JsonProperty(JSON_PROPERTY_TILGUNGSBEGINN_GEDECKTER_TEIL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTilgungsbeginnGedeckterTeil(LocalDate tilgungsbeginnGedeckterTeil) {
        this.tilgungsbeginnGedeckterTeil = tilgungsbeginnGedeckterTeil;
    }

    public TeildeckungsdatenKredit margedatenGedeckt(Margedaten margedatenGedeckt) {

        this.margedatenGedeckt = margedatenGedeckt;
        return this;
    }

    /**
     * Get margedatenGedeckt
     *
     * @return margedatenGedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_MARGEDATEN_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Margedaten getMargedatenGedeckt() {
        return margedatenGedeckt;
    }


    @JsonProperty(JSON_PROPERTY_MARGEDATEN_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMargedatenGedeckt(Margedaten margedatenGedeckt) {
        this.margedatenGedeckt = margedatenGedeckt;
    }

    public TeildeckungsdatenKredit margedatenUngedeckt(Margedaten margedatenUngedeckt) {

        this.margedatenUngedeckt = margedatenUngedeckt;
        return this;
    }

    /**
     * Get margedatenUngedeckt
     *
     * @return margedatenUngedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_MARGEDATEN_UNGEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Margedaten getMargedatenUngedeckt() {
        return margedatenUngedeckt;
    }


    @JsonProperty(JSON_PROPERTY_MARGEDATEN_UNGEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMargedatenUngedeckt(Margedaten margedatenUngedeckt) {
        this.margedatenUngedeckt = margedatenUngedeckt;
    }

    public TeildeckungsdatenKredit summeTilgungenGedeckt(BigDecimal summeTilgungenGedeckt) {

        this.summeTilgungenGedeckt = summeTilgungenGedeckt;
        return this;
    }

    /**
     * Die Summe der Tilgungen aus dem gedeckten Anteil des Kredits.
     *
     * @return summeTilgungenGedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_SUMME_TILGUNGEN_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getSummeTilgungenGedeckt() {
        return summeTilgungenGedeckt;
    }


    @JsonProperty(JSON_PROPERTY_SUMME_TILGUNGEN_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSummeTilgungenGedeckt(BigDecimal summeTilgungenGedeckt) {
        this.summeTilgungenGedeckt = summeTilgungenGedeckt;
    }

    public TeildeckungsdatenKredit summeTilgungenUngedeckt(BigDecimal summeTilgungenUngedeckt) {

        this.summeTilgungenUngedeckt = summeTilgungenUngedeckt;
        return this;
    }

    /**
     * Die Summe der Tilgungen aus dem ungedeckten Anteil des Kredits.
     *
     * @return summeTilgungenUngedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_SUMME_TILGUNGEN_UNGEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getSummeTilgungenUngedeckt() {
        return summeTilgungenUngedeckt;
    }


    @JsonProperty(JSON_PROPERTY_SUMME_TILGUNGEN_UNGEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSummeTilgungenUngedeckt(BigDecimal summeTilgungenUngedeckt) {
        this.summeTilgungenUngedeckt = summeTilgungenUngedeckt;
    }

    public TeildeckungsdatenKredit summeZinsenGedeckt(BigDecimal summeZinsenGedeckt) {

        this.summeZinsenGedeckt = summeZinsenGedeckt;
        return this;
    }

    /**
     * Die Summe der Zinsen aus dem gedeckten Anteil des Kredits.
     *
     * @return summeZinsenGedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_SUMME_ZINSEN_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getSummeZinsenGedeckt() {
        return summeZinsenGedeckt;
    }


    @JsonProperty(JSON_PROPERTY_SUMME_ZINSEN_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSummeZinsenGedeckt(BigDecimal summeZinsenGedeckt) {
        this.summeZinsenGedeckt = summeZinsenGedeckt;
    }

    public TeildeckungsdatenKredit summeZinsenUngedeckt(BigDecimal summeZinsenUngedeckt) {

        this.summeZinsenUngedeckt = summeZinsenUngedeckt;
        return this;
    }

    /**
     * Die Summe der Zinsen aus dem ungedeckten Anteil des Kredits.
     *
     * @return summeZinsenUngedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_SUMME_ZINSEN_UNGEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getSummeZinsenUngedeckt() {
        return summeZinsenUngedeckt;
    }


    @JsonProperty(JSON_PROPERTY_SUMME_ZINSEN_UNGEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSummeZinsenUngedeckt(BigDecimal summeZinsenUngedeckt) {
        this.summeZinsenUngedeckt = summeZinsenUngedeckt;
    }

    public TeildeckungsdatenKredit summeAuszahlungenGedeckt(BigDecimal summeAuszahlungenGedeckt) {

        this.summeAuszahlungenGedeckt = summeAuszahlungenGedeckt;
        return this;
    }

    /**
     * Die Summe aller Auszahlungen aus dem gedeckten Anteil des Kredits.
     *
     * @return summeAuszahlungenGedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_SUMME_AUSZAHLUNGEN_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getSummeAuszahlungenGedeckt() {
        return summeAuszahlungenGedeckt;
    }


    @JsonProperty(JSON_PROPERTY_SUMME_AUSZAHLUNGEN_GEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSummeAuszahlungenGedeckt(BigDecimal summeAuszahlungenGedeckt) {
        this.summeAuszahlungenGedeckt = summeAuszahlungenGedeckt;
    }

    public TeildeckungsdatenKredit summeAuszahlungenUngedeckt(BigDecimal summeAuszahlungenUngedeckt) {

        this.summeAuszahlungenUngedeckt = summeAuszahlungenUngedeckt;
        return this;
    }

    /**
     * Die Summe aller Auszahlungen aus dem ungedeckten Anteil des Kredits.
     *
     * @return summeAuszahlungenUngedeckt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_SUMME_AUSZAHLUNGEN_UNGEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getSummeAuszahlungenUngedeckt() {
        return summeAuszahlungenUngedeckt;
    }


    @JsonProperty(JSON_PROPERTY_SUMME_AUSZAHLUNGEN_UNGEDECKT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSummeAuszahlungenUngedeckt(BigDecimal summeAuszahlungenUngedeckt) {
        this.summeAuszahlungenUngedeckt = summeAuszahlungenUngedeckt;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TeildeckungsdatenKredit teildeckungsdatenKredit = (TeildeckungsdatenKredit) o;
        return Objects.equals(this.anfaenglicheTilgungGedeckt, teildeckungsdatenKredit.anfaenglicheTilgungGedeckt) &&
                Objects.equals(this.aufteilungsmodus, teildeckungsdatenKredit.aufteilungsmodus) &&
                Objects.equals(this.beleihungswert, teildeckungsdatenKredit.beleihungswert) &&
                Objects.equals(this.deckungssumme, teildeckungsdatenKredit.deckungssumme) &&
                Objects.equals(this.gedeckterAnteilDesBeleihungswerts, teildeckungsdatenKredit.gedeckterAnteilDesBeleihungswerts) &&
                Objects.equals(this.nichtBezahlterZinsbetragGedeckt, teildeckungsdatenKredit.nichtBezahlterZinsbetragGedeckt) &&
                Objects.equals(this.nichtVerrechneteRatenGedeckt, teildeckungsdatenKredit.nichtVerrechneteRatenGedeckt) &&
                Objects.equals(this.nichtBezahlterZinsbetragUngedeckt, teildeckungsdatenKredit.nichtBezahlterZinsbetragUngedeckt) &&
                Objects.equals(this.nichtVerrechneteRatenUngedeckt, teildeckungsdatenKredit.nichtVerrechneteRatenUngedeckt) &&
                Objects.equals(this.rateGedeckt, teildeckungsdatenKredit.rateGedeckt) &&
                Objects.equals(this.tilgungsbeginnGedeckterTeil, teildeckungsdatenKredit.tilgungsbeginnGedeckterTeil) &&
                Objects.equals(this.margedatenGedeckt, teildeckungsdatenKredit.margedatenGedeckt) &&
                Objects.equals(this.margedatenUngedeckt, teildeckungsdatenKredit.margedatenUngedeckt) &&
                Objects.equals(this.summeTilgungenGedeckt, teildeckungsdatenKredit.summeTilgungenGedeckt) &&
                Objects.equals(this.summeTilgungenUngedeckt, teildeckungsdatenKredit.summeTilgungenUngedeckt) &&
                Objects.equals(this.summeZinsenGedeckt, teildeckungsdatenKredit.summeZinsenGedeckt) &&
                Objects.equals(this.summeZinsenUngedeckt, teildeckungsdatenKredit.summeZinsenUngedeckt) &&
                Objects.equals(this.summeAuszahlungenGedeckt, teildeckungsdatenKredit.summeAuszahlungenGedeckt) &&
                Objects.equals(this.summeAuszahlungenUngedeckt, teildeckungsdatenKredit.summeAuszahlungenUngedeckt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(anfaenglicheTilgungGedeckt, aufteilungsmodus, beleihungswert, deckungssumme, gedeckterAnteilDesBeleihungswerts, nichtBezahlterZinsbetragGedeckt, nichtVerrechneteRatenGedeckt, nichtBezahlterZinsbetragUngedeckt, nichtVerrechneteRatenUngedeckt, rateGedeckt, tilgungsbeginnGedeckterTeil, margedatenGedeckt, margedatenUngedeckt, summeTilgungenGedeckt, summeTilgungenUngedeckt, summeZinsenGedeckt, summeZinsenUngedeckt, summeAuszahlungenGedeckt, summeAuszahlungenUngedeckt);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TeildeckungsdatenKredit {\n");
        sb.append("    anfaenglicheTilgungGedeckt: ").append(toIndentedString(anfaenglicheTilgungGedeckt)).append("\n");
        sb.append("    aufteilungsmodus: ").append(toIndentedString(aufteilungsmodus)).append("\n");
        sb.append("    beleihungswert: ").append(toIndentedString(beleihungswert)).append("\n");
        sb.append("    deckungssumme: ").append(toIndentedString(deckungssumme)).append("\n");
        sb.append("    gedeckterAnteilDesBeleihungswerts: ").append(toIndentedString(gedeckterAnteilDesBeleihungswerts)).append("\n");
        sb.append("    nichtBezahlterZinsbetragGedeckt: ").append(toIndentedString(nichtBezahlterZinsbetragGedeckt)).append("\n");
        sb.append("    nichtVerrechneteRatenGedeckt: ").append(toIndentedString(nichtVerrechneteRatenGedeckt)).append("\n");
        sb.append("    nichtBezahlterZinsbetragUngedeckt: ").append(toIndentedString(nichtBezahlterZinsbetragUngedeckt)).append("\n");
        sb.append("    nichtVerrechneteRatenUngedeckt: ").append(toIndentedString(nichtVerrechneteRatenUngedeckt)).append("\n");
        sb.append("    rateGedeckt: ").append(toIndentedString(rateGedeckt)).append("\n");
        sb.append("    tilgungsbeginnGedeckterTeil: ").append(toIndentedString(tilgungsbeginnGedeckterTeil)).append("\n");
        sb.append("    margedatenGedeckt: ").append(toIndentedString(margedatenGedeckt)).append("\n");
        sb.append("    margedatenUngedeckt: ").append(toIndentedString(margedatenUngedeckt)).append("\n");
        sb.append("    summeTilgungenGedeckt: ").append(toIndentedString(summeTilgungenGedeckt)).append("\n");
        sb.append("    summeTilgungenUngedeckt: ").append(toIndentedString(summeTilgungenUngedeckt)).append("\n");
        sb.append("    summeZinsenGedeckt: ").append(toIndentedString(summeZinsenGedeckt)).append("\n");
        sb.append("    summeZinsenUngedeckt: ").append(toIndentedString(summeZinsenUngedeckt)).append("\n");
        sb.append("    summeAuszahlungenGedeckt: ").append(toIndentedString(summeAuszahlungenGedeckt)).append("\n");
        sb.append("    summeAuszahlungenUngedeckt: ").append(toIndentedString(summeAuszahlungenUngedeckt)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

