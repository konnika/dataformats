/*
 * Gesch√§fte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

/**
 * Adresse
 */
@JsonPropertyOrder({
        Adresse.JSON_PROPERTY_STRASSE,
        Adresse.JSON_PROPERTY_PLZ,
        Adresse.JSON_PROPERTY_ORT,
        Adresse.JSON_PROPERTY_LAND
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class Adresse {
    public static final String JSON_PROPERTY_STRASSE = "strasse";
    private String strasse;

    public static final String JSON_PROPERTY_PLZ = "plz";
    private String plz;

    public static final String JSON_PROPERTY_ORT = "ort";
    private String ort;

    public static final String JSON_PROPERTY_LAND = "land";
    private String land;

    public Adresse() {
    }

    public Adresse strasse(String strasse) {

        this.strasse = strasse;
        return this;
    }

    /**
     * Die Strasse der Adresse
     *
     * @return strasse
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_STRASSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getStrasse() {
        return strasse;
    }


    @JsonProperty(JSON_PROPERTY_STRASSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStrasse(String strasse) {
        this.strasse = strasse;
    }

    public Adresse plz(String plz) {

        this.plz = plz;
        return this;
    }

    /**
     * Die PLZ der Adresse
     *
     * @return plz
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_PLZ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getPlz() {
        return plz;
    }


    @JsonProperty(JSON_PROPERTY_PLZ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPlz(String plz) {
        this.plz = plz;
    }

    public Adresse ort(String ort) {

        this.ort = ort;
        return this;
    }

    /**
     * Der Ort der Adressen
     *
     * @return ort
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_ORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getOrt() {
        return ort;
    }


    @JsonProperty(JSON_PROPERTY_ORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOrt(String ort) {
        this.ort = ort;
    }

    public Adresse land(String land) {

        this.land = land;
        return this;
    }

    /**
     * Das Land der Adresse
     *
     * @return land
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_LAND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getLand() {
        return land;
    }


    @JsonProperty(JSON_PROPERTY_LAND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLand(String land) {
        this.land = land;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Adresse adresse = (Adresse) o;
        return Objects.equals(this.strasse, adresse.strasse) &&
                Objects.equals(this.plz, adresse.plz) &&
                Objects.equals(this.ort, adresse.ort) &&
                Objects.equals(this.land, adresse.land);
    }

    @Override
    public int hashCode() {
        return Objects.hash(strasse, plz, ort, land);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Adresse {\n");
        sb.append("    strasse: ").append(toIndentedString(strasse)).append("\n");
        sb.append("    plz: ").append(toIndentedString(plz)).append("\n");
        sb.append("    ort: ").append(toIndentedString(ort)).append("\n");
        sb.append("    land: ").append(toIndentedString(land)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

