/*
 * Geschäfte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.util.Objects;

/**
 * Parameter, welche die Ausgestaltung des Kredits genauer beschreiben.
 */
@JsonPropertyOrder({
        KontofuehrungRollover.JSON_PROPERTY_AUSZAHLUNGSTAG_VERZINST,
        KontofuehrungRollover.JSON_PROPERTY_RATENANGABE,
        KontofuehrungRollover.JSON_PROPERTY_RUECKZAHLUNGSTAG_VERZINST,
        KontofuehrungRollover.JSON_PROPERTY_RUNDUNG_BETRAEGE,
        KontofuehrungRollover.JSON_PROPERTY_TILGUNGSANRECHNUNG,
        KontofuehrungRollover.JSON_PROPERTY_VERSCHIEBUNG,
        KontofuehrungRollover.JSON_PROPERTY_VERZINSUNGSVARIANTE,
        KontofuehrungRollover.JSON_PROPERTY_ZINSUSANCE_NOMINAL,
        KontofuehrungRollover.JSON_PROPERTY_ZINSVERRECHNUNG
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class KontofuehrungRollover {
    public static final String JSON_PROPERTY_AUSZAHLUNGSTAG_VERZINST = "auszahlungstagVerzinst";
    private Boolean auszahlungstagVerzinst;

    public static final String JSON_PROPERTY_RATENANGABE = "ratenangabe";
    private Ratenangabe ratenangabe;

    public static final String JSON_PROPERTY_RUECKZAHLUNGSTAG_VERZINST = "rueckzahlungstagVerzinst";
    private Boolean rueckzahlungstagVerzinst;

    public static final String JSON_PROPERTY_RUNDUNG_BETRAEGE = "rundungBetraege";
    private RundungsGenauigkeit rundungBetraege;

    public static final String JSON_PROPERTY_TILGUNGSANRECHNUNG = "tilgungsanrechnung";
    private Tilgungsanrechnung tilgungsanrechnung;

    public static final String JSON_PROPERTY_VERSCHIEBUNG = "verschiebung";
    private Feiertagsverschiebung verschiebung;

    public static final String JSON_PROPERTY_VERZINSUNGSVARIANTE = "verzinsungsvariante";
    private Verzinsungsvariante verzinsungsvariante;

    public static final String JSON_PROPERTY_ZINSUSANCE_NOMINAL = "zinsusanceNominal";
    private Usance zinsusanceNominal;

    public static final String JSON_PROPERTY_ZINSVERRECHNUNG = "zinsverrechnung";
    private Zinsverrechnung zinsverrechnung;

    public KontofuehrungRollover() {
    }

    public KontofuehrungRollover auszahlungstagVerzinst(Boolean auszahlungstagVerzinst) {

        this.auszahlungstagVerzinst = auszahlungstagVerzinst;
        return this;
    }

    /**
     * Gibt an, ob der Tag der Auszahlung mitverzinst werden soll.
     *
     * @return auszahlungstagVerzinst
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_AUSZAHLUNGSTAG_VERZINST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAuszahlungstagVerzinst() {
        return auszahlungstagVerzinst;
    }


    @JsonProperty(JSON_PROPERTY_AUSZAHLUNGSTAG_VERZINST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAuszahlungstagVerzinst(Boolean auszahlungstagVerzinst) {
        this.auszahlungstagVerzinst = auszahlungstagVerzinst;
    }

    public KontofuehrungRollover ratenangabe(Ratenangabe ratenangabe) {

        this.ratenangabe = ratenangabe;
        return this;
    }

    /**
     * Get ratenangabe
     *
     * @return ratenangabe
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_RATENANGABE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Ratenangabe getRatenangabe() {
        return ratenangabe;
    }


    @JsonProperty(JSON_PROPERTY_RATENANGABE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRatenangabe(Ratenangabe ratenangabe) {
        this.ratenangabe = ratenangabe;
    }

    public KontofuehrungRollover rueckzahlungstagVerzinst(Boolean rueckzahlungstagVerzinst) {

        this.rueckzahlungstagVerzinst = rueckzahlungstagVerzinst;
        return this;
    }

    /**
     * Gibt an, ob der letzte Tag der Darlehenslaufzeit (Liquiditätsbindungsende) mitverzinst werden soll.
     *
     * @return rueckzahlungstagVerzinst
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_RUECKZAHLUNGSTAG_VERZINST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getRueckzahlungstagVerzinst() {
        return rueckzahlungstagVerzinst;
    }


    @JsonProperty(JSON_PROPERTY_RUECKZAHLUNGSTAG_VERZINST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRueckzahlungstagVerzinst(Boolean rueckzahlungstagVerzinst) {
        this.rueckzahlungstagVerzinst = rueckzahlungstagVerzinst;
    }

    public KontofuehrungRollover rundungBetraege(RundungsGenauigkeit rundungBetraege) {

        this.rundungBetraege = rundungBetraege;
        return this;
    }

    /**
     * Get rundungBetraege
     *
     * @return rundungBetraege
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_RUNDUNG_BETRAEGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public RundungsGenauigkeit getRundungBetraege() {
        return rundungBetraege;
    }


    @JsonProperty(JSON_PROPERTY_RUNDUNG_BETRAEGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRundungBetraege(RundungsGenauigkeit rundungBetraege) {
        this.rundungBetraege = rundungBetraege;
    }

    public KontofuehrungRollover tilgungsanrechnung(Tilgungsanrechnung tilgungsanrechnung) {

        this.tilgungsanrechnung = tilgungsanrechnung;
        return this;
    }

    /**
     * Get tilgungsanrechnung
     *
     * @return tilgungsanrechnung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_TILGUNGSANRECHNUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Tilgungsanrechnung getTilgungsanrechnung() {
        return tilgungsanrechnung;
    }


    @JsonProperty(JSON_PROPERTY_TILGUNGSANRECHNUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTilgungsanrechnung(Tilgungsanrechnung tilgungsanrechnung) {
        this.tilgungsanrechnung = tilgungsanrechnung;
    }

    public KontofuehrungRollover verschiebung(Feiertagsverschiebung verschiebung) {

        this.verschiebung = verschiebung;
        return this;
    }

    /**
     * Get verschiebung
     *
     * @return verschiebung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_VERSCHIEBUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Feiertagsverschiebung getVerschiebung() {
        return verschiebung;
    }


    @JsonProperty(JSON_PROPERTY_VERSCHIEBUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVerschiebung(Feiertagsverschiebung verschiebung) {
        this.verschiebung = verschiebung;
    }

    public KontofuehrungRollover verzinsungsvariante(Verzinsungsvariante verzinsungsvariante) {

        this.verzinsungsvariante = verzinsungsvariante;
        return this;
    }

    /**
     * Get verzinsungsvariante
     *
     * @return verzinsungsvariante
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_VERZINSUNGSVARIANTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Verzinsungsvariante getVerzinsungsvariante() {
        return verzinsungsvariante;
    }


    @JsonProperty(JSON_PROPERTY_VERZINSUNGSVARIANTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVerzinsungsvariante(Verzinsungsvariante verzinsungsvariante) {
        this.verzinsungsvariante = verzinsungsvariante;
    }

    public KontofuehrungRollover zinsusanceNominal(Usance zinsusanceNominal) {

        this.zinsusanceNominal = zinsusanceNominal;
        return this;
    }

    /**
     * Get zinsusanceNominal
     *
     * @return zinsusanceNominal
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ZINSUSANCE_NOMINAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Usance getZinsusanceNominal() {
        return zinsusanceNominal;
    }


    @JsonProperty(JSON_PROPERTY_ZINSUSANCE_NOMINAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setZinsusanceNominal(Usance zinsusanceNominal) {
        this.zinsusanceNominal = zinsusanceNominal;
    }

    public KontofuehrungRollover zinsverrechnung(Zinsverrechnung zinsverrechnung) {

        this.zinsverrechnung = zinsverrechnung;
        return this;
    }

    /**
     * Get zinsverrechnung
     *
     * @return zinsverrechnung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ZINSVERRECHNUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Zinsverrechnung getZinsverrechnung() {
        return zinsverrechnung;
    }


    @JsonProperty(JSON_PROPERTY_ZINSVERRECHNUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setZinsverrechnung(Zinsverrechnung zinsverrechnung) {
        this.zinsverrechnung = zinsverrechnung;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        KontofuehrungRollover kontofuehrungRollover = (KontofuehrungRollover) o;
        return Objects.equals(this.auszahlungstagVerzinst, kontofuehrungRollover.auszahlungstagVerzinst) &&
                Objects.equals(this.ratenangabe, kontofuehrungRollover.ratenangabe) &&
                Objects.equals(this.rueckzahlungstagVerzinst, kontofuehrungRollover.rueckzahlungstagVerzinst) &&
                Objects.equals(this.rundungBetraege, kontofuehrungRollover.rundungBetraege) &&
                Objects.equals(this.tilgungsanrechnung, kontofuehrungRollover.tilgungsanrechnung) &&
                Objects.equals(this.verschiebung, kontofuehrungRollover.verschiebung) &&
                Objects.equals(this.verzinsungsvariante, kontofuehrungRollover.verzinsungsvariante) &&
                Objects.equals(this.zinsusanceNominal, kontofuehrungRollover.zinsusanceNominal) &&
                Objects.equals(this.zinsverrechnung, kontofuehrungRollover.zinsverrechnung);
    }

    @Override
    public int hashCode() {
        return Objects.hash(auszahlungstagVerzinst, ratenangabe, rueckzahlungstagVerzinst, rundungBetraege, tilgungsanrechnung, verschiebung, verzinsungsvariante, zinsusanceNominal, zinsverrechnung);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KontofuehrungRollover {\n");
        sb.append("    auszahlungstagVerzinst: ").append(toIndentedString(auszahlungstagVerzinst)).append("\n");
        sb.append("    ratenangabe: ").append(toIndentedString(ratenangabe)).append("\n");
        sb.append("    rueckzahlungstagVerzinst: ").append(toIndentedString(rueckzahlungstagVerzinst)).append("\n");
        sb.append("    rundungBetraege: ").append(toIndentedString(rundungBetraege)).append("\n");
        sb.append("    tilgungsanrechnung: ").append(toIndentedString(tilgungsanrechnung)).append("\n");
        sb.append("    verschiebung: ").append(toIndentedString(verschiebung)).append("\n");
        sb.append("    verzinsungsvariante: ").append(toIndentedString(verzinsungsvariante)).append("\n");
        sb.append("    zinsusanceNominal: ").append(toIndentedString(zinsusanceNominal)).append("\n");
        sb.append("    zinsverrechnung: ").append(toIndentedString(zinsverrechnung)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

