/*
 * Gesch√§fte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Die Art des Ereignisses im Tilgungsplan, wie bspw. eine Tilgungsanrechnung oder eine Zinszahlung.
 */
public enum TilgungsplanArt {

    RATE("RATE"),

    AUSZAHLUNG("AUSZAHLUNG"),

    DISAGIO("DISAGIO"),

    SONDERTILGUNG("SONDERTILGUNG"),

    GEBUEHR_GEZAHLT("GEBUEHR_GEZAHLT"),

    GEBUEHR_VERRECHNET("GEBUEHR_VERRECHNET"),

    ZINSZAHLUNG("ZINSZAHLUNG"),

    TILGUNG("TILGUNG"),

    ZINSTERMIN("ZINSTERMIN"),

    TILGUNGSANRECHNUNG("TILGUNGSANRECHNUNG"),

    ZINSWECHSEL("ZINSWECHSEL"),

    BEREITSTELLUNGSZINSZAHLUNG("BEREITSTELLUNGSZINSZAHLUNG"),

    ZWISCHENSTAND("ZWISCHENSTAND"),

    ABSCHLUSS("ABSCHLUSS"),

    BONUS_GEZAHLT("BONUS_GEZAHLT"),

    BONUS_VERRECHNET("BONUS_VERRECHNET"),

    TILGUNGSSATZWECHSEL("TILGUNGSSATZWECHSEL"),

    STEUER("STEUER"),

    RESTSCHULD("RESTSCHULD"),

    EINKOMMENSTEUER("EINKOMMENSTEUER"),

    KONTOFUEHRUNGSGEBUEHREN("KONTOFUEHRUNGSGEBUEHREN"),

    GEBUEHR_LAUFEND("GEBUEHR_LAUFEND"),

    GEBUEHRENERSTATTUNG("GEBUEHRENERSTATTUNG"),

    STUECKZINS("STUECKZINS"),

    ZULAGE("ZULAGE"),

    CAPPRAEMIE("CAPPRAEMIE"),

    RISIKOABSICHERUNG("RISIKOABSICHERUNG"),

    BEARBEITUNGSGEBUEHR("BEARBEITUNGSGEBUEHR"),

    BEREITSTELLUNGSZINS_AB("BEREITSTELLUNGSZINS_AB"),

    EINMALGEBUEHR("EINMALGEBUEHR"),

    GEBUEHR_KREDITUNABHAENGIG_GEZAHLT("GEBUEHR_KREDITUNABHAENGIG_GEZAHLT"),

    GEBUEHR_KREDITUNABHAENGIG_VERRECHNET("GEBUEHR_KREDITUNABHAENGIG_VERRECHNET"),

    NOTARKOSTEN_GEZAHLT("NOTARKOSTEN_GEZAHLT"),

    NOTARKOSTEN_VERRECHNET("NOTARKOSTEN_VERRECHNET"),

    GEBUEHR_SONSTIGE_GEZAHLT("GEBUEHR_SONSTIGE_GEZAHLT"),

    GEBUEHR_SONSTIGE_VERRECHNET("GEBUEHR_SONSTIGE_VERRECHNET"),

    VERSICHERUNGSKOSTEN_GEZAHLT("VERSICHERUNGSKOSTEN_GEZAHLT"),

    VERSICHERUNGSKOSTEN_VERRECHNET("VERSICHERUNGSKOSTEN_VERRECHNET"),

    GEBUEHR_DARLEHENSPREIS("GEBUEHR_DARLEHENSPREIS"),

    BEARBEITUNGSGEBUEHR_GEZAHLT("BEARBEITUNGSGEBUEHR_GEZAHLT"),

    ZWISCHENSTAND_TAGESAGGREGIERT("ZWISCHENSTAND_TAGESAGGREGIERT"),

    ANNUITAETENZINSWECHSEL("ANNUITAETENZINSWECHSEL"),

    PANGV_FREMDGEBUEHR("PANGV_FREMDGEBUEHR"),

    TILGUNGSRATE("TILGUNGSRATE"),

    GEBUEHR_EXTERN("GEBUEHR_EXTERN"),

    AUFSCHLAGSZAHLUNG("AUFSCHLAGSZAHLUNG"),

    LETZTER_KONTOABSCHLUSS_BEI_GESCHAEFTSAENDERUNG_NACH_KONTOSTAND("LETZTER_KONTOABSCHLUSS_BEI_GESCHAEFTSAENDERUNG_NACH_KONTOSTAND"),

    ZINSANPASSUNG("ZINSANPASSUNG"),

    RATENWECHSEL("RATENWECHSEL");

    private String value;

    TilgungsplanArt(String value) {
        this.value = value;
    }

    @JsonValue
    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    @JsonCreator
    public static TilgungsplanArt fromValue(String value) {
        for (TilgungsplanArt b : TilgungsplanArt.values()) {
            if (b.value.equals(value)) {
                return b;
            }
        }
        throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
}

