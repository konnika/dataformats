/*
 * Gesch√§fte
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.msg4banking.processservice.application.model.transaction;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Objects;

/**
 * Geschaeftsaenderungsdaten
 */
@JsonPropertyOrder({
        Geschaeftsaenderungsdaten.JSON_PROPERTY_TYP,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_ERSTATTUNGSART_KULANZ_UND_MARGENSCHADEN,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_ERSTATTUNGSART_RISIKOKOSTEN,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_BRUTTOSCHADEN,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_BRUTTOSCHADEN_VOR_VERRECHNUNG,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_DATUM_GESCHAEFTSAENDERUNG,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_DATUM_ZU_ZAHLENDER_BETRAG,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_DATUM_FRUEHESTE_KUENDIGUNG,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_ERSTATTUNG_ENTFALLENDES_RISIKO,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_ERSTATTUNG_KULANZ,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_ERSTATTUNG_VERWALTUNGSKOSTEN,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_HOEHE_TEILABLOESUNG,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_HOEHE_TEILNICHTABNAHME,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_KAPITALMARKTSCHADEN,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_INSTITUTSAUFWAND,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_KULANZ,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_NOMINALE_MARGE_DES_ALTGESCHAEFTS,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_MARGENSCHADEN,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_NETTOSCHADEN,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_NETTOSCHADEN_GEKAPPT,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_AUSSTEHENDE_RATE,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_RATENHOEHE_NACH_GESCHAEFTSAENDERUNG,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_AUSSTEHENDE_RATE_AUSWEISEN,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_RISIKOKOSTEN,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_LAUFENDE_VERWALTUNGSKOSTEN_RHYTHMUS,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_VERWALTUNGSKOSTEN_ABZINSEN,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_VERWALTUNGSKOSTEN_AM_ENDE,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_LAUFENDE_VERWALTUNGSKOSTEN,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_VORFAELLIGER_BETRAG,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_KUMULIERTER_ZINS,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_ZU_ZAHLENDER_BETRAG,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_KUNDENNUTZEN_ERSTATTEN,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_NETTOSCHADEN_BEGRENZT_NACH_B_G_B502,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_BEGRENZUNG_NACH_B_G_B502,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_DISAGIOERSTATTUNG,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_DISAGIOERSTATTUNG_ZUK_SOTILGRECHTE,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_VERRECHNETE_DISAGIOERSTATTUNG,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_NICHT_VERBRAUCHTES_DISAGIO,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_SONDERTILGUNGSRECHTE,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_TILGUNGSSATZ_ODER_RATENWECHSELRECHTE,
        Geschaeftsaenderungsdaten.JSON_PROPERTY_WIEDERANLAGESATZ
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-13T14:12:50.387795700+02:00[Europe/Berlin]", comments = "Generator version: 7.7.0")
public class Geschaeftsaenderungsdaten {
    public static final String JSON_PROPERTY_TYP = "typ";
    private GeschaeftsaenderungTyp typ;

    public static final String JSON_PROPERTY_ERSTATTUNGSART_KULANZ_UND_MARGENSCHADEN = "erstattungsartKulanzUndMargenschaden";
    private Erstattungsart erstattungsartKulanzUndMargenschaden;

    public static final String JSON_PROPERTY_ERSTATTUNGSART_RISIKOKOSTEN = "erstattungsartRisikokosten";
    private Erstattungsart erstattungsartRisikokosten;

    public static final String JSON_PROPERTY_BRUTTOSCHADEN = "bruttoschaden";
    private BigDecimal bruttoschaden;

    public static final String JSON_PROPERTY_BRUTTOSCHADEN_VOR_VERRECHNUNG = "bruttoschadenVorVerrechnung";
    private BigDecimal bruttoschadenVorVerrechnung;

    public static final String JSON_PROPERTY_DATUM_GESCHAEFTSAENDERUNG = "datumGeschaeftsaenderung";
    private LocalDate datumGeschaeftsaenderung;

    public static final String JSON_PROPERTY_DATUM_ZU_ZAHLENDER_BETRAG = "datumZuZahlenderBetrag";
    private LocalDate datumZuZahlenderBetrag;

    public static final String JSON_PROPERTY_DATUM_FRUEHESTE_KUENDIGUNG = "datumFruehesteKuendigung";
    private LocalDate datumFruehesteKuendigung;

    public static final String JSON_PROPERTY_ERSTATTUNG_ENTFALLENDES_RISIKO = "erstattungEntfallendesRisiko";
    private BigDecimal erstattungEntfallendesRisiko;

    public static final String JSON_PROPERTY_ERSTATTUNG_KULANZ = "erstattungKulanz";
    private BigDecimal erstattungKulanz;

    public static final String JSON_PROPERTY_ERSTATTUNG_VERWALTUNGSKOSTEN = "erstattungVerwaltungskosten";
    private BigDecimal erstattungVerwaltungskosten;

    public static final String JSON_PROPERTY_HOEHE_TEILABLOESUNG = "hoeheTeilabloesung";
    private BigDecimal hoeheTeilabloesung;

    public static final String JSON_PROPERTY_HOEHE_TEILNICHTABNAHME = "hoeheTeilnichtabnahme";
    private BigDecimal hoeheTeilnichtabnahme;

    public static final String JSON_PROPERTY_KAPITALMARKTSCHADEN = "kapitalmarktschaden";
    private BigDecimal kapitalmarktschaden;

    public static final String JSON_PROPERTY_INSTITUTSAUFWAND = "institutsaufwand";
    private BigDecimal institutsaufwand;

    public static final String JSON_PROPERTY_KULANZ = "kulanz";
    private BigDecimal kulanz;

    public static final String JSON_PROPERTY_NOMINALE_MARGE_DES_ALTGESCHAEFTS = "nominaleMargeDesAltgeschaefts";
    private BigDecimal nominaleMargeDesAltgeschaefts;

    public static final String JSON_PROPERTY_MARGENSCHADEN = "margenschaden";
    private BigDecimal margenschaden;

    public static final String JSON_PROPERTY_NETTOSCHADEN = "nettoschaden";
    private BigDecimal nettoschaden;

    public static final String JSON_PROPERTY_NETTOSCHADEN_GEKAPPT = "nettoschadenGekappt";
    private BigDecimal nettoschadenGekappt;

    public static final String JSON_PROPERTY_AUSSTEHENDE_RATE = "ausstehendeRate";
    private BigDecimal ausstehendeRate;

    public static final String JSON_PROPERTY_RATENHOEHE_NACH_GESCHAEFTSAENDERUNG = "ratenhoeheNachGeschaeftsaenderung";
    private BigDecimal ratenhoeheNachGeschaeftsaenderung;

    public static final String JSON_PROPERTY_AUSSTEHENDE_RATE_AUSWEISEN = "ausstehendeRateAusweisen";
    private Boolean ausstehendeRateAusweisen;

    public static final String JSON_PROPERTY_RISIKOKOSTEN = "risikokosten";
    private BigDecimal risikokosten;

    public static final String JSON_PROPERTY_LAUFENDE_VERWALTUNGSKOSTEN_RHYTHMUS = "laufendeVerwaltungskostenRhythmus";
    private LaufendeVerwaltungskostenRhythmus laufendeVerwaltungskostenRhythmus;

    public static final String JSON_PROPERTY_VERWALTUNGSKOSTEN_ABZINSEN = "verwaltungskostenAbzinsen";
    private Boolean verwaltungskostenAbzinsen;

    public static final String JSON_PROPERTY_VERWALTUNGSKOSTEN_AM_ENDE = "verwaltungskostenAmEnde";
    private BigDecimal verwaltungskostenAmEnde;

    public static final String JSON_PROPERTY_LAUFENDE_VERWALTUNGSKOSTEN = "laufendeVerwaltungskosten";
    private BigDecimal laufendeVerwaltungskosten;

    public static final String JSON_PROPERTY_VORFAELLIGER_BETRAG = "vorfaelligerBetrag";
    private BigDecimal vorfaelligerBetrag;

    public static final String JSON_PROPERTY_KUMULIERTER_ZINS = "kumulierterZins";
    private BigDecimal kumulierterZins;

    public static final String JSON_PROPERTY_ZU_ZAHLENDER_BETRAG = "zuZahlenderBetrag";
    private BigDecimal zuZahlenderBetrag;

    public static final String JSON_PROPERTY_KUNDENNUTZEN_ERSTATTEN = "kundennutzenErstatten";
    private Boolean kundennutzenErstatten;

    public static final String JSON_PROPERTY_NETTOSCHADEN_BEGRENZT_NACH_B_G_B502 = "nettoschadenBegrenztNachBGB502";
    private BigDecimal nettoschadenBegrenztNachBGB502;

    public static final String JSON_PROPERTY_BEGRENZUNG_NACH_B_G_B502 = "begrenzungNachBGB502";
    private BasisDeckelungVFE begrenzungNachBGB502;

    public static final String JSON_PROPERTY_DISAGIOERSTATTUNG = "disagioerstattung";
    private Disagioerstattung disagioerstattung;

    public static final String JSON_PROPERTY_DISAGIOERSTATTUNG_ZUK_SOTILGRECHTE = "disagioerstattungZukSotilgrechte";
    private BigDecimal disagioerstattungZukSotilgrechte;

    public static final String JSON_PROPERTY_VERRECHNETE_DISAGIOERSTATTUNG = "verrechneteDisagioerstattung";
    private BigDecimal verrechneteDisagioerstattung;

    public static final String JSON_PROPERTY_NICHT_VERBRAUCHTES_DISAGIO = "nichtVerbrauchtesDisagio";
    private BigDecimal nichtVerbrauchtesDisagio;

    public static final String JSON_PROPERTY_SONDERTILGUNGSRECHTE = "sondertilgungsrechte";
    private Sondertilgungsrechte sondertilgungsrechte;

    public static final String JSON_PROPERTY_TILGUNGSSATZ_ODER_RATENWECHSELRECHTE = "tilgungssatzOderRatenwechselrechte";
    private TilgungssatzOderRatenwechselrechte tilgungssatzOderRatenwechselrechte;

    public static final String JSON_PROPERTY_WIEDERANLAGESATZ = "wiederanlagesatz";
    private BigDecimal wiederanlagesatz;

    public Geschaeftsaenderungsdaten() {
    }

    public Geschaeftsaenderungsdaten typ(GeschaeftsaenderungTyp typ) {

        this.typ = typ;
        return this;
    }

    /**
     * Get typ
     *
     * @return typ
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_TYP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public GeschaeftsaenderungTyp getTyp() {
        return typ;
    }


    @JsonProperty(JSON_PROPERTY_TYP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTyp(GeschaeftsaenderungTyp typ) {
        this.typ = typ;
    }

    public Geschaeftsaenderungsdaten erstattungsartKulanzUndMargenschaden(Erstattungsart erstattungsartKulanzUndMargenschaden) {

        this.erstattungsartKulanzUndMargenschaden = erstattungsartKulanzUndMargenschaden;
        return this;
    }

    /**
     * Get erstattungsartKulanzUndMargenschaden
     *
     * @return erstattungsartKulanzUndMargenschaden
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ERSTATTUNGSART_KULANZ_UND_MARGENSCHADEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Erstattungsart getErstattungsartKulanzUndMargenschaden() {
        return erstattungsartKulanzUndMargenschaden;
    }


    @JsonProperty(JSON_PROPERTY_ERSTATTUNGSART_KULANZ_UND_MARGENSCHADEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setErstattungsartKulanzUndMargenschaden(Erstattungsart erstattungsartKulanzUndMargenschaden) {
        this.erstattungsartKulanzUndMargenschaden = erstattungsartKulanzUndMargenschaden;
    }

    public Geschaeftsaenderungsdaten erstattungsartRisikokosten(Erstattungsart erstattungsartRisikokosten) {

        this.erstattungsartRisikokosten = erstattungsartRisikokosten;
        return this;
    }

    /**
     * Get erstattungsartRisikokosten
     *
     * @return erstattungsartRisikokosten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ERSTATTUNGSART_RISIKOKOSTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Erstattungsart getErstattungsartRisikokosten() {
        return erstattungsartRisikokosten;
    }


    @JsonProperty(JSON_PROPERTY_ERSTATTUNGSART_RISIKOKOSTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setErstattungsartRisikokosten(Erstattungsart erstattungsartRisikokosten) {
        this.erstattungsartRisikokosten = erstattungsartRisikokosten;
    }

    public Geschaeftsaenderungsdaten bruttoschaden(BigDecimal bruttoschaden) {

        this.bruttoschaden = bruttoschaden;
        return this;
    }

    /**
     * Der Bruttoschaden zzgl. dem unverbrauchten Disagio zum Zeitpunkt der Gesch√§fts√§nderung.
     *
     * @return bruttoschaden
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_BRUTTOSCHADEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getBruttoschaden() {
        return bruttoschaden;
    }


    @JsonProperty(JSON_PROPERTY_BRUTTOSCHADEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBruttoschaden(BigDecimal bruttoschaden) {
        this.bruttoschaden = bruttoschaden;
    }

    public Geschaeftsaenderungsdaten bruttoschadenVorVerrechnung(BigDecimal bruttoschadenVorVerrechnung) {

        this.bruttoschadenVorVerrechnung = bruttoschadenVorVerrechnung;
        return this;
    }

    /**
     * Der dem Kreditgeber durch die Gesch√§fts√§nderung entstehende Bruttoschaden.
     *
     * @return bruttoschadenVorVerrechnung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_BRUTTOSCHADEN_VOR_VERRECHNUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getBruttoschadenVorVerrechnung() {
        return bruttoschadenVorVerrechnung;
    }


    @JsonProperty(JSON_PROPERTY_BRUTTOSCHADEN_VOR_VERRECHNUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBruttoschadenVorVerrechnung(BigDecimal bruttoschadenVorVerrechnung) {
        this.bruttoschadenVorVerrechnung = bruttoschadenVorVerrechnung;
    }

    public Geschaeftsaenderungsdaten datumGeschaeftsaenderung(LocalDate datumGeschaeftsaenderung) {

        this.datumGeschaeftsaenderung = datumGeschaeftsaenderung;
        return this;
    }

    /**
     * Das Datum an dem die Gesch√§fts√§nderung berechnet werden soll.
     *
     * @return datumGeschaeftsaenderung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_DATUM_GESCHAEFTSAENDERUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getDatumGeschaeftsaenderung() {
        return datumGeschaeftsaenderung;
    }


    @JsonProperty(JSON_PROPERTY_DATUM_GESCHAEFTSAENDERUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDatumGeschaeftsaenderung(LocalDate datumGeschaeftsaenderung) {
        this.datumGeschaeftsaenderung = datumGeschaeftsaenderung;
    }

    public Geschaeftsaenderungsdaten datumZuZahlenderBetrag(LocalDate datumZuZahlenderBetrag) {

        this.datumZuZahlenderBetrag = datumZuZahlenderBetrag;
        return this;
    }

    /**
     * Das Datum an dem der Gesamtbetrag f√ºr die Gesch√§fts√§nderung zu zahlen ist.
     *
     * @return datumZuZahlenderBetrag
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_DATUM_ZU_ZAHLENDER_BETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getDatumZuZahlenderBetrag() {
        return datumZuZahlenderBetrag;
    }


    @JsonProperty(JSON_PROPERTY_DATUM_ZU_ZAHLENDER_BETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDatumZuZahlenderBetrag(LocalDate datumZuZahlenderBetrag) {
        this.datumZuZahlenderBetrag = datumZuZahlenderBetrag;
    }

    public Geschaeftsaenderungsdaten datumFruehesteKuendigung(LocalDate datumFruehesteKuendigung) {

        this.datumFruehesteKuendigung = datumFruehesteKuendigung;
        return this;
    }

    /**
     * Datum der fr√ºhestm√∂glichen K√ºndigung.
     *
     * @return datumFruehesteKuendigung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_DATUM_FRUEHESTE_KUENDIGUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getDatumFruehesteKuendigung() {
        return datumFruehesteKuendigung;
    }


    @JsonProperty(JSON_PROPERTY_DATUM_FRUEHESTE_KUENDIGUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDatumFruehesteKuendigung(LocalDate datumFruehesteKuendigung) {
        this.datumFruehesteKuendigung = datumFruehesteKuendigung;
    }

    public Geschaeftsaenderungsdaten erstattungEntfallendesRisiko(BigDecimal erstattungEntfallendesRisiko) {

        this.erstattungEntfallendesRisiko = erstattungEntfallendesRisiko;
        return this;
    }

    /**
     * Der Erstattungsbetrag der entfallenden Risikokosten.
     *
     * @return erstattungEntfallendesRisiko
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ERSTATTUNG_ENTFALLENDES_RISIKO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getErstattungEntfallendesRisiko() {
        return erstattungEntfallendesRisiko;
    }


    @JsonProperty(JSON_PROPERTY_ERSTATTUNG_ENTFALLENDES_RISIKO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setErstattungEntfallendesRisiko(BigDecimal erstattungEntfallendesRisiko) {
        this.erstattungEntfallendesRisiko = erstattungEntfallendesRisiko;
    }

    public Geschaeftsaenderungsdaten erstattungKulanz(BigDecimal erstattungKulanz) {

        this.erstattungKulanz = erstattungKulanz;
        return this;
    }

    /**
     * Der Erstattungsbetrag aus Kulanz.
     *
     * @return erstattungKulanz
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ERSTATTUNG_KULANZ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getErstattungKulanz() {
        return erstattungKulanz;
    }


    @JsonProperty(JSON_PROPERTY_ERSTATTUNG_KULANZ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setErstattungKulanz(BigDecimal erstattungKulanz) {
        this.erstattungKulanz = erstattungKulanz;
    }

    public Geschaeftsaenderungsdaten erstattungVerwaltungskosten(BigDecimal erstattungVerwaltungskosten) {

        this.erstattungVerwaltungskosten = erstattungVerwaltungskosten;
        return this;
    }

    /**
     * Der Erstattungsbetrag der ersparten Verwaltungskosten.
     *
     * @return erstattungVerwaltungskosten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ERSTATTUNG_VERWALTUNGSKOSTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getErstattungVerwaltungskosten() {
        return erstattungVerwaltungskosten;
    }


    @JsonProperty(JSON_PROPERTY_ERSTATTUNG_VERWALTUNGSKOSTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setErstattungVerwaltungskosten(BigDecimal erstattungVerwaltungskosten) {
        this.erstattungVerwaltungskosten = erstattungVerwaltungskosten;
    }

    public Geschaeftsaenderungsdaten hoeheTeilabloesung(BigDecimal hoeheTeilabloesung) {

        this.hoeheTeilabloesung = hoeheTeilabloesung;
        return this;
    }

    /**
     * Die H√∂he der Sondertilgung bei Teilabl√∂sung.
     *
     * @return hoeheTeilabloesung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_HOEHE_TEILABLOESUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getHoeheTeilabloesung() {
        return hoeheTeilabloesung;
    }


    @JsonProperty(JSON_PROPERTY_HOEHE_TEILABLOESUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHoeheTeilabloesung(BigDecimal hoeheTeilabloesung) {
        this.hoeheTeilabloesung = hoeheTeilabloesung;
    }

    public Geschaeftsaenderungsdaten hoeheTeilnichtabnahme(BigDecimal hoeheTeilnichtabnahme) {

        this.hoeheTeilnichtabnahme = hoeheTeilnichtabnahme;
        return this;
    }

    /**
     * Die H√∂he der Teilnichtabnahme.
     *
     * @return hoeheTeilnichtabnahme
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_HOEHE_TEILNICHTABNAHME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getHoeheTeilnichtabnahme() {
        return hoeheTeilnichtabnahme;
    }


    @JsonProperty(JSON_PROPERTY_HOEHE_TEILNICHTABNAHME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHoeheTeilnichtabnahme(BigDecimal hoeheTeilnichtabnahme) {
        this.hoeheTeilnichtabnahme = hoeheTeilnichtabnahme;
    }

    public Geschaeftsaenderungsdaten kapitalmarktschaden(BigDecimal kapitalmarktschaden) {

        this.kapitalmarktschaden = kapitalmarktschaden;
        return this;
    }

    /**
     * Der dem Kreditgeber durch die Gesch√§fts√§nderung entstehende Kapitalmarktschaden.
     *
     * @return kapitalmarktschaden
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_KAPITALMARKTSCHADEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getKapitalmarktschaden() {
        return kapitalmarktschaden;
    }


    @JsonProperty(JSON_PROPERTY_KAPITALMARKTSCHADEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKapitalmarktschaden(BigDecimal kapitalmarktschaden) {
        this.kapitalmarktschaden = kapitalmarktschaden;
    }

    public Geschaeftsaenderungsdaten institutsaufwand(BigDecimal institutsaufwand) {

        this.institutsaufwand = institutsaufwand;
        return this;
    }

    /**
     * Beziffert den finanziellen Aufwand, der f√ºr die Kalkulation der Gesch√§fts√§nderung anf√§llt.
     *
     * @return institutsaufwand
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_INSTITUTSAUFWAND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getInstitutsaufwand() {
        return institutsaufwand;
    }


    @JsonProperty(JSON_PROPERTY_INSTITUTSAUFWAND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInstitutsaufwand(BigDecimal institutsaufwand) {
        this.institutsaufwand = institutsaufwand;
    }

    public Geschaeftsaenderungsdaten kulanz(BigDecimal kulanz) {

        this.kulanz = kulanz;
        return this;
    }

    /**
     * Gibt den Schaden oder Schadensanteil an, der vom Kreditgeber √ºbernommen werden soll.Die Kulanz ist eine prozentuale Gr√∂√üe und wird mit der vorgegebenen Erstattungsmethode abgegrenzt.
     *
     * @return kulanz
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_KULANZ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getKulanz() {
        return kulanz;
    }


    @JsonProperty(JSON_PROPERTY_KULANZ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKulanz(BigDecimal kulanz) {
        this.kulanz = kulanz;
    }

    public Geschaeftsaenderungsdaten nominaleMargeDesAltgeschaefts(BigDecimal nominaleMargeDesAltgeschaefts) {

        this.nominaleMargeDesAltgeschaefts = nominaleMargeDesAltgeschaefts;
        return this;
    }

    /**
     * Die nominale Marge des urspr√ºnglichen Gesch√§fts. Wird kein Wert √ºbergeben, wird die Schadensaufteilung in Margen- und Kapitalmarktschaden nicht berechnet.
     *
     * @return nominaleMargeDesAltgeschaefts
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NOMINALE_MARGE_DES_ALTGESCHAEFTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNominaleMargeDesAltgeschaefts() {
        return nominaleMargeDesAltgeschaefts;
    }


    @JsonProperty(JSON_PROPERTY_NOMINALE_MARGE_DES_ALTGESCHAEFTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNominaleMargeDesAltgeschaefts(BigDecimal nominaleMargeDesAltgeschaefts) {
        this.nominaleMargeDesAltgeschaefts = nominaleMargeDesAltgeschaefts;
    }

    public Geschaeftsaenderungsdaten margenschaden(BigDecimal margenschaden) {

        this.margenschaden = margenschaden;
        return this;
    }

    /**
     * Der dem Kreditgeber durch die Gesch√§fts√§nderung entstehende Margenschaden.
     *
     * @return margenschaden
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_MARGENSCHADEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getMargenschaden() {
        return margenschaden;
    }


    @JsonProperty(JSON_PROPERTY_MARGENSCHADEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMargenschaden(BigDecimal margenschaden) {
        this.margenschaden = margenschaden;
    }

    public Geschaeftsaenderungsdaten nettoschaden(BigDecimal nettoschaden) {

        this.nettoschaden = nettoschaden;
        return this;
    }

    /**
     * Der dem Kreditgeber durch die Gesch√§fts√§nderung entstehende Margenschaden.
     *
     * @return nettoschaden
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NETTOSCHADEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNettoschaden() {
        return nettoschaden;
    }


    @JsonProperty(JSON_PROPERTY_NETTOSCHADEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNettoschaden(BigDecimal nettoschaden) {
        this.nettoschaden = nettoschaden;
    }

    public Geschaeftsaenderungsdaten nettoschadenGekappt(BigDecimal nettoschadenGekappt) {

        this.nettoschadenGekappt = nettoschadenGekappt;
        return this;
    }

    /**
     * Der Nettoschaden auf 0 gekappt, wenn er kleiner 0 ist und der Kundennutzen nicht erstattet werden soll.
     *
     * @return nettoschadenGekappt
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NETTOSCHADEN_GEKAPPT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNettoschadenGekappt() {
        return nettoschadenGekappt;
    }


    @JsonProperty(JSON_PROPERTY_NETTOSCHADEN_GEKAPPT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNettoschadenGekappt(BigDecimal nettoschadenGekappt) {
        this.nettoschadenGekappt = nettoschadenGekappt;
    }

    public Geschaeftsaenderungsdaten ausstehendeRate(BigDecimal ausstehendeRate) {

        this.ausstehendeRate = ausstehendeRate;
        return this;
    }

    /**
     * Die H√∂he der Rate am Datum der Gesch√§fts√§nderung.
     *
     * @return ausstehendeRate
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_AUSSTEHENDE_RATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getAusstehendeRate() {
        return ausstehendeRate;
    }


    @JsonProperty(JSON_PROPERTY_AUSSTEHENDE_RATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAusstehendeRate(BigDecimal ausstehendeRate) {
        this.ausstehendeRate = ausstehendeRate;
    }

    public Geschaeftsaenderungsdaten ratenhoeheNachGeschaeftsaenderung(BigDecimal ratenhoeheNachGeschaeftsaenderung) {

        this.ratenhoeheNachGeschaeftsaenderung = ratenhoeheNachGeschaeftsaenderung;
        return this;
    }

    /**
     * Die H√∂he der Rate nach der Gesch√§fts√§nderung.
     *
     * @return ratenhoeheNachGeschaeftsaenderung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_RATENHOEHE_NACH_GESCHAEFTSAENDERUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getRatenhoeheNachGeschaeftsaenderung() {
        return ratenhoeheNachGeschaeftsaenderung;
    }


    @JsonProperty(JSON_PROPERTY_RATENHOEHE_NACH_GESCHAEFTSAENDERUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRatenhoeheNachGeschaeftsaenderung(BigDecimal ratenhoeheNachGeschaeftsaenderung) {
        this.ratenhoeheNachGeschaeftsaenderung = ratenhoeheNachGeschaeftsaenderung;
    }

    public Geschaeftsaenderungsdaten ausstehendeRateAusweisen(Boolean ausstehendeRateAusweisen) {

        this.ausstehendeRateAusweisen = ausstehendeRateAusweisen;
        return this;
    }

    /**
     * Wenn am Datum des zu zahlenden Betrags eine Rate und/oder Zinszahlung f√§llig ist, so kann diese in den zu zahlenden Betrag mit eingerechnet werden.
     *
     * @return ausstehendeRateAusweisen
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_AUSSTEHENDE_RATE_AUSWEISEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAusstehendeRateAusweisen() {
        return ausstehendeRateAusweisen;
    }


    @JsonProperty(JSON_PROPERTY_AUSSTEHENDE_RATE_AUSWEISEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAusstehendeRateAusweisen(Boolean ausstehendeRateAusweisen) {
        this.ausstehendeRateAusweisen = ausstehendeRateAusweisen;
    }

    public Geschaeftsaenderungsdaten risikokosten(BigDecimal risikokosten) {

        this.risikokosten = risikokosten;
        return this;
    }

    /**
     * Durch die Gesch√§fts√§nderung kann sich das Ausfallrisiko des Kredits f√ºr das Kreditinstitut verringern oder ganz entfallen.Die so eingesparten Risikokosten m√ºssen dem Kreditnehmer erstattet werden.Um die ersparten Risikokosten zu berechnen, sind die urspr√ºnglich f√ºr den Kredit ermittelten prozentualen Risikokosten vorzugeben.Die im ausfallenden Zahlungsstrom enthaltenen und somit entfallenden Risikokosten werden mit der vorgegebenen Erstattungsmethode abgegrenzt.
     *
     * @return risikokosten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_RISIKOKOSTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getRisikokosten() {
        return risikokosten;
    }


    @JsonProperty(JSON_PROPERTY_RISIKOKOSTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRisikokosten(BigDecimal risikokosten) {
        this.risikokosten = risikokosten;
    }

    public Geschaeftsaenderungsdaten laufendeVerwaltungskostenRhythmus(LaufendeVerwaltungskostenRhythmus laufendeVerwaltungskostenRhythmus) {

        this.laufendeVerwaltungskostenRhythmus = laufendeVerwaltungskostenRhythmus;
        return this;
    }

    /**
     * Get laufendeVerwaltungskostenRhythmus
     *
     * @return laufendeVerwaltungskostenRhythmus
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_LAUFENDE_VERWALTUNGSKOSTEN_RHYTHMUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LaufendeVerwaltungskostenRhythmus getLaufendeVerwaltungskostenRhythmus() {
        return laufendeVerwaltungskostenRhythmus;
    }


    @JsonProperty(JSON_PROPERTY_LAUFENDE_VERWALTUNGSKOSTEN_RHYTHMUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLaufendeVerwaltungskostenRhythmus(LaufendeVerwaltungskostenRhythmus laufendeVerwaltungskostenRhythmus) {
        this.laufendeVerwaltungskostenRhythmus = laufendeVerwaltungskostenRhythmus;
    }

    public Geschaeftsaenderungsdaten verwaltungskostenAbzinsen(Boolean verwaltungskostenAbzinsen) {

        this.verwaltungskostenAbzinsen = verwaltungskostenAbzinsen;
        return this;
    }

    /**
     * Der Wert steuert, ob der Zahlungsstrom der entfallenden Verwaltungskosten abgezinst werden soll oder nicht.
     *
     * @return verwaltungskostenAbzinsen
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_VERWALTUNGSKOSTEN_ABZINSEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getVerwaltungskostenAbzinsen() {
        return verwaltungskostenAbzinsen;
    }


    @JsonProperty(JSON_PROPERTY_VERWALTUNGSKOSTEN_ABZINSEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVerwaltungskostenAbzinsen(Boolean verwaltungskostenAbzinsen) {
        this.verwaltungskostenAbzinsen = verwaltungskostenAbzinsen;
    }

    public Geschaeftsaenderungsdaten verwaltungskostenAmEnde(BigDecimal verwaltungskostenAmEnde) {

        this.verwaltungskostenAmEnde = verwaltungskostenAmEnde;
        return this;
    }

    /**
     * Die H√∂he der Verwaltungskosten am Ende der Kreditlaufzeit.
     *
     * @return verwaltungskostenAmEnde
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_VERWALTUNGSKOSTEN_AM_ENDE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getVerwaltungskostenAmEnde() {
        return verwaltungskostenAmEnde;
    }


    @JsonProperty(JSON_PROPERTY_VERWALTUNGSKOSTEN_AM_ENDE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVerwaltungskostenAmEnde(BigDecimal verwaltungskostenAmEnde) {
        this.verwaltungskostenAmEnde = verwaltungskostenAmEnde;
    }

    public Geschaeftsaenderungsdaten laufendeVerwaltungskosten(BigDecimal laufendeVerwaltungskosten) {

        this.laufendeVerwaltungskosten = laufendeVerwaltungskosten;
        return this;
    }

    /**
     * Die H√∂he der durch die Gesch√§fts√§nderung eingesparten laufenden Verwaltungskosten.
     *
     * @return laufendeVerwaltungskosten
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_LAUFENDE_VERWALTUNGSKOSTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getLaufendeVerwaltungskosten() {
        return laufendeVerwaltungskosten;
    }


    @JsonProperty(JSON_PROPERTY_LAUFENDE_VERWALTUNGSKOSTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLaufendeVerwaltungskosten(BigDecimal laufendeVerwaltungskosten) {
        this.laufendeVerwaltungskosten = laufendeVerwaltungskosten;
    }

    public Geschaeftsaenderungsdaten vorfaelligerBetrag(BigDecimal vorfaelligerBetrag) {

        this.vorfaelligerBetrag = vorfaelligerBetrag;
        return this;
    }

    /**
     * Der vorf√§llige Betrag der Gesch√§fts√§nderung, entspricht der nominalen Restschuld zzgl. der aufgelaufenen Zinsen zum Zeitpunkt der Gesch√§fts√§nderung).
     *
     * @return vorfaelligerBetrag
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_VORFAELLIGER_BETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getVorfaelligerBetrag() {
        return vorfaelligerBetrag;
    }


    @JsonProperty(JSON_PROPERTY_VORFAELLIGER_BETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVorfaelligerBetrag(BigDecimal vorfaelligerBetrag) {
        this.vorfaelligerBetrag = vorfaelligerBetrag;
    }

    public Geschaeftsaenderungsdaten kumulierterZins(BigDecimal kumulierterZins) {

        this.kumulierterZins = kumulierterZins;
        return this;
    }

    /**
     * Die zwischen dem letzten Zinstermin bis zur Gesch√§fts√§nderung aufgelaufenen Zinsen.
     *
     * @return kumulierterZins
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_KUMULIERTER_ZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getKumulierterZins() {
        return kumulierterZins;
    }


    @JsonProperty(JSON_PROPERTY_KUMULIERTER_ZINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKumulierterZins(BigDecimal kumulierterZins) {
        this.kumulierterZins = kumulierterZins;
    }

    public Geschaeftsaenderungsdaten zuZahlenderBetrag(BigDecimal zuZahlenderBetrag) {

        this.zuZahlenderBetrag = zuZahlenderBetrag;
        return this;
    }

    /**
     * Der zu zahlende Betrag, entspricht der H√∂he des vorf√§lligen Betrags zzgl. Nettoschaden).
     *
     * @return zuZahlenderBetrag
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_ZU_ZAHLENDER_BETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getZuZahlenderBetrag() {
        return zuZahlenderBetrag;
    }


    @JsonProperty(JSON_PROPERTY_ZU_ZAHLENDER_BETRAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setZuZahlenderBetrag(BigDecimal zuZahlenderBetrag) {
        this.zuZahlenderBetrag = zuZahlenderBetrag;
    }

    public Geschaeftsaenderungsdaten kundennutzenErstatten(Boolean kundennutzenErstatten) {

        this.kundennutzenErstatten = kundennutzenErstatten;
        return this;
    }

    /**
     * Steuert, ob ein Kundennutzen, also eine negative Vorf√§lligkeitentsch√§digung,  erstattet werden soll oder nicht.
     *
     * @return kundennutzenErstatten
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_KUNDENNUTZEN_ERSTATTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getKundennutzenErstatten() {
        return kundennutzenErstatten;
    }


    @JsonProperty(JSON_PROPERTY_KUNDENNUTZEN_ERSTATTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKundennutzenErstatten(Boolean kundennutzenErstatten) {
        this.kundennutzenErstatten = kundennutzenErstatten;
    }

    public Geschaeftsaenderungsdaten nettoschadenBegrenztNachBGB502(BigDecimal nettoschadenBegrenztNachBGB502) {

        this.nettoschadenBegrenztNachBGB502 = nettoschadenBegrenztNachBGB502;
        return this;
    }

    /**
     * Nachweis der Nettoschadenbegrenzung nach ¬ß502 BGB.
     *
     * @return nettoschadenBegrenztNachBGB502
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NETTOSCHADEN_BEGRENZT_NACH_B_G_B502)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNettoschadenBegrenztNachBGB502() {
        return nettoschadenBegrenztNachBGB502;
    }


    @JsonProperty(JSON_PROPERTY_NETTOSCHADEN_BEGRENZT_NACH_B_G_B502)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNettoschadenBegrenztNachBGB502(BigDecimal nettoschadenBegrenztNachBGB502) {
        this.nettoschadenBegrenztNachBGB502 = nettoschadenBegrenztNachBGB502;
    }

    public Geschaeftsaenderungsdaten begrenzungNachBGB502(BasisDeckelungVFE begrenzungNachBGB502) {

        this.begrenzungNachBGB502 = begrenzungNachBGB502;
        return this;
    }

    /**
     * Get begrenzungNachBGB502
     *
     * @return begrenzungNachBGB502
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_BEGRENZUNG_NACH_B_G_B502)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BasisDeckelungVFE getBegrenzungNachBGB502() {
        return begrenzungNachBGB502;
    }


    @JsonProperty(JSON_PROPERTY_BEGRENZUNG_NACH_B_G_B502)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBegrenzungNachBGB502(BasisDeckelungVFE begrenzungNachBGB502) {
        this.begrenzungNachBGB502 = begrenzungNachBGB502;
    }

    public Geschaeftsaenderungsdaten disagioerstattung(Disagioerstattung disagioerstattung) {

        this.disagioerstattung = disagioerstattung;
        return this;
    }

    /**
     * Get disagioerstattung
     *
     * @return disagioerstattung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_DISAGIOERSTATTUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Disagioerstattung getDisagioerstattung() {
        return disagioerstattung;
    }


    @JsonProperty(JSON_PROPERTY_DISAGIOERSTATTUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDisagioerstattung(Disagioerstattung disagioerstattung) {
        this.disagioerstattung = disagioerstattung;
    }

    public Geschaeftsaenderungsdaten disagioerstattungZukSotilgrechte(BigDecimal disagioerstattungZukSotilgrechte) {

        this.disagioerstattungZukSotilgrechte = disagioerstattungZukSotilgrechte;
        return this;
    }

    /**
     * Nachweis der Nettoschadenbegrenzung nach ¬ß502 BGB.
     *
     * @return disagioerstattungZukSotilgrechte
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_DISAGIOERSTATTUNG_ZUK_SOTILGRECHTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getDisagioerstattungZukSotilgrechte() {
        return disagioerstattungZukSotilgrechte;
    }


    @JsonProperty(JSON_PROPERTY_DISAGIOERSTATTUNG_ZUK_SOTILGRECHTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDisagioerstattungZukSotilgrechte(BigDecimal disagioerstattungZukSotilgrechte) {
        this.disagioerstattungZukSotilgrechte = disagioerstattungZukSotilgrechte;
    }

    public Geschaeftsaenderungsdaten verrechneteDisagioerstattung(BigDecimal verrechneteDisagioerstattung) {

        this.verrechneteDisagioerstattung = verrechneteDisagioerstattung;
        return this;
    }

    /**
     * Der unverbrauchte Disagioanteil, der auf den durch die Gesch√§fts√§nderung ausfallenden Zahlungsstrom entf√§llt.
     *
     * @return verrechneteDisagioerstattung
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_VERRECHNETE_DISAGIOERSTATTUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getVerrechneteDisagioerstattung() {
        return verrechneteDisagioerstattung;
    }


    @JsonProperty(JSON_PROPERTY_VERRECHNETE_DISAGIOERSTATTUNG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVerrechneteDisagioerstattung(BigDecimal verrechneteDisagioerstattung) {
        this.verrechneteDisagioerstattung = verrechneteDisagioerstattung;
    }

    public Geschaeftsaenderungsdaten nichtVerbrauchtesDisagio(BigDecimal nichtVerbrauchtesDisagio) {

        this.nichtVerbrauchtesDisagio = nichtVerbrauchtesDisagio;
        return this;
    }

    /**
     * Nicht verbrauchtes Disagio.
     *
     * @return nichtVerbrauchtesDisagio
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NICHT_VERBRAUCHTES_DISAGIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getNichtVerbrauchtesDisagio() {
        return nichtVerbrauchtesDisagio;
    }


    @JsonProperty(JSON_PROPERTY_NICHT_VERBRAUCHTES_DISAGIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNichtVerbrauchtesDisagio(BigDecimal nichtVerbrauchtesDisagio) {
        this.nichtVerbrauchtesDisagio = nichtVerbrauchtesDisagio;
    }

    public Geschaeftsaenderungsdaten sondertilgungsrechte(Sondertilgungsrechte sondertilgungsrechte) {

        this.sondertilgungsrechte = sondertilgungsrechte;
        return this;
    }

    /**
     * Get sondertilgungsrechte
     *
     * @return sondertilgungsrechte
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_SONDERTILGUNGSRECHTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Sondertilgungsrechte getSondertilgungsrechte() {
        return sondertilgungsrechte;
    }


    @JsonProperty(JSON_PROPERTY_SONDERTILGUNGSRECHTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSondertilgungsrechte(Sondertilgungsrechte sondertilgungsrechte) {
        this.sondertilgungsrechte = sondertilgungsrechte;
    }

    public Geschaeftsaenderungsdaten tilgungssatzOderRatenwechselrechte(TilgungssatzOderRatenwechselrechte tilgungssatzOderRatenwechselrechte) {

        this.tilgungssatzOderRatenwechselrechte = tilgungssatzOderRatenwechselrechte;
        return this;
    }

    /**
     * Get tilgungssatzOderRatenwechselrechte
     *
     * @return tilgungssatzOderRatenwechselrechte
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_TILGUNGSSATZ_ODER_RATENWECHSELRECHTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TilgungssatzOderRatenwechselrechte getTilgungssatzOderRatenwechselrechte() {
        return tilgungssatzOderRatenwechselrechte;
    }


    @JsonProperty(JSON_PROPERTY_TILGUNGSSATZ_ODER_RATENWECHSELRECHTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTilgungssatzOderRatenwechselrechte(TilgungssatzOderRatenwechselrechte tilgungssatzOderRatenwechselrechte) {
        this.tilgungssatzOderRatenwechselrechte = tilgungssatzOderRatenwechselrechte;
    }

    public Geschaeftsaenderungsdaten wiederanlagesatz(BigDecimal wiederanlagesatz) {

        this.wiederanlagesatz = wiederanlagesatz;
        return this;
    }

    /**
     * Der Einstandssatz zum Zeitpunkt des au√üerplanm√§√üigen Ereignisses.
     *
     * @return wiederanlagesatz
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_WIEDERANLAGESATZ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getWiederanlagesatz() {
        return wiederanlagesatz;
    }


    @JsonProperty(JSON_PROPERTY_WIEDERANLAGESATZ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWiederanlagesatz(BigDecimal wiederanlagesatz) {
        this.wiederanlagesatz = wiederanlagesatz;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Geschaeftsaenderungsdaten geschaeftsaenderungsdaten = (Geschaeftsaenderungsdaten) o;
        return Objects.equals(this.typ, geschaeftsaenderungsdaten.typ) &&
                Objects.equals(this.erstattungsartKulanzUndMargenschaden, geschaeftsaenderungsdaten.erstattungsartKulanzUndMargenschaden) &&
                Objects.equals(this.erstattungsartRisikokosten, geschaeftsaenderungsdaten.erstattungsartRisikokosten) &&
                Objects.equals(this.bruttoschaden, geschaeftsaenderungsdaten.bruttoschaden) &&
                Objects.equals(this.bruttoschadenVorVerrechnung, geschaeftsaenderungsdaten.bruttoschadenVorVerrechnung) &&
                Objects.equals(this.datumGeschaeftsaenderung, geschaeftsaenderungsdaten.datumGeschaeftsaenderung) &&
                Objects.equals(this.datumZuZahlenderBetrag, geschaeftsaenderungsdaten.datumZuZahlenderBetrag) &&
                Objects.equals(this.datumFruehesteKuendigung, geschaeftsaenderungsdaten.datumFruehesteKuendigung) &&
                Objects.equals(this.erstattungEntfallendesRisiko, geschaeftsaenderungsdaten.erstattungEntfallendesRisiko) &&
                Objects.equals(this.erstattungKulanz, geschaeftsaenderungsdaten.erstattungKulanz) &&
                Objects.equals(this.erstattungVerwaltungskosten, geschaeftsaenderungsdaten.erstattungVerwaltungskosten) &&
                Objects.equals(this.hoeheTeilabloesung, geschaeftsaenderungsdaten.hoeheTeilabloesung) &&
                Objects.equals(this.hoeheTeilnichtabnahme, geschaeftsaenderungsdaten.hoeheTeilnichtabnahme) &&
                Objects.equals(this.kapitalmarktschaden, geschaeftsaenderungsdaten.kapitalmarktschaden) &&
                Objects.equals(this.institutsaufwand, geschaeftsaenderungsdaten.institutsaufwand) &&
                Objects.equals(this.kulanz, geschaeftsaenderungsdaten.kulanz) &&
                Objects.equals(this.nominaleMargeDesAltgeschaefts, geschaeftsaenderungsdaten.nominaleMargeDesAltgeschaefts) &&
                Objects.equals(this.margenschaden, geschaeftsaenderungsdaten.margenschaden) &&
                Objects.equals(this.nettoschaden, geschaeftsaenderungsdaten.nettoschaden) &&
                Objects.equals(this.nettoschadenGekappt, geschaeftsaenderungsdaten.nettoschadenGekappt) &&
                Objects.equals(this.ausstehendeRate, geschaeftsaenderungsdaten.ausstehendeRate) &&
                Objects.equals(this.ratenhoeheNachGeschaeftsaenderung, geschaeftsaenderungsdaten.ratenhoeheNachGeschaeftsaenderung) &&
                Objects.equals(this.ausstehendeRateAusweisen, geschaeftsaenderungsdaten.ausstehendeRateAusweisen) &&
                Objects.equals(this.risikokosten, geschaeftsaenderungsdaten.risikokosten) &&
                Objects.equals(this.laufendeVerwaltungskostenRhythmus, geschaeftsaenderungsdaten.laufendeVerwaltungskostenRhythmus) &&
                Objects.equals(this.verwaltungskostenAbzinsen, geschaeftsaenderungsdaten.verwaltungskostenAbzinsen) &&
                Objects.equals(this.verwaltungskostenAmEnde, geschaeftsaenderungsdaten.verwaltungskostenAmEnde) &&
                Objects.equals(this.laufendeVerwaltungskosten, geschaeftsaenderungsdaten.laufendeVerwaltungskosten) &&
                Objects.equals(this.vorfaelligerBetrag, geschaeftsaenderungsdaten.vorfaelligerBetrag) &&
                Objects.equals(this.kumulierterZins, geschaeftsaenderungsdaten.kumulierterZins) &&
                Objects.equals(this.zuZahlenderBetrag, geschaeftsaenderungsdaten.zuZahlenderBetrag) &&
                Objects.equals(this.kundennutzenErstatten, geschaeftsaenderungsdaten.kundennutzenErstatten) &&
                Objects.equals(this.nettoschadenBegrenztNachBGB502, geschaeftsaenderungsdaten.nettoschadenBegrenztNachBGB502) &&
                Objects.equals(this.begrenzungNachBGB502, geschaeftsaenderungsdaten.begrenzungNachBGB502) &&
                Objects.equals(this.disagioerstattung, geschaeftsaenderungsdaten.disagioerstattung) &&
                Objects.equals(this.disagioerstattungZukSotilgrechte, geschaeftsaenderungsdaten.disagioerstattungZukSotilgrechte) &&
                Objects.equals(this.verrechneteDisagioerstattung, geschaeftsaenderungsdaten.verrechneteDisagioerstattung) &&
                Objects.equals(this.nichtVerbrauchtesDisagio, geschaeftsaenderungsdaten.nichtVerbrauchtesDisagio) &&
                Objects.equals(this.sondertilgungsrechte, geschaeftsaenderungsdaten.sondertilgungsrechte) &&
                Objects.equals(this.tilgungssatzOderRatenwechselrechte, geschaeftsaenderungsdaten.tilgungssatzOderRatenwechselrechte) &&
                Objects.equals(this.wiederanlagesatz, geschaeftsaenderungsdaten.wiederanlagesatz);
    }

    @Override
    public int hashCode() {
        return Objects.hash(typ, erstattungsartKulanzUndMargenschaden, erstattungsartRisikokosten, bruttoschaden, bruttoschadenVorVerrechnung, datumGeschaeftsaenderung, datumZuZahlenderBetrag, datumFruehesteKuendigung, erstattungEntfallendesRisiko, erstattungKulanz, erstattungVerwaltungskosten, hoeheTeilabloesung, hoeheTeilnichtabnahme, kapitalmarktschaden, institutsaufwand, kulanz, nominaleMargeDesAltgeschaefts, margenschaden, nettoschaden, nettoschadenGekappt, ausstehendeRate, ratenhoeheNachGeschaeftsaenderung, ausstehendeRateAusweisen, risikokosten, laufendeVerwaltungskostenRhythmus, verwaltungskostenAbzinsen, verwaltungskostenAmEnde, laufendeVerwaltungskosten, vorfaelligerBetrag, kumulierterZins, zuZahlenderBetrag, kundennutzenErstatten, nettoschadenBegrenztNachBGB502, begrenzungNachBGB502, disagioerstattung, disagioerstattungZukSotilgrechte, verrechneteDisagioerstattung, nichtVerbrauchtesDisagio, sondertilgungsrechte, tilgungssatzOderRatenwechselrechte, wiederanlagesatz);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Geschaeftsaenderungsdaten {\n");
        sb.append("    typ: ").append(toIndentedString(typ)).append("\n");
        sb.append("    erstattungsartKulanzUndMargenschaden: ").append(toIndentedString(erstattungsartKulanzUndMargenschaden)).append("\n");
        sb.append("    erstattungsartRisikokosten: ").append(toIndentedString(erstattungsartRisikokosten)).append("\n");
        sb.append("    bruttoschaden: ").append(toIndentedString(bruttoschaden)).append("\n");
        sb.append("    bruttoschadenVorVerrechnung: ").append(toIndentedString(bruttoschadenVorVerrechnung)).append("\n");
        sb.append("    datumGeschaeftsaenderung: ").append(toIndentedString(datumGeschaeftsaenderung)).append("\n");
        sb.append("    datumZuZahlenderBetrag: ").append(toIndentedString(datumZuZahlenderBetrag)).append("\n");
        sb.append("    datumFruehesteKuendigung: ").append(toIndentedString(datumFruehesteKuendigung)).append("\n");
        sb.append("    erstattungEntfallendesRisiko: ").append(toIndentedString(erstattungEntfallendesRisiko)).append("\n");
        sb.append("    erstattungKulanz: ").append(toIndentedString(erstattungKulanz)).append("\n");
        sb.append("    erstattungVerwaltungskosten: ").append(toIndentedString(erstattungVerwaltungskosten)).append("\n");
        sb.append("    hoeheTeilabloesung: ").append(toIndentedString(hoeheTeilabloesung)).append("\n");
        sb.append("    hoeheTeilnichtabnahme: ").append(toIndentedString(hoeheTeilnichtabnahme)).append("\n");
        sb.append("    kapitalmarktschaden: ").append(toIndentedString(kapitalmarktschaden)).append("\n");
        sb.append("    institutsaufwand: ").append(toIndentedString(institutsaufwand)).append("\n");
        sb.append("    kulanz: ").append(toIndentedString(kulanz)).append("\n");
        sb.append("    nominaleMargeDesAltgeschaefts: ").append(toIndentedString(nominaleMargeDesAltgeschaefts)).append("\n");
        sb.append("    margenschaden: ").append(toIndentedString(margenschaden)).append("\n");
        sb.append("    nettoschaden: ").append(toIndentedString(nettoschaden)).append("\n");
        sb.append("    nettoschadenGekappt: ").append(toIndentedString(nettoschadenGekappt)).append("\n");
        sb.append("    ausstehendeRate: ").append(toIndentedString(ausstehendeRate)).append("\n");
        sb.append("    ratenhoeheNachGeschaeftsaenderung: ").append(toIndentedString(ratenhoeheNachGeschaeftsaenderung)).append("\n");
        sb.append("    ausstehendeRateAusweisen: ").append(toIndentedString(ausstehendeRateAusweisen)).append("\n");
        sb.append("    risikokosten: ").append(toIndentedString(risikokosten)).append("\n");
        sb.append("    laufendeVerwaltungskostenRhythmus: ").append(toIndentedString(laufendeVerwaltungskostenRhythmus)).append("\n");
        sb.append("    verwaltungskostenAbzinsen: ").append(toIndentedString(verwaltungskostenAbzinsen)).append("\n");
        sb.append("    verwaltungskostenAmEnde: ").append(toIndentedString(verwaltungskostenAmEnde)).append("\n");
        sb.append("    laufendeVerwaltungskosten: ").append(toIndentedString(laufendeVerwaltungskosten)).append("\n");
        sb.append("    vorfaelligerBetrag: ").append(toIndentedString(vorfaelligerBetrag)).append("\n");
        sb.append("    kumulierterZins: ").append(toIndentedString(kumulierterZins)).append("\n");
        sb.append("    zuZahlenderBetrag: ").append(toIndentedString(zuZahlenderBetrag)).append("\n");
        sb.append("    kundennutzenErstatten: ").append(toIndentedString(kundennutzenErstatten)).append("\n");
        sb.append("    nettoschadenBegrenztNachBGB502: ").append(toIndentedString(nettoschadenBegrenztNachBGB502)).append("\n");
        sb.append("    begrenzungNachBGB502: ").append(toIndentedString(begrenzungNachBGB502)).append("\n");
        sb.append("    disagioerstattung: ").append(toIndentedString(disagioerstattung)).append("\n");
        sb.append("    disagioerstattungZukSotilgrechte: ").append(toIndentedString(disagioerstattungZukSotilgrechte)).append("\n");
        sb.append("    verrechneteDisagioerstattung: ").append(toIndentedString(verrechneteDisagioerstattung)).append("\n");
        sb.append("    nichtVerbrauchtesDisagio: ").append(toIndentedString(nichtVerbrauchtesDisagio)).append("\n");
        sb.append("    sondertilgungsrechte: ").append(toIndentedString(sondertilgungsrechte)).append("\n");
        sb.append("    tilgungssatzOderRatenwechselrechte: ").append(toIndentedString(tilgungssatzOderRatenwechselrechte)).append("\n");
        sb.append("    wiederanlagesatz: ").append(toIndentedString(wiederanlagesatz)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

